{"/home/travis/build/npmtest/node-npmtest-benchmark/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-benchmark/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_benchmark */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-benchmark/lib.npmtest_benchmark.js":{"path":"/home/travis/build/npmtest/node-npmtest-benchmark/lib.npmtest_benchmark.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":54}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":60}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_benchmark */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_benchmark = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_benchmark = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-benchmark/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-benchmark/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":53}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":67},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-benchmark && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_benchmark */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_benchmark","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_benchmark.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_benchmark.rollup.js'] =","            local.assetsDict['/assets.npmtest_benchmark.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_benchmark.__dirname + '/lib.npmtest_benchmark.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-benchmark/node_modules/benchmark/benchmark.js":{"path":"/home/travis/build/npmtest/node-npmtest-benchmark/node_modules/benchmark/benchmark.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":0,"24":0,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":0,"43":1,"44":1,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1,"65":0,"66":0,"67":0,"68":0,"69":0,"70":1,"71":0,"72":0,"73":0,"74":0,"75":1,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":1,"84":0,"85":0,"86":1,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":1,"96":0,"97":1,"98":0,"99":0,"100":1,"101":0,"102":1,"103":0,"104":0,"105":1,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":1,"114":0,"115":1,"116":4,"117":0,"118":4,"119":4,"120":1,"121":0,"122":1,"123":3,"124":3,"125":3,"126":1,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":1,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":1,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":1,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":1,"171":0,"172":0,"173":1,"174":0,"175":1,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":1,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":1,"205":0,"206":0,"207":1,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":1,"233":0,"234":0,"235":0,"236":0,"237":0,"238":1,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":1,"252":0,"253":0,"254":0,"255":0,"256":1,"257":0,"258":0,"259":0,"260":0,"261":0,"262":1,"263":0,"264":0,"265":0,"266":1,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":1,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":1,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":1,"304":0,"305":0,"306":1,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":1,"323":0,"324":0,"325":0,"326":0,"327":1,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":1,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":1,"351":0,"352":0,"353":0,"354":0,"355":1,"356":0,"357":0,"358":1,"359":0,"360":0,"361":1,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":1,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":1,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":1,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":1,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":1,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":1,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":1,"507":0,"508":0,"509":1,"510":0,"511":1,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":1,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":1,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0,"602":1,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":1,"619":0,"620":1,"621":1,"622":7,"623":1,"624":1,"625":1,"626":1,"627":1,"628":1,"629":1,"630":1,"631":1,"632":1,"633":5,"634":5,"635":0,"636":0,"637":0,"638":1,"639":3,"640":3,"641":0,"642":0,"643":0,"644":0,"645":1,"646":0,"647":0,"648":0,"649":1,"650":1,"651":0,"652":0,"653":1,"654":1,"655":1,"656":1,"657":1,"658":0},"b":{"1":[1,0,1],"2":[1,0,0,0],"3":[1,1,1,1],"4":[1,1,1,1],"5":[1,1,1,1],"6":[1,0],"7":[1,1,0,0],"8":[1,1],"9":[1,1,1],"10":[1,0,1,0],"11":[0,1],"12":[0,1],"13":[1,0],"14":[1,1],"15":[1,0],"16":[1,0,0],"17":[1,1],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,4],"46":[4,3,1],"47":[0,0,0],"48":[3,3],"49":[3,1],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0,0,0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0,0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0,0],"173":[0,0],"174":[0,0,0],"175":[0,0],"176":[0,0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0],"183":[0,0],"184":[0,0],"185":[0,0],"186":[0,0],"187":[0,0],"188":[0,0],"189":[0,0],"190":[0,0],"191":[0,0],"192":[0,0],"193":[0,0],"194":[0,0],"195":[0,0],"196":[0,0],"197":[0,0],"198":[0,0],"199":[0,0],"200":[0,0],"201":[0,0],"202":[0,0],"203":[0,0],"204":[0,0],"205":[0,0],"206":[0,0],"207":[0,0],"208":[0,0],"209":[0,0],"210":[0,0],"211":[0,0],"212":[0,0],"213":[0,0],"214":[0,0],"215":[0,0],"216":[0,0],"217":[0,0],"218":[0,0],"219":[0,0],"220":[0,0],"221":[0,0],"222":[0,0],"223":[0,0],"224":[0,0],"225":[0,0],"226":[0,0],"227":[0,0],"228":[0,0],"229":[0,0],"230":[0,0],"231":[0,0],"232":[0,0],"233":[0,0],"234":[0,0],"235":[0,0],"236":[0,0],"237":[0,0],"238":[0,0],"239":[0,0],"240":[0,0],"241":[0,0],"242":[1,1,0],"243":[0,0,0],"244":[0,0],"245":[0,0],"246":[0,1],"247":[1,0,0],"248":[1,0],"249":[1,1],"250":[1,0]},"f":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":4,"20":0,"21":3,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":7,"87":5,"88":0,"89":3,"90":0,"91":0,"92":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":2},"end":{"line":8,"column":13}}},"2":{"name":"runInContext","line":125,"loc":{"start":{"line":125,"column":2},"end":{"line":125,"column":33}}},"3":{"name":"(anonymous_3)","line":197,"loc":{"start":{"line":197,"column":5},"end":{"line":197,"column":16}}},"4":{"name":"(anonymous_4)","line":228,"loc":{"start":{"line":228,"column":25},"end":{"line":228,"column":37}}},"5":{"name":"Benchmark","line":356,"loc":{"start":{"line":356,"column":4},"end":{"line":356,"column":42}}},"6":{"name":"Deferred","line":399,"loc":{"start":{"line":399,"column":4},"end":{"line":399,"column":29}}},"7":{"name":"Event","line":415,"loc":{"start":{"line":415,"column":4},"end":{"line":415,"column":25}}},"8":{"name":"Suite","line":467,"loc":{"start":{"line":467,"column":4},"end":{"line":467,"column":34}}},"9":{"name":"(anonymous_9)","line":495,"loc":{"start":{"line":495,"column":50},"end":{"line":495,"column":66}}},"10":{"name":"createFunction","line":510,"loc":{"start":{"line":510,"column":4},"end":{"line":510,"column":30}}},"11":{"name":"(anonymous_11)","line":512,"loc":{"start":{"line":512,"column":23},"end":{"line":512,"column":44}}},"12":{"name":"delay","line":535,"loc":{"start":{"line":535,"column":4},"end":{"line":535,"column":30}}},"13":{"name":"destroyElement","line":545,"loc":{"start":{"line":545,"column":4},"end":{"line":545,"column":37}}},"14":{"name":"getFirstArgument","line":557,"loc":{"start":{"line":557,"column":4},"end":{"line":557,"column":34}}},"15":{"name":"getMean","line":569,"loc":{"start":{"line":569,"column":4},"end":{"line":569,"column":29}}},"16":{"name":"(anonymous_16)","line":570,"loc":{"start":{"line":570,"column":31},"end":{"line":570,"column":48}}},"17":{"name":"getSource","line":582,"loc":{"start":{"line":582,"column":4},"end":{"line":582,"column":27}}},"18":{"name":"isClassOf","line":607,"loc":{"start":{"line":607,"column":4},"end":{"line":607,"column":36}}},"19":{"name":"isHostType","line":621,"loc":{"start":{"line":621,"column":4},"end":{"line":621,"column":42}}},"20":{"name":"isStringable","line":636,"loc":{"start":{"line":636,"column":4},"end":{"line":636,"column":33}}},"21":{"name":"require","line":647,"loc":{"start":{"line":647,"column":4},"end":{"line":647,"column":25}}},"22":{"name":"runScript","line":660,"loc":{"start":{"line":660,"column":4},"end":{"line":660,"column":29}}},"23":{"name":"(anonymous_23)","line":675,"loc":{"start":{"line":675,"column":23},"end":{"line":675,"column":34}}},"24":{"name":"setOptions","line":692,"loc":{"start":{"line":692,"column":4},"end":{"line":692,"column":41}}},"25":{"name":"(anonymous_25)","line":695,"loc":{"start":{"line":695,"column":24},"end":{"line":695,"column":45}}},"26":{"name":"(anonymous_26)","line":699,"loc":{"start":{"line":699,"column":35},"end":{"line":699,"column":49}}},"27":{"name":"resolve","line":716,"loc":{"start":{"line":716,"column":4},"end":{"line":716,"column":23}}},"28":{"name":"(anonymous_28)","line":733,"loc":{"start":{"line":733,"column":21},"end":{"line":733,"column":32}}},"29":{"name":"filter","line":763,"loc":{"start":{"line":763,"column":4},"end":{"line":763,"column":37}}},"30":{"name":"(anonymous_30)","line":766,"loc":{"start":{"line":766,"column":19},"end":{"line":766,"column":35}}},"31":{"name":"(anonymous_31)","line":772,"loc":{"start":{"line":772,"column":54},"end":{"line":772,"column":69}}},"32":{"name":"(anonymous_32)","line":777,"loc":{"start":{"line":777,"column":32},"end":{"line":777,"column":48}}},"33":{"name":"formatNumber","line":792,"loc":{"start":{"line":792,"column":4},"end":{"line":792,"column":34}}},"34":{"name":"invoke","line":837,"loc":{"start":{"line":837,"column":4},"end":{"line":837,"column":35}}},"35":{"name":"execute","line":849,"loc":{"start":{"line":849,"column":6},"end":{"line":849,"column":25}}},"36":{"name":"getNext","line":868,"loc":{"start":{"line":868,"column":6},"end":{"line":868,"column":30}}},"37":{"name":"isAsync","line":915,"loc":{"start":{"line":915,"column":6},"end":{"line":915,"column":31}}},"38":{"name":"raiseIndex","line":925,"loc":{"start":{"line":925,"column":6},"end":{"line":925,"column":28}}},"39":{"name":"join","line":987,"loc":{"start":{"line":987,"column":4},"end":{"line":987,"column":50}}},"40":{"name":"(anonymous_40)","line":993,"loc":{"start":{"line":993,"column":21},"end":{"line":993,"column":42}}},"41":{"name":"abortSuite","line":1008,"loc":{"start":{"line":1008,"column":4},"end":{"line":1008,"column":26}}},"42":{"name":"add","line":1068,"loc":{"start":{"line":1068,"column":4},"end":{"line":1068,"column":36}}},"43":{"name":"cloneSuite","line":1087,"loc":{"start":{"line":1087,"column":4},"end":{"line":1087,"column":33}}},"44":{"name":"(anonymous_44)","line":1092,"loc":{"start":{"line":1092,"column":22},"end":{"line":1092,"column":43}}},"45":{"name":"filterSuite","line":1110,"loc":{"start":{"line":1110,"column":4},"end":{"line":1110,"column":35}}},"46":{"name":"resetSuite","line":1125,"loc":{"start":{"line":1125,"column":4},"end":{"line":1125,"column":26}}},"47":{"name":"runSuite","line":1162,"loc":{"start":{"line":1162,"column":4},"end":{"line":1162,"column":31}}},"48":{"name":"(anonymous_48)","line":1173,"loc":{"start":{"line":1173,"column":19},"end":{"line":1173,"column":35}}},"49":{"name":"(anonymous_49)","line":1176,"loc":{"start":{"line":1176,"column":19},"end":{"line":1176,"column":35}}},"50":{"name":"(anonymous_50)","line":1184,"loc":{"start":{"line":1184,"column":22},"end":{"line":1184,"column":38}}},"51":{"name":"emit","line":1202,"loc":{"start":{"line":1202,"column":4},"end":{"line":1202,"column":24}}},"52":{"name":"(anonymous_52)","line":1214,"loc":{"start":{"line":1214,"column":34},"end":{"line":1214,"column":53}}},"53":{"name":"listeners","line":1232,"loc":{"start":{"line":1232,"column":4},"end":{"line":1232,"column":29}}},"54":{"name":"off","line":1265,"loc":{"start":{"line":1265,"column":4},"end":{"line":1265,"column":33}}},"55":{"name":"(anonymous_55)","line":1272,"loc":{"start":{"line":1272,"column":46},"end":{"line":1272,"column":72}}},"56":{"name":"on","line":1307,"loc":{"start":{"line":1307,"column":4},"end":{"line":1307,"column":32}}},"57":{"name":"(anonymous_57)","line":1311,"loc":{"start":{"line":1311,"column":30},"end":{"line":1311,"column":45}}},"58":{"name":"abort","line":1328,"loc":{"start":{"line":1328,"column":4},"end":{"line":1328,"column":21}}},"59":{"name":"clone","line":1367,"loc":{"start":{"line":1367,"column":4},"end":{"line":1367,"column":28}}},"60":{"name":"(anonymous_60)","line":1375,"loc":{"start":{"line":1375,"column":22},"end":{"line":1375,"column":43}}},"61":{"name":"compare","line":1391,"loc":{"start":{"line":1391,"column":4},"end":{"line":1391,"column":28}}},"62":{"name":"getScore","line":1410,"loc":{"start":{"line":1410,"column":6},"end":{"line":1410,"column":37}}},"63":{"name":"(anonymous_63)","line":1411,"loc":{"start":{"line":1411,"column":33},"end":{"line":1411,"column":53}}},"64":{"name":"getU","line":1416,"loc":{"start":{"line":1416,"column":6},"end":{"line":1416,"column":38}}},"65":{"name":"(anonymous_65)","line":1417,"loc":{"start":{"line":1417,"column":33},"end":{"line":1417,"column":53}}},"66":{"name":"getZ","line":1422,"loc":{"start":{"line":1422,"column":6},"end":{"line":1422,"column":23}}},"67":{"name":"reset","line":1444,"loc":{"start":{"line":1444,"column":4},"end":{"line":1444,"column":21}}},"68":{"name":"(anonymous_68)","line":1466,"loc":{"start":{"line":1466,"column":30},"end":{"line":1466,"column":51}}},"69":{"name":"(anonymous_69)","line":1511,"loc":{"start":{"line":1511,"column":24},"end":{"line":1511,"column":39}}},"70":{"name":"toStringBench","line":1525,"loc":{"start":{"line":1525,"column":4},"end":{"line":1525,"column":29}}},"71":{"name":"clock","line":1563,"loc":{"start":{"line":1563,"column":4},"end":{"line":1563,"column":21}}},"72":{"name":"(anonymous_72)","line":1569,"loc":{"start":{"line":1569,"column":14},"end":{"line":1569,"column":30}}},"73":{"name":"createCompiled","line":1668,"loc":{"start":{"line":1668,"column":6},"end":{"line":1668,"column":67}}},"74":{"name":"getRes","line":1735,"loc":{"start":{"line":1735,"column":6},"end":{"line":1735,"column":28}}},"75":{"name":"interpolate","line":1784,"loc":{"start":{"line":1784,"column":6},"end":{"line":1784,"column":35}}},"76":{"name":"compute","line":1830,"loc":{"start":{"line":1830,"column":4},"end":{"line":1830,"column":37}}},"77":{"name":"enqueue","line":1843,"loc":{"start":{"line":1843,"column":6},"end":{"line":1843,"column":25}}},"78":{"name":"update","line":1858,"loc":{"start":{"line":1858,"column":6},"end":{"line":1858,"column":29}}},"79":{"name":"evaluate","line":1889,"loc":{"start":{"line":1889,"column":6},"end":{"line":1889,"column":31}}},"80":{"name":"(anonymous_80)","line":1904,"loc":{"start":{"line":1904,"column":20},"end":{"line":1904,"column":37}}},"81":{"name":"(anonymous_81)","line":1971,"loc":{"start":{"line":1971,"column":22},"end":{"line":1971,"column":33}}},"82":{"name":"cycle","line":1984,"loc":{"start":{"line":1984,"column":4},"end":{"line":1984,"column":35}}},"83":{"name":"(anonymous_83)","line":2061,"loc":{"start":{"line":2061,"column":23},"end":{"line":2061,"column":34}}},"84":{"name":"run","line":2093,"loc":{"start":{"line":2093,"column":4},"end":{"line":2093,"column":26}}},"85":{"name":"(anonymous_85)","line":2285,"loc":{"start":{"line":2285,"column":20},"end":{"line":2285,"column":31}}},"86":{"name":"(anonymous_86)","line":2310,"loc":{"start":{"line":2310,"column":77},"end":{"line":2310,"column":98}}},"87":{"name":"(anonymous_87)","line":2758,"loc":{"start":{"line":2758,"column":60},"end":{"line":2758,"column":81}}},"88":{"name":"(anonymous_88)","line":2760,"loc":{"start":{"line":2760,"column":36},"end":{"line":2760,"column":47}}},"89":{"name":"(anonymous_89)","line":2769,"loc":{"start":{"line":2769,"column":39},"end":{"line":2769,"column":60}}},"90":{"name":"(anonymous_90)","line":2772,"loc":{"start":{"line":2772,"column":36},"end":{"line":2772,"column":47}}},"91":{"name":"(anonymous_91)","line":2785,"loc":{"start":{"line":2785,"column":30},"end":{"line":2785,"column":41}}},"92":{"name":"(anonymous_92)","line":2800,"loc":{"start":{"line":2800,"column":35},"end":{"line":2800,"column":57}}}},"statementMap":{"1":{"start":{"line":8,"column":1},"end":{"line":2824,"column":14}},"2":{"start":{"line":12,"column":2},"end":{"line":12,"column":16}},"3":{"start":{"line":15,"column":2},"end":{"line":18,"column":4}},"4":{"start":{"line":21,"column":2},"end":{"line":21,"column":60}},"5":{"start":{"line":24,"column":2},"end":{"line":24,"column":104}},"6":{"start":{"line":27,"column":2},"end":{"line":27,"column":91}},"7":{"start":{"line":30,"column":2},"end":{"line":30,"column":86}},"8":{"start":{"line":33,"column":2},"end":{"line":33,"column":84}},"9":{"start":{"line":34,"column":2},"end":{"line":36,"column":3}},"10":{"start":{"line":35,"column":4},"end":{"line":35,"column":22}},"11":{"start":{"line":39,"column":2},"end":{"line":39,"column":60}},"12":{"start":{"line":42,"column":2},"end":{"line":42,"column":18}},"13":{"start":{"line":45,"column":2},"end":{"line":45,"column":86}},"14":{"start":{"line":48,"column":2},"end":{"line":48,"column":60}},"15":{"start":{"line":51,"column":2},"end":{"line":51,"column":21}},"16":{"start":{"line":54,"column":2},"end":{"line":58,"column":4}},"17":{"start":{"line":61,"column":2},"end":{"line":67,"column":4}},"18":{"start":{"line":73,"column":2},"end":{"line":80,"column":4}},"19":{"start":{"line":86,"column":2},"end":{"line":113,"column":4}},"20":{"start":{"line":125,"column":2},"end":{"line":2792,"column":3}},"21":{"start":{"line":127,"column":4},"end":{"line":127,"column":64}},"22":{"start":{"line":128,"column":4},"end":{"line":131,"column":5}},"23":{"start":{"line":129,"column":6},"end":{"line":129,"column":44}},"24":{"start":{"line":130,"column":6},"end":{"line":130,"column":23}},"25":{"start":{"line":136,"column":4},"end":{"line":136,"column":94}},"26":{"start":{"line":139,"column":4},"end":{"line":145,"column":32}},"27":{"start":{"line":148,"column":4},"end":{"line":149,"column":39}},"28":{"start":{"line":152,"column":4},"end":{"line":165,"column":35}},"29":{"start":{"line":168,"column":4},"end":{"line":168,"column":22}},"30":{"start":{"line":171,"column":4},"end":{"line":171,"column":66}},"31":{"start":{"line":174,"column":4},"end":{"line":174,"column":43}},"32":{"start":{"line":177,"column":4},"end":{"line":177,"column":74}},"33":{"start":{"line":180,"column":4},"end":{"line":180,"column":48}},"34":{"start":{"line":183,"column":4},"end":{"line":183,"column":30}},"35":{"start":{"line":186,"column":4},"end":{"line":186,"column":22}},"36":{"start":{"line":195,"column":4},"end":{"line":195,"column":21}},"37":{"start":{"line":197,"column":4},"end":{"line":235,"column":9}},"38":{"start":{"line":205,"column":6},"end":{"line":205,"column":99}},"39":{"start":{"line":213,"column":6},"end":{"line":213,"column":97}},"40":{"start":{"line":222,"column":6},"end":{"line":234,"column":7}},"41":{"start":{"line":227,"column":8},"end":{"line":231,"column":25}},"42":{"start":{"line":228,"column":39},"end":{"line":228,"column":81}},"43":{"start":{"line":233,"column":8},"end":{"line":233,"column":38}},"44":{"start":{"line":243,"column":4},"end":{"line":271,"column":6}},"45":{"start":{"line":356,"column":4},"end":{"line":390,"column":5}},"46":{"start":{"line":357,"column":6},"end":{"line":357,"column":23}},"47":{"start":{"line":360,"column":6},"end":{"line":362,"column":7}},"48":{"start":{"line":361,"column":8},"end":{"line":361,"column":48}},"49":{"start":{"line":364,"column":6},"end":{"line":382,"column":7}},"50":{"start":{"line":366,"column":8},"end":{"line":366,"column":23}},"51":{"start":{"line":368,"column":11},"end":{"line":382,"column":7}},"52":{"start":{"line":370,"column":8},"end":{"line":370,"column":21}},"53":{"start":{"line":371,"column":8},"end":{"line":371,"column":18}},"54":{"start":{"line":373,"column":11},"end":{"line":382,"column":7}},"55":{"start":{"line":375,"column":8},"end":{"line":375,"column":21}},"56":{"start":{"line":376,"column":8},"end":{"line":376,"column":18}},"57":{"start":{"line":377,"column":8},"end":{"line":377,"column":26}},"58":{"start":{"line":381,"column":8},"end":{"line":381,"column":26}},"59":{"start":{"line":383,"column":6},"end":{"line":383,"column":33}},"60":{"start":{"line":385,"column":6},"end":{"line":385,"column":41}},"61":{"start":{"line":386,"column":6},"end":{"line":386,"column":42}},"62":{"start":{"line":388,"column":6},"end":{"line":388,"column":43}},"63":{"start":{"line":389,"column":6},"end":{"line":389,"column":43}},"64":{"start":{"line":399,"column":4},"end":{"line":406,"column":5}},"65":{"start":{"line":400,"column":6},"end":{"line":400,"column":26}},"66":{"start":{"line":401,"column":6},"end":{"line":403,"column":7}},"67":{"start":{"line":402,"column":8},"end":{"line":402,"column":35}},"68":{"start":{"line":404,"column":6},"end":{"line":404,"column":33}},"69":{"start":{"line":405,"column":6},"end":{"line":405,"column":22}},"70":{"start":{"line":415,"column":4},"end":{"line":423,"column":5}},"71":{"start":{"line":416,"column":6},"end":{"line":416,"column":23}},"72":{"start":{"line":417,"column":6},"end":{"line":419,"column":7}},"73":{"start":{"line":418,"column":8},"end":{"line":418,"column":20}},"74":{"start":{"line":420,"column":6},"end":{"line":422,"column":26}},"75":{"start":{"line":467,"column":4},"end":{"line":483,"column":5}},"76":{"start":{"line":468,"column":6},"end":{"line":468,"column":23}},"77":{"start":{"line":471,"column":6},"end":{"line":473,"column":7}},"78":{"start":{"line":472,"column":8},"end":{"line":472,"column":40}},"79":{"start":{"line":475,"column":6},"end":{"line":481,"column":7}},"80":{"start":{"line":477,"column":8},"end":{"line":477,"column":23}},"81":{"start":{"line":480,"column":8},"end":{"line":480,"column":26}},"82":{"start":{"line":482,"column":6},"end":{"line":482,"column":33}},"83":{"start":{"line":495,"column":4},"end":{"line":500,"column":7}},"84":{"start":{"line":497,"column":6},"end":{"line":499,"column":7}},"85":{"start":{"line":498,"column":8},"end":{"line":498,"column":21}},"86":{"start":{"line":510,"column":4},"end":{"line":526,"column":5}},"87":{"start":{"line":512,"column":6},"end":{"line":521,"column":8}},"88":{"start":{"line":513,"column":8},"end":{"line":515,"column":42}},"89":{"start":{"line":517,"column":8},"end":{"line":517,"column":112}},"90":{"start":{"line":518,"column":8},"end":{"line":518,"column":30}},"91":{"start":{"line":519,"column":8},"end":{"line":519,"column":28}},"92":{"start":{"line":520,"column":8},"end":{"line":520,"column":22}},"93":{"start":{"line":524,"column":6},"end":{"line":524,"column":133}},"94":{"start":{"line":525,"column":6},"end":{"line":525,"column":51}},"95":{"start":{"line":535,"column":4},"end":{"line":537,"column":5}},"96":{"start":{"line":536,"column":6},"end":{"line":536,"column":54}},"97":{"start":{"line":545,"column":4},"end":{"line":548,"column":5}},"98":{"start":{"line":546,"column":6},"end":{"line":546,"column":33}},"99":{"start":{"line":547,"column":6},"end":{"line":547,"column":27}},"100":{"start":{"line":557,"column":4},"end":{"line":560,"column":5}},"101":{"start":{"line":558,"column":6},"end":{"line":559,"column":69}},"102":{"start":{"line":569,"column":4},"end":{"line":573,"column":5}},"103":{"start":{"line":570,"column":6},"end":{"line":572,"column":31}},"104":{"start":{"line":571,"column":8},"end":{"line":571,"column":23}},"105":{"start":{"line":582,"column":4},"end":{"line":597,"column":5}},"106":{"start":{"line":583,"column":6},"end":{"line":583,"column":22}},"107":{"start":{"line":584,"column":6},"end":{"line":589,"column":7}},"108":{"start":{"line":585,"column":8},"end":{"line":585,"column":28}},"109":{"start":{"line":586,"column":13},"end":{"line":589,"column":7}},"110":{"start":{"line":588,"column":8},"end":{"line":588,"column":65}},"111":{"start":{"line":591,"column":6},"end":{"line":591,"column":56}},"112":{"start":{"line":594,"column":6},"end":{"line":596,"column":17}},"113":{"start":{"line":607,"column":4},"end":{"line":609,"column":5}},"114":{"start":{"line":608,"column":6},"end":{"line":608,"column":78}},"115":{"start":{"line":621,"column":4},"end":{"line":627,"column":5}},"116":{"start":{"line":622,"column":6},"end":{"line":624,"column":7}},"117":{"start":{"line":623,"column":8},"end":{"line":623,"column":21}},"118":{"start":{"line":625,"column":6},"end":{"line":625,"column":41}},"119":{"start":{"line":626,"column":6},"end":{"line":626,"column":81}},"120":{"start":{"line":636,"column":4},"end":{"line":638,"column":5}},"121":{"start":{"line":637,"column":6},"end":{"line":637,"column":93}},"122":{"start":{"line":647,"column":4},"end":{"line":652,"column":5}},"123":{"start":{"line":648,"column":6},"end":{"line":650,"column":19}},"124":{"start":{"line":649,"column":8},"end":{"line":649,"column":52}},"125":{"start":{"line":651,"column":6},"end":{"line":651,"column":28}},"126":{"start":{"line":660,"column":4},"end":{"line":683,"column":5}},"127":{"start":{"line":661,"column":6},"end":{"line":666,"column":99}},"128":{"start":{"line":671,"column":6},"end":{"line":680,"column":7}},"129":{"start":{"line":674,"column":8},"end":{"line":674,"column":62}},"130":{"start":{"line":675,"column":8},"end":{"line":675,"column":62}},"131":{"start":{"line":675,"column":36},"end":{"line":675,"column":59}},"132":{"start":{"line":677,"column":8},"end":{"line":677,"column":41}},"133":{"start":{"line":678,"column":8},"end":{"line":678,"column":23}},"134":{"start":{"line":679,"column":8},"end":{"line":679,"column":27}},"135":{"start":{"line":681,"column":6},"end":{"line":681,"column":43}},"136":{"start":{"line":682,"column":6},"end":{"line":682,"column":26}},"137":{"start":{"line":692,"column":4},"end":{"line":707,"column":5}},"138":{"start":{"line":693,"column":6},"end":{"line":693,"column":105}},"139":{"start":{"line":695,"column":6},"end":{"line":706,"column":9}},"140":{"start":{"line":696,"column":8},"end":{"line":705,"column":9}},"141":{"start":{"line":698,"column":10},"end":{"line":704,"column":11}},"142":{"start":{"line":699,"column":12},"end":{"line":701,"column":15}},"143":{"start":{"line":700,"column":14},"end":{"line":700,"column":59}},"144":{"start":{"line":702,"column":17},"end":{"line":704,"column":11}},"145":{"start":{"line":703,"column":12},"end":{"line":703,"column":43}},"146":{"start":{"line":716,"column":4},"end":{"line":735,"column":5}},"147":{"start":{"line":717,"column":6},"end":{"line":719,"column":34}},"148":{"start":{"line":721,"column":6},"end":{"line":734,"column":7}},"149":{"start":{"line":723,"column":8},"end":{"line":723,"column":28}},"150":{"start":{"line":724,"column":8},"end":{"line":724,"column":30}},"151":{"start":{"line":725,"column":8},"end":{"line":725,"column":24}},"152":{"start":{"line":727,"column":11},"end":{"line":734,"column":7}},"153":{"start":{"line":728,"column":8},"end":{"line":728,"column":54}},"154":{"start":{"line":731,"column":8},"end":{"line":731,"column":29}},"155":{"start":{"line":732,"column":8},"end":{"line":732,"column":28}},"156":{"start":{"line":733,"column":8},"end":{"line":733,"column":54}},"157":{"start":{"line":733,"column":34},"end":{"line":733,"column":50}},"158":{"start":{"line":763,"column":4},"end":{"line":782,"column":5}},"159":{"start":{"line":764,"column":6},"end":{"line":780,"column":7}},"160":{"start":{"line":766,"column":8},"end":{"line":768,"column":10}},"161":{"start":{"line":767,"column":10},"end":{"line":767,"column":70}},"162":{"start":{"line":770,"column":11},"end":{"line":780,"column":7}},"163":{"start":{"line":772,"column":8},"end":{"line":775,"column":11}},"164":{"start":{"line":773,"column":10},"end":{"line":773,"column":22}},"165":{"start":{"line":773,"column":23},"end":{"line":773,"column":35}},"166":{"start":{"line":774,"column":10},"end":{"line":774,"column":96}},"167":{"start":{"line":777,"column":8},"end":{"line":779,"column":11}},"168":{"start":{"line":778,"column":10},"end":{"line":778,"column":47}},"169":{"start":{"line":781,"column":6},"end":{"line":781,"column":39}},"170":{"start":{"line":792,"column":4},"end":{"line":796,"column":5}},"171":{"start":{"line":793,"column":6},"end":{"line":793,"column":41}},"172":{"start":{"line":794,"column":6},"end":{"line":795,"column":43}},"173":{"start":{"line":837,"column":4},"end":{"line":975,"column":5}},"174":{"start":{"line":838,"column":6},"end":{"line":844,"column":38}},"175":{"start":{"line":849,"column":6},"end":{"line":863,"column":7}},"176":{"start":{"line":850,"column":8},"end":{"line":851,"column":35}},"177":{"start":{"line":853,"column":8},"end":{"line":858,"column":9}},"178":{"start":{"line":855,"column":10},"end":{"line":855,"column":40}},"179":{"start":{"line":856,"column":10},"end":{"line":856,"column":44}},"180":{"start":{"line":857,"column":10},"end":{"line":857,"column":50}},"181":{"start":{"line":860,"column":8},"end":{"line":860,"column":104}},"182":{"start":{"line":862,"column":8},"end":{"line":862,"column":35}},"183":{"start":{"line":868,"column":6},"end":{"line":910,"column":7}},"184":{"start":{"line":869,"column":8},"end":{"line":871,"column":34}},"185":{"start":{"line":873,"column":8},"end":{"line":876,"column":9}},"186":{"start":{"line":874,"column":10},"end":{"line":874,"column":40}},"187":{"start":{"line":875,"column":10},"end":{"line":875,"column":32}},"188":{"start":{"line":878,"column":8},"end":{"line":878,"column":34}},"189":{"start":{"line":879,"column":8},"end":{"line":879,"column":33}},"190":{"start":{"line":880,"column":8},"end":{"line":880,"column":39}},"191":{"start":{"line":881,"column":8},"end":{"line":881,"column":50}},"192":{"start":{"line":884,"column":8},"end":{"line":901,"column":9}},"193":{"start":{"line":885,"column":10},"end":{"line":885,"column":54}},"194":{"start":{"line":886,"column":10},"end":{"line":896,"column":11}},"195":{"start":{"line":887,"column":12},"end":{"line":887,"column":34}},"196":{"start":{"line":889,"column":15},"end":{"line":896,"column":11}},"197":{"start":{"line":891,"column":12},"end":{"line":891,"column":32}},"198":{"start":{"line":895,"column":12},"end":{"line":895,"column":24}},"199":{"start":{"line":899,"column":10},"end":{"line":899,"column":39}},"200":{"start":{"line":900,"column":10},"end":{"line":900,"column":62}},"201":{"start":{"line":905,"column":8},"end":{"line":909,"column":9}},"202":{"start":{"line":906,"column":10},"end":{"line":906,"column":31}},"203":{"start":{"line":908,"column":10},"end":{"line":908,"column":23}},"204":{"start":{"line":915,"column":6},"end":{"line":920,"column":7}},"205":{"start":{"line":917,"column":8},"end":{"line":917,"column":45}},"206":{"start":{"line":918,"column":8},"end":{"line":919,"column":94}},"207":{"start":{"line":925,"column":6},"end":{"line":936,"column":7}},"208":{"start":{"line":926,"column":8},"end":{"line":926,"column":16}},"209":{"start":{"line":929,"column":8},"end":{"line":931,"column":9}},"210":{"start":{"line":930,"column":10},"end":{"line":930,"column":30}},"211":{"start":{"line":933,"column":8},"end":{"line":935,"column":28}},"212":{"start":{"line":938,"column":6},"end":{"line":947,"column":7}},"213":{"start":{"line":940,"column":8},"end":{"line":940,"column":40}},"214":{"start":{"line":943,"column":8},"end":{"line":943,"column":42}},"215":{"start":{"line":944,"column":8},"end":{"line":944,"column":28}},"216":{"start":{"line":945,"column":8},"end":{"line":945,"column":87}},"217":{"start":{"line":946,"column":8},"end":{"line":946,"column":32}},"218":{"start":{"line":949,"column":6},"end":{"line":973,"column":7}},"219":{"start":{"line":951,"column":8},"end":{"line":951,"column":30}},"220":{"start":{"line":952,"column":8},"end":{"line":952,"column":34}},"221":{"start":{"line":953,"column":8},"end":{"line":953,"column":34}},"222":{"start":{"line":954,"column":8},"end":{"line":954,"column":57}},"223":{"start":{"line":957,"column":8},"end":{"line":972,"column":9}},"224":{"start":{"line":959,"column":10},"end":{"line":959,"column":36}},"225":{"start":{"line":960,"column":10},"end":{"line":960,"column":59}},"226":{"start":{"line":962,"column":10},"end":{"line":962,"column":39}},"227":{"start":{"line":963,"column":10},"end":{"line":963,"column":62}},"228":{"start":{"line":967,"column":10},"end":{"line":971,"column":11}},"229":{"start":{"line":968,"column":12},"end":{"line":968,"column":34}},"230":{"start":{"line":970,"column":12},"end":{"line":970,"column":32}},"231":{"start":{"line":974,"column":6},"end":{"line":974,"column":20}},"232":{"start":{"line":987,"column":4},"end":{"line":997,"column":5}},"233":{"start":{"line":988,"column":6},"end":{"line":990,"column":46}},"234":{"start":{"line":992,"column":6},"end":{"line":992,"column":40}},"235":{"start":{"line":993,"column":6},"end":{"line":995,"column":9}},"236":{"start":{"line":994,"column":8},"end":{"line":994,"column":66}},"237":{"start":{"line":996,"column":6},"end":{"line":996,"column":44}},"238":{"start":{"line":1008,"column":4},"end":{"line":1029,"column":5}},"239":{"start":{"line":1009,"column":6},"end":{"line":1011,"column":42}},"240":{"start":{"line":1013,"column":6},"end":{"line":1027,"column":7}},"241":{"start":{"line":1014,"column":8},"end":{"line":1014,"column":31}},"242":{"start":{"line":1015,"column":8},"end":{"line":1015,"column":26}},"243":{"start":{"line":1016,"column":8},"end":{"line":1026,"column":9}},"244":{"start":{"line":1018,"column":10},"end":{"line":1018,"column":37}},"245":{"start":{"line":1019,"column":10},"end":{"line":1019,"column":24}},"246":{"start":{"line":1020,"column":10},"end":{"line":1020,"column":37}},"247":{"start":{"line":1022,"column":10},"end":{"line":1025,"column":11}},"248":{"start":{"line":1023,"column":12},"end":{"line":1023,"column":33}},"249":{"start":{"line":1024,"column":12},"end":{"line":1024,"column":35}},"250":{"start":{"line":1028,"column":6},"end":{"line":1028,"column":19}},"251":{"start":{"line":1068,"column":4},"end":{"line":1077,"column":5}},"252":{"start":{"line":1069,"column":6},"end":{"line":1071,"column":60}},"253":{"start":{"line":1073,"column":6},"end":{"line":1075,"column":7}},"254":{"start":{"line":1074,"column":8},"end":{"line":1074,"column":26}},"255":{"start":{"line":1076,"column":6},"end":{"line":1076,"column":19}},"256":{"start":{"line":1087,"column":4},"end":{"line":1100,"column":5}},"257":{"start":{"line":1088,"column":6},"end":{"line":1089,"column":79}},"258":{"start":{"line":1092,"column":6},"end":{"line":1098,"column":9}},"259":{"start":{"line":1093,"column":8},"end":{"line":1097,"column":9}},"260":{"start":{"line":1094,"column":10},"end":{"line":1096,"column":31}},"261":{"start":{"line":1099,"column":6},"end":{"line":1099,"column":20}},"262":{"start":{"line":1110,"column":4},"end":{"line":1116,"column":5}},"263":{"start":{"line":1111,"column":6},"end":{"line":1112,"column":56}},"264":{"start":{"line":1114,"column":6},"end":{"line":1114,"column":57}},"265":{"start":{"line":1115,"column":6},"end":{"line":1115,"column":20}},"266":{"start":{"line":1125,"column":4},"end":{"line":1145,"column":5}},"267":{"start":{"line":1126,"column":6},"end":{"line":1128,"column":41}},"268":{"start":{"line":1130,"column":6},"end":{"line":1143,"column":7}},"269":{"start":{"line":1132,"column":8},"end":{"line":1132,"column":35}},"270":{"start":{"line":1133,"column":8},"end":{"line":1133,"column":22}},"271":{"start":{"line":1134,"column":8},"end":{"line":1134,"column":35}},"272":{"start":{"line":1137,"column":11},"end":{"line":1143,"column":7}},"273":{"start":{"line":1139,"column":8},"end":{"line":1139,"column":46}},"274":{"start":{"line":1140,"column":8},"end":{"line":1142,"column":9}},"275":{"start":{"line":1141,"column":10},"end":{"line":1141,"column":33}},"276":{"start":{"line":1144,"column":6},"end":{"line":1144,"column":19}},"277":{"start":{"line":1162,"column":4},"end":{"line":1190,"column":5}},"278":{"start":{"line":1163,"column":6},"end":{"line":1163,"column":23}},"279":{"start":{"line":1165,"column":6},"end":{"line":1165,"column":20}},"280":{"start":{"line":1166,"column":6},"end":{"line":1166,"column":27}},"281":{"start":{"line":1167,"column":6},"end":{"line":1167,"column":32}},"282":{"start":{"line":1169,"column":6},"end":{"line":1188,"column":9}},"283":{"start":{"line":1174,"column":10},"end":{"line":1174,"column":28}},"284":{"start":{"line":1177,"column":10},"end":{"line":1177,"column":35}},"285":{"start":{"line":1178,"column":10},"end":{"line":1180,"column":11}},"286":{"start":{"line":1179,"column":12},"end":{"line":1179,"column":61}},"287":{"start":{"line":1181,"column":10},"end":{"line":1181,"column":28}},"288":{"start":{"line":1182,"column":10},"end":{"line":1182,"column":40}},"289":{"start":{"line":1185,"column":10},"end":{"line":1185,"column":32}},"290":{"start":{"line":1186,"column":10},"end":{"line":1186,"column":28}},"291":{"start":{"line":1189,"column":6},"end":{"line":1189,"column":19}},"292":{"start":{"line":1202,"column":4},"end":{"line":1222,"column":5}},"293":{"start":{"line":1203,"column":6},"end":{"line":1207,"column":51}},"294":{"start":{"line":1209,"column":6},"end":{"line":1209,"column":60}},"295":{"start":{"line":1210,"column":6},"end":{"line":1210,"column":46}},"296":{"start":{"line":1211,"column":6},"end":{"line":1211,"column":26}},"297":{"start":{"line":1213,"column":6},"end":{"line":1220,"column":7}},"298":{"start":{"line":1214,"column":8},"end":{"line":1219,"column":11}},"299":{"start":{"line":1215,"column":10},"end":{"line":1217,"column":11}},"300":{"start":{"line":1216,"column":12},"end":{"line":1216,"column":35}},"301":{"start":{"line":1218,"column":10},"end":{"line":1218,"column":32}},"302":{"start":{"line":1221,"column":6},"end":{"line":1221,"column":26}},"303":{"start":{"line":1232,"column":4},"end":{"line":1237,"column":5}},"304":{"start":{"line":1233,"column":6},"end":{"line":1234,"column":57}},"305":{"start":{"line":1236,"column":6},"end":{"line":1236,"column":70}},"306":{"start":{"line":1265,"column":4},"end":{"line":1290,"column":5}},"307":{"start":{"line":1266,"column":6},"end":{"line":1267,"column":33}},"308":{"start":{"line":1269,"column":6},"end":{"line":1271,"column":7}},"309":{"start":{"line":1270,"column":8},"end":{"line":1270,"column":22}},"310":{"start":{"line":1272,"column":6},"end":{"line":1288,"column":9}},"311":{"start":{"line":1273,"column":8},"end":{"line":1273,"column":18}},"312":{"start":{"line":1274,"column":8},"end":{"line":1277,"column":9}},"313":{"start":{"line":1275,"column":10},"end":{"line":1275,"column":27}},"314":{"start":{"line":1276,"column":10},"end":{"line":1276,"column":58}},"315":{"start":{"line":1278,"column":8},"end":{"line":1287,"column":9}},"316":{"start":{"line":1279,"column":10},"end":{"line":1286,"column":11}},"317":{"start":{"line":1280,"column":12},"end":{"line":1280,"column":51}},"318":{"start":{"line":1281,"column":12},"end":{"line":1283,"column":13}},"319":{"start":{"line":1282,"column":14},"end":{"line":1282,"column":41}},"320":{"start":{"line":1285,"column":12},"end":{"line":1285,"column":33}},"321":{"start":{"line":1289,"column":6},"end":{"line":1289,"column":20}},"322":{"start":{"line":1307,"column":4},"end":{"line":1318,"column":5}},"323":{"start":{"line":1308,"column":6},"end":{"line":1309,"column":57}},"324":{"start":{"line":1311,"column":6},"end":{"line":1316,"column":9}},"325":{"start":{"line":1312,"column":8},"end":{"line":1315,"column":25}},"326":{"start":{"line":1317,"column":6},"end":{"line":1317,"column":20}},"327":{"start":{"line":1328,"column":4},"end":{"line":1353,"column":5}},"328":{"start":{"line":1329,"column":6},"end":{"line":1331,"column":37}},"329":{"start":{"line":1333,"column":6},"end":{"line":1351,"column":7}},"330":{"start":{"line":1334,"column":8},"end":{"line":1334,"column":31}},"331":{"start":{"line":1335,"column":8},"end":{"line":1335,"column":26}},"332":{"start":{"line":1336,"column":8},"end":{"line":1350,"column":9}},"333":{"start":{"line":1338,"column":10},"end":{"line":1338,"column":32}},"334":{"start":{"line":1339,"column":10},"end":{"line":1339,"column":24}},"335":{"start":{"line":1340,"column":10},"end":{"line":1340,"column":32}},"336":{"start":{"line":1342,"column":10},"end":{"line":1345,"column":11}},"337":{"start":{"line":1343,"column":12},"end":{"line":1343,"column":41}},"338":{"start":{"line":1344,"column":12},"end":{"line":1344,"column":34}},"339":{"start":{"line":1346,"column":10},"end":{"line":1349,"column":11}},"340":{"start":{"line":1347,"column":12},"end":{"line":1347,"column":33}},"341":{"start":{"line":1348,"column":12},"end":{"line":1348,"column":34}},"342":{"start":{"line":1352,"column":6},"end":{"line":1352,"column":19}},"343":{"start":{"line":1367,"column":4},"end":{"line":1382,"column":5}},"344":{"start":{"line":1368,"column":6},"end":{"line":1369,"column":71}},"345":{"start":{"line":1372,"column":6},"end":{"line":1372,"column":82}},"346":{"start":{"line":1375,"column":6},"end":{"line":1379,"column":9}},"347":{"start":{"line":1376,"column":8},"end":{"line":1378,"column":9}},"348":{"start":{"line":1377,"column":10},"end":{"line":1377,"column":41}},"349":{"start":{"line":1381,"column":6},"end":{"line":1381,"column":20}},"350":{"start":{"line":1391,"column":4},"end":{"line":1436,"column":5}},"351":{"start":{"line":1392,"column":6},"end":{"line":1392,"column":23}},"352":{"start":{"line":1395,"column":6},"end":{"line":1397,"column":7}},"353":{"start":{"line":1396,"column":8},"end":{"line":1396,"column":17}},"354":{"start":{"line":1398,"column":6},"end":{"line":1408,"column":26}},"355":{"start":{"line":1410,"column":6},"end":{"line":1414,"column":7}},"356":{"start":{"line":1411,"column":8},"end":{"line":1413,"column":14}},"357":{"start":{"line":1412,"column":10},"end":{"line":1412,"column":59}},"358":{"start":{"line":1416,"column":6},"end":{"line":1420,"column":7}},"359":{"start":{"line":1417,"column":8},"end":{"line":1419,"column":14}},"360":{"start":{"line":1418,"column":10},"end":{"line":1418,"column":47}},"361":{"start":{"line":1422,"column":6},"end":{"line":1424,"column":7}},"362":{"start":{"line":1423,"column":8},"end":{"line":1423,"column":94}},"363":{"start":{"line":1427,"column":6},"end":{"line":1432,"column":7}},"364":{"start":{"line":1430,"column":8},"end":{"line":1430,"column":24}},"365":{"start":{"line":1431,"column":8},"end":{"line":1431,"column":58}},"366":{"start":{"line":1434,"column":6},"end":{"line":1434,"column":79}},"367":{"start":{"line":1435,"column":6},"end":{"line":1435,"column":52}},"368":{"start":{"line":1444,"column":4},"end":{"line":1516,"column":5}},"369":{"start":{"line":1445,"column":6},"end":{"line":1445,"column":23}},"370":{"start":{"line":1446,"column":6},"end":{"line":1452,"column":7}},"371":{"start":{"line":1448,"column":8},"end":{"line":1448,"column":30}},"372":{"start":{"line":1449,"column":8},"end":{"line":1449,"column":22}},"373":{"start":{"line":1450,"column":8},"end":{"line":1450,"column":30}},"374":{"start":{"line":1451,"column":8},"end":{"line":1451,"column":21}},"375":{"start":{"line":1453,"column":6},"end":{"line":1456,"column":21}},"376":{"start":{"line":1460,"column":6},"end":{"line":1463,"column":8}},"377":{"start":{"line":1465,"column":6},"end":{"line":1506,"column":38}},"378":{"start":{"line":1466,"column":8},"end":{"line":1504,"column":11}},"379":{"start":{"line":1467,"column":10},"end":{"line":1469,"column":43}},"380":{"start":{"line":1472,"column":10},"end":{"line":1474,"column":11}},"381":{"start":{"line":1473,"column":12},"end":{"line":1473,"column":19}},"382":{"start":{"line":1475,"column":10},"end":{"line":1503,"column":11}},"383":{"start":{"line":1476,"column":12},"end":{"line":1493,"column":13}},"384":{"start":{"line":1478,"column":14},"end":{"line":1481,"column":15}},"385":{"start":{"line":1479,"column":16},"end":{"line":1479,"column":31}},"386":{"start":{"line":1480,"column":16},"end":{"line":1480,"column":31}},"387":{"start":{"line":1483,"column":14},"end":{"line":1487,"column":15}},"388":{"start":{"line":1484,"column":16},"end":{"line":1484,"column":31}},"389":{"start":{"line":1485,"column":16},"end":{"line":1485,"column":61}},"390":{"start":{"line":1486,"column":16},"end":{"line":1486,"column":48}},"391":{"start":{"line":1490,"column":17},"end":{"line":1493,"column":13}},"392":{"start":{"line":1491,"column":14},"end":{"line":1491,"column":29}},"393":{"start":{"line":1492,"column":14},"end":{"line":1492,"column":29}},"394":{"start":{"line":1495,"column":12},"end":{"line":1497,"column":13}},"395":{"start":{"line":1496,"column":14},"end":{"line":1496,"column":91}},"396":{"start":{"line":1498,"column":12},"end":{"line":1498,"column":70}},"397":{"start":{"line":1501,"column":15},"end":{"line":1503,"column":11}},"398":{"start":{"line":1502,"column":12},"end":{"line":1502,"column":85}},"399":{"start":{"line":1509,"column":6},"end":{"line":1514,"column":7}},"400":{"start":{"line":1511,"column":8},"end":{"line":1513,"column":11}},"401":{"start":{"line":1512,"column":10},"end":{"line":1512,"column":50}},"402":{"start":{"line":1515,"column":6},"end":{"line":1515,"column":19}},"403":{"start":{"line":1525,"column":4},"end":{"line":1552,"column":5}},"404":{"start":{"line":1526,"column":6},"end":{"line":1533,"column":75}},"405":{"start":{"line":1535,"column":6},"end":{"line":1550,"column":7}},"406":{"start":{"line":1536,"column":8},"end":{"line":1536,"column":21}},"407":{"start":{"line":1537,"column":8},"end":{"line":1544,"column":9}},"408":{"start":{"line":1538,"column":10},"end":{"line":1538,"column":35}},"409":{"start":{"line":1539,"column":15},"end":{"line":1544,"column":9}},"410":{"start":{"line":1540,"column":10},"end":{"line":1540,"column":33}},"411":{"start":{"line":1543,"column":10},"end":{"line":1543,"column":93}},"412":{"start":{"line":1545,"column":8},"end":{"line":1545,"column":34}},"413":{"start":{"line":1548,"column":8},"end":{"line":1549,"column":94}},"414":{"start":{"line":1551,"column":6},"end":{"line":1551,"column":20}},"415":{"start":{"line":1563,"column":4},"end":{"line":1819,"column":5}},"416":{"start":{"line":1564,"column":6},"end":{"line":1566,"column":88}},"417":{"start":{"line":1569,"column":6},"end":{"line":1661,"column":8}},"418":{"start":{"line":1570,"column":8},"end":{"line":1570,"column":21}},"419":{"start":{"line":1572,"column":8},"end":{"line":1575,"column":9}},"420":{"start":{"line":1573,"column":10},"end":{"line":1573,"column":27}},"421":{"start":{"line":1574,"column":10},"end":{"line":1574,"column":37}},"422":{"start":{"line":1576,"column":8},"end":{"line":1582,"column":23}},"423":{"start":{"line":1585,"column":8},"end":{"line":1585,"column":99}},"424":{"start":{"line":1590,"column":8},"end":{"line":1606,"column":86}},"425":{"start":{"line":1608,"column":8},"end":{"line":1609,"column":55}},"426":{"start":{"line":1611,"column":8},"end":{"line":1628,"column":9}},"427":{"start":{"line":1612,"column":10},"end":{"line":1623,"column":11}},"428":{"start":{"line":1615,"column":12},"end":{"line":1615,"column":110}},"429":{"start":{"line":1617,"column":15},"end":{"line":1623,"column":11}},"430":{"start":{"line":1620,"column":12},"end":{"line":1620,"column":28}},"431":{"start":{"line":1621,"column":12},"end":{"line":1621,"column":120}},"432":{"start":{"line":1622,"column":12},"end":{"line":1622,"column":32}},"433":{"start":{"line":1625,"column":10},"end":{"line":1625,"column":26}},"434":{"start":{"line":1626,"column":10},"end":{"line":1626,"column":50}},"435":{"start":{"line":1627,"column":10},"end":{"line":1627,"column":30}},"436":{"start":{"line":1630,"column":8},"end":{"line":1654,"column":9}},"437":{"start":{"line":1631,"column":10},"end":{"line":1637,"column":59}},"438":{"start":{"line":1639,"column":10},"end":{"line":1639,"column":77}},"439":{"start":{"line":1641,"column":10},"end":{"line":1653,"column":11}},"440":{"start":{"line":1643,"column":12},"end":{"line":1643,"column":28}},"441":{"start":{"line":1644,"column":12},"end":{"line":1644,"column":49}},"442":{"start":{"line":1645,"column":12},"end":{"line":1645,"column":32}},"443":{"start":{"line":1646,"column":12},"end":{"line":1646,"column":31}},"444":{"start":{"line":1649,"column":12},"end":{"line":1649,"column":32}},"445":{"start":{"line":1650,"column":12},"end":{"line":1652,"column":13}},"446":{"start":{"line":1651,"column":14},"end":{"line":1651,"column":54}},"447":{"start":{"line":1656,"column":8},"end":{"line":1659,"column":9}},"448":{"start":{"line":1657,"column":10},"end":{"line":1657,"column":111}},"449":{"start":{"line":1658,"column":10},"end":{"line":1658,"column":76}},"450":{"start":{"line":1660,"column":8},"end":{"line":1660,"column":22}},"451":{"start":{"line":1668,"column":6},"end":{"line":1730,"column":7}},"452":{"start":{"line":1669,"column":8},"end":{"line":1670,"column":71}},"453":{"start":{"line":1672,"column":8},"end":{"line":1672,"column":46}},"454":{"start":{"line":1674,"column":8},"end":{"line":1679,"column":11}},"455":{"start":{"line":1682,"column":8},"end":{"line":1712,"column":9}},"456":{"start":{"line":1683,"column":10},"end":{"line":1686,"column":13}},"457":{"start":{"line":1688,"column":13},"end":{"line":1712,"column":9}},"458":{"start":{"line":1689,"column":10},"end":{"line":1699,"column":11}},"459":{"start":{"line":1690,"column":12},"end":{"line":1693,"column":15}},"460":{"start":{"line":1695,"column":12},"end":{"line":1698,"column":15}},"461":{"start":{"line":1701,"column":13},"end":{"line":1712,"column":9}},"462":{"start":{"line":1702,"column":10},"end":{"line":1705,"column":13}},"463":{"start":{"line":1708,"column":10},"end":{"line":1711,"column":13}},"464":{"start":{"line":1714,"column":8},"end":{"line":1717,"column":10}},"465":{"start":{"line":1719,"column":8},"end":{"line":1722,"column":10}},"466":{"start":{"line":1725,"column":8},"end":{"line":1729,"column":10}},"467":{"start":{"line":1735,"column":6},"end":{"line":1779,"column":7}},"468":{"start":{"line":1736,"column":8},"end":{"line":1741,"column":24}},"469":{"start":{"line":1744,"column":8},"end":{"line":1776,"column":9}},"470":{"start":{"line":1745,"column":10},"end":{"line":1768,"column":11}},"471":{"start":{"line":1746,"column":12},"end":{"line":1746,"column":26}},"472":{"start":{"line":1747,"column":12},"end":{"line":1753,"column":13}},"473":{"start":{"line":1748,"column":14},"end":{"line":1748,"column":25}},"474":{"start":{"line":1749,"column":14},"end":{"line":1749,"column":56}},"475":{"start":{"line":1751,"column":14},"end":{"line":1751,"column":27}},"476":{"start":{"line":1752,"column":14},"end":{"line":1752,"column":51}},"477":{"start":{"line":1755,"column":15},"end":{"line":1768,"column":11}},"478":{"start":{"line":1756,"column":12},"end":{"line":1756,"column":26}},"479":{"start":{"line":1757,"column":12},"end":{"line":1757,"column":61}},"480":{"start":{"line":1758,"column":12},"end":{"line":1758,"column":93}},"481":{"start":{"line":1759,"column":12},"end":{"line":1759,"column":24}},"482":{"start":{"line":1761,"column":15},"end":{"line":1768,"column":11}},"483":{"start":{"line":1762,"column":12},"end":{"line":1762,"column":29}},"484":{"start":{"line":1763,"column":12},"end":{"line":1763,"column":53}},"485":{"start":{"line":1766,"column":12},"end":{"line":1766,"column":39}},"486":{"start":{"line":1767,"column":12},"end":{"line":1767,"column":63}},"487":{"start":{"line":1770,"column":10},"end":{"line":1775,"column":11}},"488":{"start":{"line":1771,"column":12},"end":{"line":1771,"column":34}},"489":{"start":{"line":1773,"column":12},"end":{"line":1773,"column":34}},"490":{"start":{"line":1774,"column":12},"end":{"line":1774,"column":18}},"491":{"start":{"line":1778,"column":8},"end":{"line":1778,"column":41}},"492":{"start":{"line":1784,"column":6},"end":{"line":1787,"column":7}},"493":{"start":{"line":1786,"column":8},"end":{"line":1786,"column":93}},"494":{"start":{"line":1794,"column":6},"end":{"line":1798,"column":19}},"495":{"start":{"line":1795,"column":8},"end":{"line":1797,"column":9}},"496":{"start":{"line":1796,"column":10},"end":{"line":1796,"column":77}},"497":{"start":{"line":1801,"column":6},"end":{"line":1803,"column":7}},"498":{"start":{"line":1802,"column":8},"end":{"line":1802,"column":75}},"499":{"start":{"line":1805,"column":6},"end":{"line":1807,"column":7}},"500":{"start":{"line":1806,"column":8},"end":{"line":1806,"column":76}},"501":{"start":{"line":1809,"column":6},"end":{"line":1809,"column":37}},"502":{"start":{"line":1812,"column":6},"end":{"line":1814,"column":7}},"503":{"start":{"line":1813,"column":8},"end":{"line":1813,"column":76}},"504":{"start":{"line":1817,"column":6},"end":{"line":1817,"column":77}},"505":{"start":{"line":1818,"column":6},"end":{"line":1818,"column":42}},"506":{"start":{"line":1830,"column":4},"end":{"line":1973,"column":5}},"507":{"start":{"line":1831,"column":6},"end":{"line":1831,"column":32}},"508":{"start":{"line":1833,"column":6},"end":{"line":1838,"column":38}},"509":{"start":{"line":1843,"column":6},"end":{"line":1853,"column":7}},"510":{"start":{"line":1844,"column":8},"end":{"line":1852,"column":12}},"511":{"start":{"line":1858,"column":6},"end":{"line":1884,"column":7}},"512":{"start":{"line":1859,"column":8},"end":{"line":1860,"column":30}},"513":{"start":{"line":1862,"column":8},"end":{"line":1883,"column":9}},"514":{"start":{"line":1863,"column":10},"end":{"line":1878,"column":11}},"515":{"start":{"line":1865,"column":12},"end":{"line":1865,"column":42}},"516":{"start":{"line":1868,"column":12},"end":{"line":1870,"column":13}},"517":{"start":{"line":1869,"column":14},"end":{"line":1869,"column":40}},"518":{"start":{"line":1871,"column":12},"end":{"line":1877,"column":13}},"519":{"start":{"line":1872,"column":14},"end":{"line":1872,"column":28}},"520":{"start":{"line":1873,"column":14},"end":{"line":1873,"column":34}},"521":{"start":{"line":1875,"column":14},"end":{"line":1875,"column":57}},"522":{"start":{"line":1876,"column":14},"end":{"line":1876,"column":32}},"523":{"start":{"line":1879,"column":15},"end":{"line":1883,"column":9}},"524":{"start":{"line":1881,"column":10},"end":{"line":1881,"column":40}},"525":{"start":{"line":1882,"column":10},"end":{"line":1882,"column":24}},"526":{"start":{"line":1889,"column":6},"end":{"line":1962,"column":7}},"527":{"start":{"line":1890,"column":8},"end":{"line":1904,"column":72}},"528":{"start":{"line":1904,"column":39},"end":{"line":1904,"column":69}},"529":{"start":{"line":1907,"column":8},"end":{"line":1909,"column":9}},"530":{"start":{"line":1908,"column":10},"end":{"line":1908,"column":64}},"531":{"start":{"line":1911,"column":8},"end":{"line":1955,"column":9}},"532":{"start":{"line":1913,"column":10},"end":{"line":1913,"column":33}},"533":{"start":{"line":1915,"column":10},"end":{"line":1915,"column":66}},"534":{"start":{"line":1917,"column":10},"end":{"line":1917,"column":30}},"535":{"start":{"line":1919,"column":10},"end":{"line":1919,"column":32}},"536":{"start":{"line":1921,"column":10},"end":{"line":1921,"column":24}},"537":{"start":{"line":1923,"column":10},"end":{"line":1923,"column":68}},"538":{"start":{"line":1925,"column":10},"end":{"line":1925,"column":31}},"539":{"start":{"line":1927,"column":10},"end":{"line":1927,"column":40}},"540":{"start":{"line":1929,"column":10},"end":{"line":1936,"column":13}},"541":{"start":{"line":1943,"column":10},"end":{"line":1949,"column":11}},"542":{"start":{"line":1945,"column":12},"end":{"line":1945,"column":40}},"543":{"start":{"line":1946,"column":12},"end":{"line":1946,"column":34}},"544":{"start":{"line":1947,"column":12},"end":{"line":1947,"column":24}},"545":{"start":{"line":1948,"column":12},"end":{"line":1948,"column":58}},"546":{"start":{"line":1950,"column":10},"end":{"line":1954,"column":11}},"547":{"start":{"line":1951,"column":12},"end":{"line":1951,"column":32}},"548":{"start":{"line":1952,"column":12},"end":{"line":1952,"column":45}},"549":{"start":{"line":1953,"column":12},"end":{"line":1953,"column":32}},"550":{"start":{"line":1957,"column":8},"end":{"line":1959,"column":9}},"551":{"start":{"line":1958,"column":10},"end":{"line":1958,"column":20}},"552":{"start":{"line":1961,"column":8},"end":{"line":1961,"column":29}},"553":{"start":{"line":1965,"column":6},"end":{"line":1965,"column":16}},"554":{"start":{"line":1966,"column":6},"end":{"line":1972,"column":9}},"555":{"start":{"line":1971,"column":35},"end":{"line":1971,"column":58}},"556":{"start":{"line":1984,"column":4},"end":{"line":2075,"column":5}},"557":{"start":{"line":1985,"column":6},"end":{"line":1985,"column":32}},"558":{"start":{"line":1987,"column":6},"end":{"line":1987,"column":19}},"559":{"start":{"line":1988,"column":6},"end":{"line":1991,"column":7}},"560":{"start":{"line":1989,"column":8},"end":{"line":1989,"column":25}},"561":{"start":{"line":1990,"column":8},"end":{"line":1990,"column":32}},"562":{"start":{"line":1992,"column":6},"end":{"line":2001,"column":30}},"563":{"start":{"line":2004,"column":6},"end":{"line":2021,"column":7}},"564":{"start":{"line":2006,"column":8},"end":{"line":2006,"column":32}},"565":{"start":{"line":2007,"column":8},"end":{"line":2007,"column":61}},"566":{"start":{"line":2008,"column":8},"end":{"line":2008,"column":32}},"567":{"start":{"line":2010,"column":8},"end":{"line":2012,"column":9}},"568":{"start":{"line":2011,"column":10},"end":{"line":2011,"column":32}},"569":{"start":{"line":2013,"column":8},"end":{"line":2020,"column":9}},"570":{"start":{"line":2014,"column":10},"end":{"line":2014,"column":33}},"571":{"start":{"line":2015,"column":10},"end":{"line":2015,"column":38}},"572":{"start":{"line":2016,"column":10},"end":{"line":2016,"column":28}},"573":{"start":{"line":2017,"column":10},"end":{"line":2019,"column":11}},"574":{"start":{"line":2018,"column":12},"end":{"line":2018,"column":26}},"575":{"start":{"line":2023,"column":6},"end":{"line":2047,"column":7}},"576":{"start":{"line":2025,"column":8},"end":{"line":2025,"column":50}},"577":{"start":{"line":2027,"column":8},"end":{"line":2027,"column":69}},"578":{"start":{"line":2029,"column":8},"end":{"line":2029,"column":41}},"579":{"start":{"line":2031,"column":8},"end":{"line":2031,"column":50}},"580":{"start":{"line":2033,"column":8},"end":{"line":2033,"column":42}},"581":{"start":{"line":2035,"column":8},"end":{"line":2046,"column":9}},"582":{"start":{"line":2038,"column":10},"end":{"line":2040,"column":11}},"583":{"start":{"line":2039,"column":12},"end":{"line":2039,"column":41}},"584":{"start":{"line":2042,"column":10},"end":{"line":2044,"column":11}},"585":{"start":{"line":2043,"column":12},"end":{"line":2043,"column":61}},"586":{"start":{"line":2045,"column":10},"end":{"line":2045,"column":44}},"587":{"start":{"line":2049,"column":6},"end":{"line":2049,"column":29}},"588":{"start":{"line":2050,"column":6},"end":{"line":2050,"column":24}},"589":{"start":{"line":2051,"column":6},"end":{"line":2053,"column":7}},"590":{"start":{"line":2052,"column":8},"end":{"line":2052,"column":22}},"591":{"start":{"line":2055,"column":6},"end":{"line":2074,"column":7}},"592":{"start":{"line":2057,"column":8},"end":{"line":2057,"column":28}},"593":{"start":{"line":2058,"column":8},"end":{"line":2064,"column":9}},"594":{"start":{"line":2059,"column":10},"end":{"line":2059,"column":56}},"595":{"start":{"line":2060,"column":15},"end":{"line":2064,"column":9}},"596":{"start":{"line":2061,"column":10},"end":{"line":2061,"column":62}},"597":{"start":{"line":2061,"column":36},"end":{"line":2061,"column":58}},"598":{"start":{"line":2063,"column":10},"end":{"line":2063,"column":23}},"599":{"start":{"line":2069,"column":8},"end":{"line":2071,"column":9}},"600":{"start":{"line":2070,"column":10},"end":{"line":2070,"column":46}},"601":{"start":{"line":2073,"column":8},"end":{"line":2073,"column":31}},"602":{"start":{"line":2093,"column":4},"end":{"line":2123,"column":5}},"603":{"start":{"line":2094,"column":6},"end":{"line":2095,"column":33}},"604":{"start":{"line":2098,"column":6},"end":{"line":2098,"column":28}},"605":{"start":{"line":2099,"column":6},"end":{"line":2099,"column":20}},"606":{"start":{"line":2100,"column":6},"end":{"line":2100,"column":27}},"607":{"start":{"line":2102,"column":6},"end":{"line":2102,"column":36}},"608":{"start":{"line":2103,"column":6},"end":{"line":2103,"column":38}},"609":{"start":{"line":2104,"column":6},"end":{"line":2104,"column":24}},"610":{"start":{"line":2106,"column":6},"end":{"line":2121,"column":7}},"611":{"start":{"line":2107,"column":8},"end":{"line":2107,"column":121}},"612":{"start":{"line":2110,"column":8},"end":{"line":2120,"column":9}},"613":{"start":{"line":2111,"column":10},"end":{"line":2115,"column":11}},"614":{"start":{"line":2112,"column":12},"end":{"line":2112,"column":28}},"615":{"start":{"line":2114,"column":12},"end":{"line":2114,"column":34}},"616":{"start":{"line":2119,"column":10},"end":{"line":2119,"column":34}},"617":{"start":{"line":2122,"column":6},"end":{"line":2122,"column":19}},"618":{"start":{"line":2133,"column":4},"end":{"line":2298,"column":7}},"619":{"start":{"line":2286,"column":10},"end":{"line":2286,"column":40}},"620":{"start":{"line":2300,"column":4},"end":{"line":2307,"column":7}},"621":{"start":{"line":2310,"column":4},"end":{"line":2312,"column":7}},"622":{"start":{"line":2311,"column":6},"end":{"line":2311,"column":44}},"623":{"start":{"line":2316,"column":4},"end":{"line":2558,"column":7}},"624":{"start":{"line":2560,"column":4},"end":{"line":2571,"column":7}},"625":{"start":{"line":2575,"column":4},"end":{"line":2608,"column":7}},"626":{"start":{"line":2610,"column":4},"end":{"line":2612,"column":7}},"627":{"start":{"line":2616,"column":4},"end":{"line":2673,"column":7}},"628":{"start":{"line":2684,"column":4},"end":{"line":2693,"column":6}},"629":{"start":{"line":2697,"column":4},"end":{"line":2722,"column":7}},"630":{"start":{"line":2724,"column":4},"end":{"line":2744,"column":7}},"631":{"start":{"line":2749,"column":4},"end":{"line":2753,"column":7}},"632":{"start":{"line":2758,"column":4},"end":{"line":2765,"column":7}},"633":{"start":{"line":2759,"column":6},"end":{"line":2759,"column":31}},"634":{"start":{"line":2760,"column":6},"end":{"line":2764,"column":8}},"635":{"start":{"line":2761,"column":8},"end":{"line":2761,"column":26}},"636":{"start":{"line":2762,"column":8},"end":{"line":2762,"column":36}},"637":{"start":{"line":2763,"column":8},"end":{"line":2763,"column":35}},"638":{"start":{"line":2769,"column":4},"end":{"line":2781,"column":7}},"639":{"start":{"line":2770,"column":6},"end":{"line":2770,"column":38}},"640":{"start":{"line":2772,"column":6},"end":{"line":2780,"column":8}},"641":{"start":{"line":2773,"column":8},"end":{"line":2774,"column":50}},"642":{"start":{"line":2776,"column":8},"end":{"line":2778,"column":9}},"643":{"start":{"line":2777,"column":10},"end":{"line":2777,"column":26}},"644":{"start":{"line":2779,"column":8},"end":{"line":2779,"column":22}},"645":{"start":{"line":2785,"column":4},"end":{"line":2789,"column":6}},"646":{"start":{"line":2786,"column":6},"end":{"line":2786,"column":23}},"647":{"start":{"line":2787,"column":6},"end":{"line":2787,"column":38}},"648":{"start":{"line":2788,"column":6},"end":{"line":2788,"column":26}},"649":{"start":{"line":2791,"column":4},"end":{"line":2791,"column":21}},"650":{"start":{"line":2798,"column":2},"end":{"line":2823,"column":3}},"651":{"start":{"line":2800,"column":4},"end":{"line":2805,"column":7}},"652":{"start":{"line":2801,"column":6},"end":{"line":2804,"column":9}},"653":{"start":{"line":2808,"column":4},"end":{"line":2808,"column":35}},"654":{"start":{"line":2811,"column":4},"end":{"line":2822,"column":5}},"655":{"start":{"line":2813,"column":6},"end":{"line":2815,"column":7}},"656":{"start":{"line":2814,"column":8},"end":{"line":2814,"column":63}},"657":{"start":{"line":2817,"column":6},"end":{"line":2817,"column":40}},"658":{"start":{"line":2821,"column":6},"end":{"line":2821,"column":33}}},"branchMap":{"1":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":14},"end":{"line":21,"column":40}},{"start":{"line":21,"column":44},"end":{"line":21,"column":50}},{"start":{"line":21,"column":55},"end":{"line":21,"column":59}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":19},"end":{"line":24,"column":46}},{"start":{"line":24,"column":50},"end":{"line":24,"column":79}},{"start":{"line":24,"column":83},"end":{"line":24,"column":93}},{"start":{"line":24,"column":97},"end":{"line":24,"column":103}}]},"3":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":20},"end":{"line":27,"column":47}},{"start":{"line":27,"column":51},"end":{"line":27,"column":58}},{"start":{"line":27,"column":62},"end":{"line":27,"column":79}},{"start":{"line":27,"column":83},"end":{"line":27,"column":90}}]},"4":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":19},"end":{"line":30,"column":45}},{"start":{"line":30,"column":49},"end":{"line":30,"column":55}},{"start":{"line":30,"column":59},"end":{"line":30,"column":75}},{"start":{"line":30,"column":79},"end":{"line":30,"column":85}}]},"5":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":19},"end":{"line":33,"column":30}},{"start":{"line":33,"column":34},"end":{"line":33,"column":44}},{"start":{"line":33,"column":48},"end":{"line":33,"column":73}},{"start":{"line":33,"column":77},"end":{"line":33,"column":83}}]},"6":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"7":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":6},"end":{"line":34,"column":16}},{"start":{"line":34,"column":21},"end":{"line":34,"column":53}},{"start":{"line":34,"column":57},"end":{"line":34,"column":89}},{"start":{"line":34,"column":93},"end":{"line":34,"column":123}}]},"8":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":20},"end":{"line":39,"column":48}},{"start":{"line":39,"column":52},"end":{"line":39,"column":59}}]},"9":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":22},"end":{"line":45,"column":32}},{"start":{"line":45,"column":36},"end":{"line":45,"column":70}},{"start":{"line":45,"column":74},"end":{"line":45,"column":85}}]},"10":{"line":127,"type":"binary-expr","locations":[{"start":{"line":127,"column":12},"end":{"line":127,"column":19}},{"start":{"line":127,"column":23},"end":{"line":127,"column":32}},{"start":{"line":127,"column":36},"end":{"line":127,"column":53}},{"start":{"line":127,"column":57},"end":{"line":127,"column":63}}]},"11":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":4},"end":{"line":128,"column":4}},{"start":{"line":128,"column":4},"end":{"line":128,"column":4}}]},"12":{"line":136,"type":"cond-expr","locations":[{"start":{"line":136,"column":24},"end":{"line":136,"column":86}},{"start":{"line":136,"column":89},"end":{"line":136,"column":93}}]},"13":{"line":171,"type":"binary-expr","locations":[{"start":{"line":171,"column":14},"end":{"line":171,"column":45}},{"start":{"line":171,"column":49},"end":{"line":171,"column":65}}]},"14":{"line":177,"type":"binary-expr","locations":[{"start":{"line":177,"column":24},"end":{"line":177,"column":54}},{"start":{"line":177,"column":58},"end":{"line":177,"column":73}}]},"15":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":16},"end":{"line":180,"column":19}},{"start":{"line":180,"column":23},"end":{"line":180,"column":47}}]},"16":{"line":205,"type":"binary-expr","locations":[{"start":{"line":205,"column":24},"end":{"line":205,"column":27}},{"start":{"line":205,"column":31},"end":{"line":205,"column":63}},{"start":{"line":205,"column":67},"end":{"line":205,"column":98}}]},"17":{"line":213,"type":"binary-expr","locations":[{"start":{"line":213,"column":24},"end":{"line":213,"column":57}},{"start":{"line":213,"column":61},"end":{"line":213,"column":96}}]},"18":{"line":360,"type":"if","locations":[{"start":{"line":360,"column":6},"end":{"line":360,"column":6}},{"start":{"line":360,"column":6},"end":{"line":360,"column":6}}]},"19":{"line":364,"type":"if","locations":[{"start":{"line":364,"column":6},"end":{"line":364,"column":6}},{"start":{"line":364,"column":6},"end":{"line":364,"column":6}}]},"20":{"line":368,"type":"if","locations":[{"start":{"line":368,"column":11},"end":{"line":368,"column":11}},{"start":{"line":368,"column":11},"end":{"line":368,"column":11}}]},"21":{"line":373,"type":"if","locations":[{"start":{"line":373,"column":11},"end":{"line":373,"column":11}},{"start":{"line":373,"column":11},"end":{"line":373,"column":11}}]},"22":{"line":385,"type":"binary-expr","locations":[{"start":{"line":385,"column":6},"end":{"line":385,"column":14}},{"start":{"line":385,"column":19},"end":{"line":385,"column":39}}]},"23":{"line":386,"type":"binary-expr","locations":[{"start":{"line":386,"column":6},"end":{"line":386,"column":22}},{"start":{"line":386,"column":27},"end":{"line":386,"column":40}}]},"24":{"line":401,"type":"if","locations":[{"start":{"line":401,"column":6},"end":{"line":401,"column":6}},{"start":{"line":401,"column":6},"end":{"line":401,"column":6}}]},"25":{"line":417,"type":"if","locations":[{"start":{"line":417,"column":6},"end":{"line":417,"column":6}},{"start":{"line":417,"column":6},"end":{"line":417,"column":6}}]},"26":{"line":420,"type":"cond-expr","locations":[{"start":{"line":421,"column":10},"end":{"line":421,"column":102}},{"start":{"line":422,"column":10},"end":{"line":422,"column":25}}]},"27":{"line":421,"type":"cond-expr","locations":[{"start":{"line":421,"column":78},"end":{"line":421,"column":94}},{"start":{"line":421,"column":97},"end":{"line":421,"column":101}}]},"28":{"line":471,"type":"if","locations":[{"start":{"line":471,"column":6},"end":{"line":471,"column":6}},{"start":{"line":471,"column":6},"end":{"line":471,"column":6}}]},"29":{"line":475,"type":"if","locations":[{"start":{"line":475,"column":6},"end":{"line":475,"column":6}},{"start":{"line":475,"column":6},"end":{"line":475,"column":6}}]},"30":{"line":497,"type":"if","locations":[{"start":{"line":497,"column":6},"end":{"line":497,"column":6}},{"start":{"line":497,"column":6},"end":{"line":497,"column":6}}]},"31":{"line":497,"type":"binary-expr","locations":[{"start":{"line":497,"column":10},"end":{"line":497,"column":27}},{"start":{"line":497,"column":31},"end":{"line":497,"column":54}}]},"32":{"line":514,"type":"cond-expr","locations":[{"start":{"line":514,"column":34},"end":{"line":514,"column":48}},{"start":{"line":514,"column":51},"end":{"line":514,"column":60}}]},"33":{"line":517,"type":"cond-expr","locations":[{"start":{"line":517,"column":32},"end":{"line":517,"column":45}},{"start":{"line":517,"column":48},"end":{"line":517,"column":60}}]},"34":{"line":524,"type":"cond-expr","locations":[{"start":{"line":524,"column":107},"end":{"line":524,"column":121}},{"start":{"line":524,"column":124},"end":{"line":524,"column":132}}]},"35":{"line":524,"type":"binary-expr","locations":[{"start":{"line":524,"column":23},"end":{"line":524,"column":38}},{"start":{"line":524,"column":42},"end":{"line":524,"column":104}}]},"36":{"line":524,"type":"binary-expr","locations":[{"start":{"line":524,"column":43},"end":{"line":524,"column":84}},{"start":{"line":524,"column":88},"end":{"line":524,"column":94}}]},"37":{"line":558,"type":"binary-expr","locations":[{"start":{"line":558,"column":14},"end":{"line":558,"column":36}},{"start":{"line":559,"column":8},"end":{"line":559,"column":61}},{"start":{"line":559,"column":66},"end":{"line":559,"column":68}}]},"38":{"line":559,"type":"binary-expr","locations":[{"start":{"line":559,"column":9},"end":{"line":559,"column":52}},{"start":{"line":559,"column":56},"end":{"line":559,"column":57}}]},"39":{"line":570,"type":"binary-expr","locations":[{"start":{"line":570,"column":14},"end":{"line":572,"column":24}},{"start":{"line":572,"column":29},"end":{"line":572,"column":30}}]},"40":{"line":584,"type":"if","locations":[{"start":{"line":584,"column":6},"end":{"line":584,"column":6}},{"start":{"line":584,"column":6},"end":{"line":584,"column":6}}]},"41":{"line":586,"type":"if","locations":[{"start":{"line":586,"column":13},"end":{"line":586,"column":13}},{"start":{"line":586,"column":13},"end":{"line":586,"column":13}}]},"42":{"line":591,"type":"binary-expr","locations":[{"start":{"line":591,"column":16},"end":{"line":591,"column":22}},{"start":{"line":591,"column":26},"end":{"line":591,"column":28}}]},"43":{"line":594,"type":"cond-expr","locations":[{"start":{"line":595,"column":10},"end":{"line":595,"column":12}},{"start":{"line":596,"column":10},"end":{"line":596,"column":16}}]},"44":{"line":608,"type":"binary-expr","locations":[{"start":{"line":608,"column":13},"end":{"line":608,"column":26}},{"start":{"line":608,"column":30},"end":{"line":608,"column":77}}]},"45":{"line":622,"type":"if","locations":[{"start":{"line":622,"column":6},"end":{"line":622,"column":6}},{"start":{"line":622,"column":6},"end":{"line":622,"column":6}}]},"46":{"line":626,"type":"binary-expr","locations":[{"start":{"line":626,"column":13},"end":{"line":626,"column":36}},{"start":{"line":626,"column":41},"end":{"line":626,"column":57}},{"start":{"line":626,"column":61},"end":{"line":626,"column":79}}]},"47":{"line":637,"type":"binary-expr","locations":[{"start":{"line":637,"column":13},"end":{"line":637,"column":30}},{"start":{"line":637,"column":35},"end":{"line":637,"column":59}},{"start":{"line":637,"column":63},"end":{"line":637,"column":91}}]},"48":{"line":649,"type":"binary-expr","locations":[{"start":{"line":649,"column":21},"end":{"line":649,"column":32}},{"start":{"line":649,"column":36},"end":{"line":649,"column":51}}]},"49":{"line":651,"type":"binary-expr","locations":[{"start":{"line":651,"column":13},"end":{"line":651,"column":19}},{"start":{"line":651,"column":23},"end":{"line":651,"column":27}}]},"50":{"line":661,"type":"cond-expr","locations":[{"start":{"line":661,"column":32},"end":{"line":661,"column":42}},{"start":{"line":661,"column":45},"end":{"line":661,"column":54}}]},"51":{"line":666,"type":"cond-expr","locations":[{"start":{"line":666,"column":39},"end":{"line":666,"column":52}},{"start":{"line":666,"column":55},"end":{"line":666,"column":67}}]},"52":{"line":696,"type":"if","locations":[{"start":{"line":696,"column":8},"end":{"line":696,"column":8}},{"start":{"line":696,"column":8},"end":{"line":696,"column":8}}]},"53":{"line":698,"type":"if","locations":[{"start":{"line":698,"column":10},"end":{"line":698,"column":10}},{"start":{"line":698,"column":10},"end":{"line":698,"column":10}}]},"54":{"line":702,"type":"if","locations":[{"start":{"line":702,"column":17},"end":{"line":702,"column":17}},{"start":{"line":702,"column":17},"end":{"line":702,"column":17}}]},"55":{"line":721,"type":"if","locations":[{"start":{"line":721,"column":6},"end":{"line":721,"column":6}},{"start":{"line":721,"column":6},"end":{"line":721,"column":6}}]},"56":{"line":727,"type":"if","locations":[{"start":{"line":727,"column":11},"end":{"line":727,"column":11}},{"start":{"line":727,"column":11},"end":{"line":727,"column":11}}]},"57":{"line":764,"type":"if","locations":[{"start":{"line":764,"column":6},"end":{"line":764,"column":6}},{"start":{"line":764,"column":6},"end":{"line":764,"column":6}}]},"58":{"line":767,"type":"binary-expr","locations":[{"start":{"line":767,"column":17},"end":{"line":767,"column":29}},{"start":{"line":767,"column":33},"end":{"line":767,"column":53}},{"start":{"line":767,"column":57},"end":{"line":767,"column":69}}]},"59":{"line":770,"type":"if","locations":[{"start":{"line":770,"column":11},"end":{"line":770,"column":11}},{"start":{"line":770,"column":11},"end":{"line":770,"column":11}}]},"60":{"line":770,"type":"binary-expr","locations":[{"start":{"line":770,"column":15},"end":{"line":770,"column":37}},{"start":{"line":770,"column":41},"end":{"line":770,"column":63}}]},"61":{"line":774,"type":"cond-expr","locations":[{"start":{"line":774,"column":52},"end":{"line":774,"column":53}},{"start":{"line":774,"column":56},"end":{"line":774,"column":58}}]},"62":{"line":774,"type":"cond-expr","locations":[{"start":{"line":774,"column":88},"end":{"line":774,"column":89}},{"start":{"line":774,"column":92},"end":{"line":774,"column":94}}]},"63":{"line":795,"type":"cond-expr","locations":[{"start":{"line":795,"column":21},"end":{"line":795,"column":36}},{"start":{"line":795,"column":39},"end":{"line":795,"column":41}}]},"64":{"line":853,"type":"if","locations":[{"start":{"line":853,"column":8},"end":{"line":853,"column":8}},{"start":{"line":853,"column":8},"end":{"line":853,"column":8}}]},"65":{"line":860,"type":"cond-expr","locations":[{"start":{"line":860,"column":61},"end":{"line":860,"column":91}},{"start":{"line":860,"column":94},"end":{"line":860,"column":103}}]},"66":{"line":860,"type":"binary-expr","locations":[{"start":{"line":860,"column":37},"end":{"line":860,"column":42}},{"start":{"line":860,"column":46},"end":{"line":860,"column":57}}]},"67":{"line":862,"type":"binary-expr","locations":[{"start":{"line":862,"column":15},"end":{"line":862,"column":21}},{"start":{"line":862,"column":25},"end":{"line":862,"column":34}}]},"68":{"line":873,"type":"if","locations":[{"start":{"line":873,"column":8},"end":{"line":873,"column":8}},{"start":{"line":873,"column":8},"end":{"line":873,"column":8}}]},"69":{"line":884,"type":"if","locations":[{"start":{"line":884,"column":8},"end":{"line":884,"column":8}},{"start":{"line":884,"column":8},"end":{"line":884,"column":8}}]},"70":{"line":884,"type":"binary-expr","locations":[{"start":{"line":884,"column":12},"end":{"line":884,"column":31}},{"start":{"line":884,"column":35},"end":{"line":884,"column":57}}]},"71":{"line":885,"type":"cond-expr","locations":[{"start":{"line":885,"column":27},"end":{"line":885,"column":37}},{"start":{"line":885,"column":40},"end":{"line":885,"column":53}}]},"72":{"line":886,"type":"if","locations":[{"start":{"line":886,"column":10},"end":{"line":886,"column":10}},{"start":{"line":886,"column":10},"end":{"line":886,"column":10}}]},"73":{"line":889,"type":"if","locations":[{"start":{"line":889,"column":15},"end":{"line":889,"column":15}},{"start":{"line":889,"column":15},"end":{"line":889,"column":15}}]},"74":{"line":905,"type":"if","locations":[{"start":{"line":905,"column":8},"end":{"line":905,"column":8}},{"start":{"line":905,"column":8},"end":{"line":905,"column":8}}]},"75":{"line":917,"type":"binary-expr","locations":[{"start":{"line":917,"column":20},"end":{"line":917,"column":27}},{"start":{"line":917,"column":31},"end":{"line":917,"column":44}}]},"76":{"line":918,"type":"binary-expr","locations":[{"start":{"line":918,"column":15},"end":{"line":918,"column":28}},{"start":{"line":918,"column":33},"end":{"line":918,"column":60}},{"start":{"line":919,"column":12},"end":{"line":919,"column":56}},{"start":{"line":919,"column":61},"end":{"line":919,"column":76}},{"start":{"line":919,"column":80},"end":{"line":919,"column":92}}]},"77":{"line":919,"type":"cond-expr","locations":[{"start":{"line":919,"column":28},"end":{"line":919,"column":48}},{"start":{"line":919,"column":51},"end":{"line":919,"column":56}}]},"78":{"line":929,"type":"if","locations":[{"start":{"line":929,"column":8},"end":{"line":929,"column":8}},{"start":{"line":929,"column":8},"end":{"line":929,"column":8}}]},"79":{"line":929,"type":"binary-expr","locations":[{"start":{"line":929,"column":12},"end":{"line":929,"column":18}},{"start":{"line":929,"column":22},"end":{"line":929,"column":31}}]},"80":{"line":933,"type":"cond-expr","locations":[{"start":{"line":934,"column":12},"end":{"line":934,"column":17}},{"start":{"line":935,"column":13},"end":{"line":935,"column":26}}]},"81":{"line":933,"type":"cond-expr","locations":[{"start":{"line":933,"column":25},"end":{"line":933,"column":39}},{"start":{"line":933,"column":42},"end":{"line":933,"column":63}}]},"82":{"line":938,"type":"if","locations":[{"start":{"line":938,"column":6},"end":{"line":938,"column":6}},{"start":{"line":938,"column":6},"end":{"line":938,"column":6}}]},"83":{"line":945,"type":"cond-expr","locations":[{"start":{"line":945,"column":73},"end":{"line":945,"column":77}},{"start":{"line":945,"column":80},"end":{"line":945,"column":86}}]},"84":{"line":945,"type":"cond-expr","locations":[{"start":{"line":945,"column":52},"end":{"line":945,"column":64}},{"start":{"line":945,"column":67},"end":{"line":945,"column":69}}]},"85":{"line":949,"type":"if","locations":[{"start":{"line":949,"column":6},"end":{"line":949,"column":6}},{"start":{"line":949,"column":6},"end":{"line":949,"column":6}}]},"86":{"line":957,"type":"if","locations":[{"start":{"line":957,"column":8},"end":{"line":957,"column":8}},{"start":{"line":957,"column":8},"end":{"line":957,"column":8}}]},"87":{"line":957,"type":"binary-expr","locations":[{"start":{"line":957,"column":12},"end":{"line":957,"column":25}},{"start":{"line":957,"column":30},"end":{"line":957,"column":54}},{"start":{"line":957,"column":59},"end":{"line":957,"column":74}}]},"88":{"line":967,"type":"if","locations":[{"start":{"line":967,"column":10},"end":{"line":967,"column":10}},{"start":{"line":967,"column":10},"end":{"line":967,"column":10}}]},"89":{"line":992,"type":"binary-expr","locations":[{"start":{"line":992,"column":6},"end":{"line":992,"column":16}},{"start":{"line":992,"column":21},"end":{"line":992,"column":38}}]},"90":{"line":994,"type":"cond-expr","locations":[{"start":{"line":994,"column":32},"end":{"line":994,"column":37}},{"start":{"line":994,"column":40},"end":{"line":994,"column":64}}]},"91":{"line":996,"type":"binary-expr","locations":[{"start":{"line":996,"column":25},"end":{"line":996,"column":35}},{"start":{"line":996,"column":39},"end":{"line":996,"column":42}}]},"92":{"line":1013,"type":"if","locations":[{"start":{"line":1013,"column":6},"end":{"line":1013,"column":6}},{"start":{"line":1013,"column":6},"end":{"line":1013,"column":6}}]},"93":{"line":1016,"type":"if","locations":[{"start":{"line":1016,"column":8},"end":{"line":1016,"column":8}},{"start":{"line":1016,"column":8},"end":{"line":1016,"column":8}}]},"94":{"line":1016,"type":"binary-expr","locations":[{"start":{"line":1016,"column":12},"end":{"line":1016,"column":28}},{"start":{"line":1016,"column":32},"end":{"line":1016,"column":41}}]},"95":{"line":1022,"type":"if","locations":[{"start":{"line":1022,"column":10},"end":{"line":1022,"column":10}},{"start":{"line":1022,"column":10},"end":{"line":1022,"column":10}}]},"96":{"line":1073,"type":"if","locations":[{"start":{"line":1073,"column":6},"end":{"line":1073,"column":6}},{"start":{"line":1073,"column":6},"end":{"line":1073,"column":6}}]},"97":{"line":1093,"type":"if","locations":[{"start":{"line":1093,"column":8},"end":{"line":1093,"column":8}},{"start":{"line":1093,"column":8},"end":{"line":1093,"column":8}}]},"98":{"line":1094,"type":"cond-expr","locations":[{"start":{"line":1095,"column":14},"end":{"line":1095,"column":27}},{"start":{"line":1096,"column":14},"end":{"line":1096,"column":30}}]},"99":{"line":1130,"type":"if","locations":[{"start":{"line":1130,"column":6},"end":{"line":1130,"column":6}},{"start":{"line":1130,"column":6},"end":{"line":1130,"column":6}}]},"100":{"line":1130,"type":"binary-expr","locations":[{"start":{"line":1130,"column":10},"end":{"line":1130,"column":23}},{"start":{"line":1130,"column":27},"end":{"line":1130,"column":36}}]},"101":{"line":1137,"type":"if","locations":[{"start":{"line":1137,"column":11},"end":{"line":1137,"column":11}},{"start":{"line":1137,"column":11},"end":{"line":1137,"column":11}}]},"102":{"line":1137,"type":"binary-expr","locations":[{"start":{"line":1137,"column":16},"end":{"line":1137,"column":29}},{"start":{"line":1137,"column":33},"end":{"line":1137,"column":46}},{"start":{"line":1138,"column":11},"end":{"line":1138,"column":63}}]},"103":{"line":1140,"type":"if","locations":[{"start":{"line":1140,"column":8},"end":{"line":1140,"column":8}},{"start":{"line":1140,"column":8},"end":{"line":1140,"column":8}}]},"104":{"line":1167,"type":"binary-expr","locations":[{"start":{"line":1167,"column":6},"end":{"line":1167,"column":13}},{"start":{"line":1167,"column":18},"end":{"line":1167,"column":30}}]},"105":{"line":1178,"type":"if","locations":[{"start":{"line":1178,"column":10},"end":{"line":1178,"column":10}},{"start":{"line":1178,"column":10},"end":{"line":1178,"column":10}}]},"106":{"line":1209,"type":"binary-expr","locations":[{"start":{"line":1209,"column":6},"end":{"line":1209,"column":25}},{"start":{"line":1209,"column":30},"end":{"line":1209,"column":58}}]},"107":{"line":1210,"type":"binary-expr","locations":[{"start":{"line":1210,"column":6},"end":{"line":1210,"column":18}},{"start":{"line":1210,"column":23},"end":{"line":1210,"column":44}}]},"108":{"line":1213,"type":"if","locations":[{"start":{"line":1213,"column":6},"end":{"line":1213,"column":6}},{"start":{"line":1213,"column":6},"end":{"line":1213,"column":6}}]},"109":{"line":1213,"type":"binary-expr","locations":[{"start":{"line":1213,"column":10},"end":{"line":1213,"column":16}},{"start":{"line":1213,"column":21},"end":{"line":1213,"column":80}}]},"110":{"line":1213,"type":"binary-expr","locations":[{"start":{"line":1213,"column":33},"end":{"line":1213,"column":58}},{"start":{"line":1213,"column":62},"end":{"line":1213,"column":80}}]},"111":{"line":1215,"type":"if","locations":[{"start":{"line":1215,"column":10},"end":{"line":1215,"column":10}},{"start":{"line":1215,"column":10},"end":{"line":1215,"column":10}}]},"112":{"line":1234,"type":"binary-expr","locations":[{"start":{"line":1234,"column":19},"end":{"line":1234,"column":32}},{"start":{"line":1234,"column":37},"end":{"line":1234,"column":55}}]},"113":{"line":1236,"type":"cond-expr","locations":[{"start":{"line":1236,"column":35},"end":{"line":1236,"column":47}},{"start":{"line":1236,"column":51},"end":{"line":1236,"column":68}}]},"114":{"line":1269,"type":"if","locations":[{"start":{"line":1269,"column":6},"end":{"line":1269,"column":6}},{"start":{"line":1269,"column":6},"end":{"line":1269,"column":6}}]},"115":{"line":1272,"type":"cond-expr","locations":[{"start":{"line":1272,"column":20},"end":{"line":1272,"column":35}},{"start":{"line":1272,"column":38},"end":{"line":1272,"column":44}}]},"116":{"line":1274,"type":"if","locations":[{"start":{"line":1274,"column":8},"end":{"line":1274,"column":8}},{"start":{"line":1274,"column":8},"end":{"line":1274,"column":8}}]},"117":{"line":1276,"type":"binary-expr","locations":[{"start":{"line":1276,"column":22},"end":{"line":1276,"column":41}},{"start":{"line":1276,"column":45},"end":{"line":1276,"column":57}}]},"118":{"line":1278,"type":"if","locations":[{"start":{"line":1278,"column":8},"end":{"line":1278,"column":8}},{"start":{"line":1278,"column":8},"end":{"line":1278,"column":8}}]},"119":{"line":1279,"type":"if","locations":[{"start":{"line":1279,"column":10},"end":{"line":1279,"column":10}},{"start":{"line":1279,"column":10},"end":{"line":1279,"column":10}}]},"120":{"line":1281,"type":"if","locations":[{"start":{"line":1281,"column":12},"end":{"line":1281,"column":12}},{"start":{"line":1281,"column":12},"end":{"line":1281,"column":12}}]},"121":{"line":1309,"type":"binary-expr","locations":[{"start":{"line":1309,"column":19},"end":{"line":1309,"column":32}},{"start":{"line":1309,"column":37},"end":{"line":1309,"column":55}}]},"122":{"line":1312,"type":"cond-expr","locations":[{"start":{"line":1313,"column":12},"end":{"line":1313,"column":24}},{"start":{"line":1314,"column":13},"end":{"line":1314,"column":30}}]},"123":{"line":1333,"type":"if","locations":[{"start":{"line":1333,"column":6},"end":{"line":1333,"column":6}},{"start":{"line":1333,"column":6},"end":{"line":1333,"column":6}}]},"124":{"line":1336,"type":"if","locations":[{"start":{"line":1336,"column":8},"end":{"line":1336,"column":8}},{"start":{"line":1336,"column":8},"end":{"line":1336,"column":8}}]},"125":{"line":1336,"type":"binary-expr","locations":[{"start":{"line":1336,"column":12},"end":{"line":1336,"column":28}},{"start":{"line":1336,"column":32},"end":{"line":1336,"column":41}}]},"126":{"line":1342,"type":"if","locations":[{"start":{"line":1342,"column":10},"end":{"line":1342,"column":10}},{"start":{"line":1342,"column":10},"end":{"line":1342,"column":10}}]},"127":{"line":1346,"type":"if","locations":[{"start":{"line":1346,"column":10},"end":{"line":1346,"column":10}},{"start":{"line":1346,"column":10},"end":{"line":1346,"column":10}}]},"128":{"line":1376,"type":"if","locations":[{"start":{"line":1376,"column":8},"end":{"line":1376,"column":8}},{"start":{"line":1376,"column":8},"end":{"line":1376,"column":8}}]},"129":{"line":1395,"type":"if","locations":[{"start":{"line":1395,"column":6},"end":{"line":1395,"column":6}},{"start":{"line":1395,"column":6},"end":{"line":1395,"column":6}}]},"130":{"line":1412,"type":"cond-expr","locations":[{"start":{"line":1412,"column":36},"end":{"line":1412,"column":37}},{"start":{"line":1412,"column":40},"end":{"line":1412,"column":57}}]},"131":{"line":1412,"type":"cond-expr","locations":[{"start":{"line":1412,"column":50},"end":{"line":1412,"column":51}},{"start":{"line":1412,"column":54},"end":{"line":1412,"column":57}}]},"132":{"line":1427,"type":"if","locations":[{"start":{"line":1427,"column":6},"end":{"line":1427,"column":6}},{"start":{"line":1427,"column":6},"end":{"line":1427,"column":6}}]},"133":{"line":1431,"type":"cond-expr","locations":[{"start":{"line":1431,"column":36},"end":{"line":1431,"column":52}},{"start":{"line":1431,"column":56},"end":{"line":1431,"column":57}}]},"134":{"line":1431,"type":"cond-expr","locations":[{"start":{"line":1431,"column":46},"end":{"line":1431,"column":47}},{"start":{"line":1431,"column":50},"end":{"line":1431,"column":52}}]},"135":{"line":1434,"type":"cond-expr","locations":[{"start":{"line":1434,"column":46},"end":{"line":1434,"column":47}},{"start":{"line":1434,"column":50},"end":{"line":1434,"column":78}}]},"136":{"line":1434,"type":"binary-expr","locations":[{"start":{"line":1434,"column":17},"end":{"line":1434,"column":28}},{"start":{"line":1434,"column":32},"end":{"line":1434,"column":43}}]},"137":{"line":1435,"type":"cond-expr","locations":[{"start":{"line":1435,"column":30},"end":{"line":1435,"column":46}},{"start":{"line":1435,"column":50},"end":{"line":1435,"column":51}}]},"138":{"line":1435,"type":"cond-expr","locations":[{"start":{"line":1435,"column":40},"end":{"line":1435,"column":41}},{"start":{"line":1435,"column":44},"end":{"line":1435,"column":46}}]},"139":{"line":1446,"type":"if","locations":[{"start":{"line":1446,"column":6},"end":{"line":1446,"column":6}},{"start":{"line":1446,"column":6},"end":{"line":1446,"column":6}}]},"140":{"line":1446,"type":"binary-expr","locations":[{"start":{"line":1446,"column":10},"end":{"line":1446,"column":23}},{"start":{"line":1446,"column":27},"end":{"line":1446,"column":42}}]},"141":{"line":1472,"type":"if","locations":[{"start":{"line":1472,"column":10},"end":{"line":1472,"column":10}},{"start":{"line":1472,"column":10},"end":{"line":1472,"column":10}}]},"142":{"line":1475,"type":"if","locations":[{"start":{"line":1475,"column":10},"end":{"line":1475,"column":10}},{"start":{"line":1475,"column":10},"end":{"line":1475,"column":10}}]},"143":{"line":1476,"type":"if","locations":[{"start":{"line":1476,"column":12},"end":{"line":1476,"column":12}},{"start":{"line":1476,"column":12},"end":{"line":1476,"column":12}}]},"144":{"line":1478,"type":"if","locations":[{"start":{"line":1478,"column":14},"end":{"line":1478,"column":14}},{"start":{"line":1478,"column":14},"end":{"line":1478,"column":14}}]},"145":{"line":1483,"type":"if","locations":[{"start":{"line":1483,"column":14},"end":{"line":1483,"column":14}},{"start":{"line":1483,"column":14},"end":{"line":1483,"column":14}}]},"146":{"line":1490,"type":"if","locations":[{"start":{"line":1490,"column":17},"end":{"line":1490,"column":17}},{"start":{"line":1490,"column":17},"end":{"line":1490,"column":17}}]},"147":{"line":1495,"type":"if","locations":[{"start":{"line":1495,"column":12},"end":{"line":1495,"column":12}},{"start":{"line":1495,"column":12},"end":{"line":1495,"column":12}}]},"148":{"line":1501,"type":"if","locations":[{"start":{"line":1501,"column":15},"end":{"line":1501,"column":15}},{"start":{"line":1501,"column":15},"end":{"line":1501,"column":15}}]},"149":{"line":1501,"type":"binary-expr","locations":[{"start":{"line":1501,"column":19},"end":{"line":1501,"column":42}},{"start":{"line":1501,"column":46},"end":{"line":1501,"column":65}}]},"150":{"line":1509,"type":"if","locations":[{"start":{"line":1509,"column":6},"end":{"line":1509,"column":6}},{"start":{"line":1509,"column":6},"end":{"line":1509,"column":6}}]},"151":{"line":1509,"type":"binary-expr","locations":[{"start":{"line":1509,"column":10},"end":{"line":1509,"column":24}},{"start":{"line":1510,"column":11},"end":{"line":1510,"column":63}}]},"152":{"line":1533,"type":"binary-expr","locations":[{"start":{"line":1533,"column":19},"end":{"line":1533,"column":29}},{"start":{"line":1533,"column":34},"end":{"line":1533,"column":73}}]},"153":{"line":1533,"type":"cond-expr","locations":[{"start":{"line":1533,"column":48},"end":{"line":1533,"column":50}},{"start":{"line":1533,"column":53},"end":{"line":1533,"column":73}}]},"154":{"line":1535,"type":"if","locations":[{"start":{"line":1535,"column":6},"end":{"line":1535,"column":6}},{"start":{"line":1535,"column":6},"end":{"line":1535,"column":6}}]},"155":{"line":1537,"type":"if","locations":[{"start":{"line":1537,"column":8},"end":{"line":1537,"column":8}},{"start":{"line":1537,"column":8},"end":{"line":1537,"column":8}}]},"156":{"line":1539,"type":"if","locations":[{"start":{"line":1539,"column":15},"end":{"line":1539,"column":15}},{"start":{"line":1539,"column":15},"end":{"line":1539,"column":15}}]},"157":{"line":1548,"type":"cond-expr","locations":[{"start":{"line":1548,"column":61},"end":{"line":1548,"column":62}},{"start":{"line":1548,"column":65},"end":{"line":1548,"column":66}}]},"158":{"line":1549,"type":"cond-expr","locations":[{"start":{"line":1549,"column":70},"end":{"line":1549,"column":72}},{"start":{"line":1549,"column":75},"end":{"line":1549,"column":78}}]},"159":{"line":1572,"type":"if","locations":[{"start":{"line":1572,"column":8},"end":{"line":1572,"column":8}},{"start":{"line":1572,"column":8},"end":{"line":1572,"column":8}}]},"160":{"line":1579,"type":"binary-expr","locations":[{"start":{"line":1579,"column":27},"end":{"line":1579,"column":37}},{"start":{"line":1579,"column":42},"end":{"line":1579,"column":63}},{"start":{"line":1579,"column":68},"end":{"line":1579,"column":90}},{"start":{"line":1579,"column":94},"end":{"line":1579,"column":119}}]},"161":{"line":1581,"type":"binary-expr","locations":[{"start":{"line":1581,"column":19},"end":{"line":1581,"column":29}},{"start":{"line":1581,"column":34},"end":{"line":1581,"column":83}}]},"162":{"line":1581,"type":"cond-expr","locations":[{"start":{"line":1581,"column":58},"end":{"line":1581,"column":78}},{"start":{"line":1581,"column":81},"end":{"line":1581,"column":83}}]},"163":{"line":1585,"type":"binary-expr","locations":[{"start":{"line":1585,"column":24},"end":{"line":1585,"column":37}},{"start":{"line":1585,"column":42},"end":{"line":1585,"column":97}}]},"164":{"line":1590,"type":"cond-expr","locations":[{"start":{"line":1591,"column":12},"end":{"line":1603,"column":43}},{"start":{"line":1605,"column":12},"end":{"line":1606,"column":85}}]},"165":{"line":1609,"type":"binary-expr","locations":[{"start":{"line":1609,"column":24},"end":{"line":1609,"column":39}},{"start":{"line":1609,"column":43},"end":{"line":1609,"column":53}}]},"166":{"line":1612,"type":"if","locations":[{"start":{"line":1612,"column":10},"end":{"line":1612,"column":10}},{"start":{"line":1612,"column":10},"end":{"line":1612,"column":10}}]},"167":{"line":1617,"type":"if","locations":[{"start":{"line":1617,"column":15},"end":{"line":1617,"column":15}},{"start":{"line":1617,"column":15},"end":{"line":1617,"column":15}}]},"168":{"line":1621,"type":"binary-expr","locations":[{"start":{"line":1621,"column":23},"end":{"line":1621,"column":35}},{"start":{"line":1621,"column":39},"end":{"line":1621,"column":107}},{"start":{"line":1621,"column":111},"end":{"line":1621,"column":119}}]},"169":{"line":1621,"type":"binary-expr","locations":[{"start":{"line":1621,"column":40},"end":{"line":1621,"column":76}},{"start":{"line":1621,"column":80},"end":{"line":1621,"column":82}}]},"170":{"line":1626,"type":"binary-expr","locations":[{"start":{"line":1626,"column":24},"end":{"line":1626,"column":25}},{"start":{"line":1626,"column":29},"end":{"line":1626,"column":49}}]},"171":{"line":1630,"type":"if","locations":[{"start":{"line":1630,"column":8},"end":{"line":1630,"column":8}},{"start":{"line":1630,"column":8},"end":{"line":1630,"column":8}}]},"172":{"line":1630,"type":"binary-expr","locations":[{"start":{"line":1630,"column":12},"end":{"line":1630,"column":21}},{"start":{"line":1630,"column":25},"end":{"line":1630,"column":34}},{"start":{"line":1630,"column":38},"end":{"line":1630,"column":46}}]},"173":{"line":1632,"type":"cond-expr","locations":[{"start":{"line":1633,"column":16},"end":{"line":1633,"column":69}},{"start":{"line":1634,"column":16},"end":{"line":1634,"column":56}}]},"174":{"line":1632,"type":"binary-expr","locations":[{"start":{"line":1632,"column":12},"end":{"line":1632,"column":22}},{"start":{"line":1632,"column":27},"end":{"line":1632,"column":39}},{"start":{"line":1632,"column":43},"end":{"line":1632,"column":55}}]},"175":{"line":1650,"type":"if","locations":[{"start":{"line":1650,"column":12},"end":{"line":1650,"column":12}},{"start":{"line":1650,"column":12},"end":{"line":1650,"column":12}}]},"176":{"line":1651,"type":"binary-expr","locations":[{"start":{"line":1651,"column":28},"end":{"line":1651,"column":29}},{"start":{"line":1651,"column":33},"end":{"line":1651,"column":53}}]},"177":{"line":1656,"type":"if","locations":[{"start":{"line":1656,"column":8},"end":{"line":1656,"column":8}},{"start":{"line":1656,"column":8},"end":{"line":1656,"column":8}}]},"178":{"line":1658,"type":"binary-expr","locations":[{"start":{"line":1658,"column":33},"end":{"line":1658,"column":41}},{"start":{"line":1658,"column":45},"end":{"line":1658,"column":50}}]},"179":{"line":1670,"type":"cond-expr","locations":[{"start":{"line":1670,"column":31},"end":{"line":1670,"column":65}},{"start":{"line":1670,"column":68},"end":{"line":1670,"column":70}}]},"180":{"line":1670,"type":"binary-expr","locations":[{"start":{"line":1670,"column":31},"end":{"line":1670,"column":51}},{"start":{"line":1670,"column":55},"end":{"line":1670,"column":65}}]},"181":{"line":1675,"type":"cond-expr","locations":[{"start":{"line":1675,"column":34},"end":{"line":1675,"column":56}},{"start":{"line":1675,"column":59},"end":{"line":1675,"column":84}}]},"182":{"line":1676,"type":"cond-expr","locations":[{"start":{"line":1676,"column":31},"end":{"line":1676,"column":44}},{"start":{"line":1676,"column":47},"end":{"line":1676,"column":82}}]},"183":{"line":1678,"type":"cond-expr","locations":[{"start":{"line":1678,"column":37},"end":{"line":1678,"column":62}},{"start":{"line":1678,"column":65},"end":{"line":1678,"column":93}}]},"184":{"line":1682,"type":"if","locations":[{"start":{"line":1682,"column":8},"end":{"line":1682,"column":8}},{"start":{"line":1682,"column":8},"end":{"line":1682,"column":8}}]},"185":{"line":1688,"type":"if","locations":[{"start":{"line":1688,"column":13},"end":{"line":1688,"column":13}},{"start":{"line":1688,"column":13},"end":{"line":1688,"column":13}}]},"186":{"line":1689,"type":"if","locations":[{"start":{"line":1689,"column":10},"end":{"line":1689,"column":10}},{"start":{"line":1689,"column":10},"end":{"line":1689,"column":10}}]},"187":{"line":1701,"type":"if","locations":[{"start":{"line":1701,"column":13},"end":{"line":1701,"column":13}},{"start":{"line":1701,"column":13},"end":{"line":1701,"column":13}}]},"188":{"line":1745,"type":"if","locations":[{"start":{"line":1745,"column":10},"end":{"line":1745,"column":10}},{"start":{"line":1745,"column":10},"end":{"line":1745,"column":10}}]},"189":{"line":1747,"type":"if","locations":[{"start":{"line":1747,"column":12},"end":{"line":1747,"column":12}},{"start":{"line":1747,"column":12},"end":{"line":1747,"column":12}}]},"190":{"line":1755,"type":"if","locations":[{"start":{"line":1755,"column":15},"end":{"line":1755,"column":15}},{"start":{"line":1755,"column":15},"end":{"line":1755,"column":15}}]},"191":{"line":1761,"type":"if","locations":[{"start":{"line":1761,"column":15},"end":{"line":1761,"column":15}},{"start":{"line":1761,"column":15},"end":{"line":1761,"column":15}}]},"192":{"line":1770,"type":"if","locations":[{"start":{"line":1770,"column":10},"end":{"line":1770,"column":10}},{"start":{"line":1770,"column":10},"end":{"line":1770,"column":10}}]},"193":{"line":1795,"type":"if","locations":[{"start":{"line":1795,"column":8},"end":{"line":1795,"column":8}},{"start":{"line":1795,"column":8},"end":{"line":1795,"column":8}}]},"194":{"line":1795,"type":"binary-expr","locations":[{"start":{"line":1795,"column":29},"end":{"line":1795,"column":43}},{"start":{"line":1795,"column":47},"end":{"line":1795,"column":63}}]},"195":{"line":1801,"type":"if","locations":[{"start":{"line":1801,"column":6},"end":{"line":1801,"column":6}},{"start":{"line":1801,"column":6},"end":{"line":1801,"column":6}}]},"196":{"line":1801,"type":"binary-expr","locations":[{"start":{"line":1801,"column":10},"end":{"line":1801,"column":23}},{"start":{"line":1801,"column":27},"end":{"line":1801,"column":81}}]},"197":{"line":1805,"type":"if","locations":[{"start":{"line":1805,"column":6},"end":{"line":1805,"column":6}},{"start":{"line":1805,"column":6},"end":{"line":1805,"column":6}}]},"198":{"line":1805,"type":"binary-expr","locations":[{"start":{"line":1805,"column":10},"end":{"line":1805,"column":25}},{"start":{"line":1805,"column":29},"end":{"line":1805,"column":82}}]},"199":{"line":1812,"type":"if","locations":[{"start":{"line":1812,"column":6},"end":{"line":1812,"column":6}},{"start":{"line":1812,"column":6},"end":{"line":1812,"column":6}}]},"200":{"line":1817,"type":"binary-expr","locations":[{"start":{"line":1817,"column":6},"end":{"line":1817,"column":21}},{"start":{"line":1817,"column":26},"end":{"line":1817,"column":75}}]},"201":{"line":1831,"type":"binary-expr","locations":[{"start":{"line":1831,"column":6},"end":{"line":1831,"column":13}},{"start":{"line":1831,"column":18},"end":{"line":1831,"column":30}}]},"202":{"line":1862,"type":"if","locations":[{"start":{"line":1862,"column":8},"end":{"line":1862,"column":8}},{"start":{"line":1862,"column":8},"end":{"line":1862,"column":8}}]},"203":{"line":1863,"type":"if","locations":[{"start":{"line":1863,"column":10},"end":{"line":1863,"column":10}},{"start":{"line":1863,"column":10},"end":{"line":1863,"column":10}}]},"204":{"line":1868,"type":"if","locations":[{"start":{"line":1868,"column":12},"end":{"line":1868,"column":12}},{"start":{"line":1868,"column":12},"end":{"line":1868,"column":12}}]},"205":{"line":1871,"type":"if","locations":[{"start":{"line":1871,"column":12},"end":{"line":1871,"column":12}},{"start":{"line":1871,"column":12},"end":{"line":1871,"column":12}}]},"206":{"line":1879,"type":"if","locations":[{"start":{"line":1879,"column":15},"end":{"line":1879,"column":15}},{"start":{"line":1879,"column":15},"end":{"line":1879,"column":15}}]},"207":{"line":1902,"type":"binary-expr","locations":[{"start":{"line":1902,"column":23},"end":{"line":1902,"column":41}},{"start":{"line":1902,"column":45},"end":{"line":1902,"column":107}}]},"208":{"line":1907,"type":"if","locations":[{"start":{"line":1907,"column":8},"end":{"line":1907,"column":8}},{"start":{"line":1907,"column":8},"end":{"line":1907,"column":8}}]},"209":{"line":1907,"type":"binary-expr","locations":[{"start":{"line":1907,"column":12},"end":{"line":1907,"column":16}},{"start":{"line":1907,"column":20},"end":{"line":1907,"column":40}}]},"210":{"line":1911,"type":"if","locations":[{"start":{"line":1911,"column":8},"end":{"line":1911,"column":8}},{"start":{"line":1911,"column":8},"end":{"line":1911,"column":8}}]},"211":{"line":1915,"type":"binary-expr","locations":[{"start":{"line":1915,"column":21},"end":{"line":1915,"column":60}},{"start":{"line":1915,"column":64},"end":{"line":1915,"column":65}}]},"212":{"line":1923,"type":"binary-expr","locations":[{"start":{"line":1923,"column":21},"end":{"line":1923,"column":48}},{"start":{"line":1923,"column":52},"end":{"line":1923,"column":67}}]},"213":{"line":1923,"type":"binary-expr","locations":[{"start":{"line":1923,"column":28},"end":{"line":1923,"column":42}},{"start":{"line":1923,"column":46},"end":{"line":1923,"column":47}}]},"214":{"line":1927,"type":"binary-expr","locations":[{"start":{"line":1927,"column":16},"end":{"line":1927,"column":34}},{"start":{"line":1927,"column":38},"end":{"line":1927,"column":39}}]},"215":{"line":1943,"type":"if","locations":[{"start":{"line":1943,"column":10},"end":{"line":1943,"column":10}},{"start":{"line":1943,"column":10},"end":{"line":1943,"column":10}}]},"216":{"line":1950,"type":"if","locations":[{"start":{"line":1950,"column":10},"end":{"line":1950,"column":10}},{"start":{"line":1950,"column":10},"end":{"line":1950,"column":10}}]},"217":{"line":1957,"type":"if","locations":[{"start":{"line":1957,"column":8},"end":{"line":1957,"column":8}},{"start":{"line":1957,"column":8},"end":{"line":1957,"column":8}}]},"218":{"line":1957,"type":"binary-expr","locations":[{"start":{"line":1957,"column":12},"end":{"line":1957,"column":28}},{"start":{"line":1957,"column":32},"end":{"line":1957,"column":41}}]},"219":{"line":1985,"type":"binary-expr","locations":[{"start":{"line":1985,"column":6},"end":{"line":1985,"column":13}},{"start":{"line":1985,"column":18},"end":{"line":1985,"column":30}}]},"220":{"line":1988,"type":"if","locations":[{"start":{"line":1988,"column":6},"end":{"line":1988,"column":6}},{"start":{"line":1988,"column":6},"end":{"line":1988,"column":6}}]},"221":{"line":2004,"type":"if","locations":[{"start":{"line":2004,"column":6},"end":{"line":2004,"column":6}},{"start":{"line":2004,"column":6},"end":{"line":2004,"column":6}}]},"222":{"line":2007,"type":"cond-expr","locations":[{"start":{"line":2007,"column":29},"end":{"line":2007,"column":45}},{"start":{"line":2007,"column":48},"end":{"line":2007,"column":60}}]},"223":{"line":2010,"type":"if","locations":[{"start":{"line":2010,"column":8},"end":{"line":2010,"column":8}},{"start":{"line":2010,"column":8},"end":{"line":2010,"column":8}}]},"224":{"line":2013,"type":"if","locations":[{"start":{"line":2013,"column":8},"end":{"line":2013,"column":8}},{"start":{"line":2013,"column":8},"end":{"line":2013,"column":8}}]},"225":{"line":2017,"type":"if","locations":[{"start":{"line":2017,"column":10},"end":{"line":2017,"column":10}},{"start":{"line":2017,"column":10},"end":{"line":2017,"column":10}}]},"226":{"line":2023,"type":"if","locations":[{"start":{"line":2023,"column":6},"end":{"line":2023,"column":6}},{"start":{"line":2023,"column":6},"end":{"line":2023,"column":6}}]},"227":{"line":2035,"type":"if","locations":[{"start":{"line":2035,"column":8},"end":{"line":2035,"column":8}},{"start":{"line":2035,"column":8},"end":{"line":2035,"column":8}}]},"228":{"line":2038,"type":"if","locations":[{"start":{"line":2038,"column":10},"end":{"line":2038,"column":10}},{"start":{"line":2038,"column":10},"end":{"line":2038,"column":10}}]},"229":{"line":2038,"type":"binary-expr","locations":[{"start":{"line":2038,"column":14},"end":{"line":2038,"column":22}},{"start":{"line":2038,"column":26},"end":{"line":2038,"column":68}}]},"230":{"line":2042,"type":"if","locations":[{"start":{"line":2042,"column":10},"end":{"line":2042,"column":10}},{"start":{"line":2042,"column":10},"end":{"line":2042,"column":10}}]},"231":{"line":2051,"type":"if","locations":[{"start":{"line":2051,"column":6},"end":{"line":2051,"column":6}},{"start":{"line":2051,"column":6},"end":{"line":2051,"column":6}}]},"232":{"line":2055,"type":"if","locations":[{"start":{"line":2055,"column":6},"end":{"line":2055,"column":6}},{"start":{"line":2055,"column":6},"end":{"line":2055,"column":6}}]},"233":{"line":2058,"type":"if","locations":[{"start":{"line":2058,"column":8},"end":{"line":2058,"column":8}},{"start":{"line":2058,"column":8},"end":{"line":2058,"column":8}}]},"234":{"line":2060,"type":"if","locations":[{"start":{"line":2060,"column":15},"end":{"line":2060,"column":15}},{"start":{"line":2060,"column":15},"end":{"line":2060,"column":15}}]},"235":{"line":2069,"type":"if","locations":[{"start":{"line":2069,"column":8},"end":{"line":2069,"column":8}},{"start":{"line":2069,"column":8},"end":{"line":2069,"column":8}}]},"236":{"line":2106,"type":"if","locations":[{"start":{"line":2106,"column":6},"end":{"line":2106,"column":6}},{"start":{"line":2106,"column":6},"end":{"line":2106,"column":6}}]},"237":{"line":2107,"type":"binary-expr","locations":[{"start":{"line":2107,"column":30},"end":{"line":2107,"column":98}},{"start":{"line":2107,"column":103},"end":{"line":2107,"column":118}}]},"238":{"line":2107,"type":"cond-expr","locations":[{"start":{"line":2107,"column":77},"end":{"line":2107,"column":88}},{"start":{"line":2107,"column":91},"end":{"line":2107,"column":98}}]},"239":{"line":2107,"type":"binary-expr","locations":[{"start":{"line":2107,"column":41},"end":{"line":2107,"column":48}},{"start":{"line":2107,"column":52},"end":{"line":2107,"column":65}}]},"240":{"line":2110,"type":"if","locations":[{"start":{"line":2110,"column":8},"end":{"line":2110,"column":8}},{"start":{"line":2110,"column":8},"end":{"line":2110,"column":8}}]},"241":{"line":2111,"type":"if","locations":[{"start":{"line":2111,"column":10},"end":{"line":2111,"column":10}},{"start":{"line":2111,"column":10},"end":{"line":2111,"column":10}}]},"242":{"line":2276,"type":"binary-expr","locations":[{"start":{"line":2276,"column":18},"end":{"line":2276,"column":34}},{"start":{"line":2276,"column":38},"end":{"line":2276,"column":57}},{"start":{"line":2276,"column":62},"end":{"line":2288,"column":7}}]},"243":{"line":2277,"type":"binary-expr","locations":[{"start":{"line":2277,"column":23},"end":{"line":2277,"column":40}},{"start":{"line":2277,"column":44},"end":{"line":2277,"column":71}},{"start":{"line":2277,"column":75},"end":{"line":2277,"column":79}}]},"244":{"line":2286,"type":"binary-expr","locations":[{"start":{"line":2286,"column":17},"end":{"line":2286,"column":33}},{"start":{"line":2286,"column":37},"end":{"line":2286,"column":39}}]},"245":{"line":2776,"type":"if","locations":[{"start":{"line":2776,"column":8},"end":{"line":2776,"column":8}},{"start":{"line":2776,"column":8},"end":{"line":2776,"column":8}}]},"246":{"line":2798,"type":"if","locations":[{"start":{"line":2798,"column":2},"end":{"line":2798,"column":2}},{"start":{"line":2798,"column":2},"end":{"line":2798,"column":2}}]},"247":{"line":2798,"type":"binary-expr","locations":[{"start":{"line":2798,"column":6},"end":{"line":2798,"column":33}},{"start":{"line":2798,"column":37},"end":{"line":2798,"column":66}},{"start":{"line":2798,"column":70},"end":{"line":2798,"column":80}}]},"248":{"line":2811,"type":"if","locations":[{"start":{"line":2811,"column":4},"end":{"line":2811,"column":4}},{"start":{"line":2811,"column":4},"end":{"line":2811,"column":4}}]},"249":{"line":2811,"type":"binary-expr","locations":[{"start":{"line":2811,"column":8},"end":{"line":2811,"column":19}},{"start":{"line":2811,"column":23},"end":{"line":2811,"column":33}}]},"250":{"line":2813,"type":"if","locations":[{"start":{"line":2813,"column":6},"end":{"line":2813,"column":6}},{"start":{"line":2813,"column":6},"end":{"line":2813,"column":6}}]}},"code":["/*!"," * Benchmark.js <https://benchmarkjs.com/>"," * Copyright 2010-2016 Mathias Bynens <https://mths.be/>"," * Based on JSLitmus.js, copyright Robert Kieffer <http://broofa.com/>"," * Modified by John-David Dalton <http://allyoucanleet.com/>"," * Available under MIT license <https://mths.be/mit>"," */",";(function() {","  'use strict';","","  /** Used as a safe reference for `undefined` in pre ES5 environments. */","  var undefined;","","  /** Used to determine if values are of the language type Object. */","  var objectTypes = {","    'function': true,","    'object': true","  };","","  /** Used as a reference to the global object. */","  var root = (objectTypes[typeof window] && window) || this;","","  /** Detect free variable `define`. */","  var freeDefine = typeof define == 'function' && typeof define.amd == 'object' && define.amd && define;","","  /** Detect free variable `exports`. */","  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;","","  /** Detect free variable `module`. */","  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;","","  /** Detect free variable `global` from Node.js or Browserified code and use it as `root`. */","  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global;","  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal)) {","    root = freeGlobal;","  }","","  /** Detect free variable `require`. */","  var freeRequire = typeof require == 'function' && require;","","  /** Used to assign each benchmark an incremented id. */","  var counter = 0;","","  /** Detect the popular CommonJS extension `module.exports`. */","  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;","","  /** Used to detect primitive types. */","  var rePrimitive = /^(?:boolean|number|string|undefined)$/;","","  /** Used to make every compiled test unique. */","  var uidCounter = 0;","","  /** Used to assign default `context` object properties. */","  var contextProps = [","    'Array', 'Date', 'Function', 'Math', 'Object', 'RegExp', 'String', '_',","    'clearTimeout', 'chrome', 'chromium', 'document', 'navigator', 'phantom',","    'platform', 'process', 'runtime', 'setTimeout'","  ];","","  /** Used to avoid hz of Infinity. */","  var divisors = {","    '1': 4096,","    '2': 512,","    '3': 64,","    '4': 8,","    '5': 0","  };","","  /**","   * T-Distribution two-tailed critical values for 95% confidence.","   * For more info see http://www.itl.nist.gov/div898/handbook/eda/section3/eda3672.htm.","   */","  var tTable = {","    '1':  12.706, '2':  4.303, '3':  3.182, '4':  2.776, '5':  2.571, '6':  2.447,","    '7':  2.365,  '8':  2.306, '9':  2.262, '10': 2.228, '11': 2.201, '12': 2.179,","    '13': 2.16,   '14': 2.145, '15': 2.131, '16': 2.12,  '17': 2.11,  '18': 2.101,","    '19': 2.093,  '20': 2.086, '21': 2.08,  '22': 2.074, '23': 2.069, '24': 2.064,","    '25': 2.06,   '26': 2.056, '27': 2.052, '28': 2.048, '29': 2.045, '30': 2.042,","    'infinity': 1.96","  };","","  /**","   * Critical Mann-Whitney U-values for 95% confidence.","   * For more info see http://www.saburchill.com/IBbiology/stats/003.html.","   */","  var uTable = {","    '5':  [0, 1, 2],","    '6':  [1, 2, 3, 5],","    '7':  [1, 3, 5, 6, 8],","    '8':  [2, 4, 6, 8, 10, 13],","    '9':  [2, 4, 7, 10, 12, 15, 17],","    '10': [3, 5, 8, 11, 14, 17, 20, 23],","    '11': [3, 6, 9, 13, 16, 19, 23, 26, 30],","    '12': [4, 7, 11, 14, 18, 22, 26, 29, 33, 37],","    '13': [4, 8, 12, 16, 20, 24, 28, 33, 37, 41, 45],","    '14': [5, 9, 13, 17, 22, 26, 31, 36, 40, 45, 50, 55],","    '15': [5, 10, 14, 19, 24, 29, 34, 39, 44, 49, 54, 59, 64],","    '16': [6, 11, 15, 21, 26, 31, 37, 42, 47, 53, 59, 64, 70, 75],","    '17': [6, 11, 17, 22, 28, 34, 39, 45, 51, 57, 63, 67, 75, 81, 87],","    '18': [7, 12, 18, 24, 30, 36, 42, 48, 55, 61, 67, 74, 80, 86, 93, 99],","    '19': [7, 13, 19, 25, 32, 38, 45, 52, 58, 65, 72, 78, 85, 92, 99, 106, 113],","    '20': [8, 14, 20, 27, 34, 41, 48, 55, 62, 69, 76, 83, 90, 98, 105, 112, 119, 127],","    '21': [8, 15, 22, 29, 36, 43, 50, 58, 65, 73, 80, 88, 96, 103, 111, 119, 126, 134, 142],","    '22': [9, 16, 23, 30, 38, 45, 53, 61, 69, 77, 85, 93, 101, 109, 117, 125, 133, 141, 150, 158],","    '23': [9, 17, 24, 32, 40, 48, 56, 64, 73, 81, 89, 98, 106, 115, 123, 132, 140, 149, 157, 166, 175],","    '24': [10, 17, 25, 33, 42, 50, 59, 67, 76, 85, 94, 102, 111, 120, 129, 138, 147, 156, 165, 174, 183, 192],","    '25': [10, 18, 27, 35, 44, 53, 62, 71, 80, 89, 98, 107, 117, 126, 135, 145, 154, 163, 173, 182, 192, 201, 211],","    '26': [11, 19, 28, 37, 46, 55, 64, 74, 83, 93, 102, 112, 122, 132, 141, 151, 161, 171, 181, 191, 200, 210, 220, 230],","    '27': [11, 20, 29, 38, 48, 57, 67, 77, 87, 97, 107, 118, 125, 138, 147, 158, 168, 178, 188, 199, 209, 219, 230, 240, 250],","    '28': [12, 21, 30, 40, 50, 60, 70, 80, 90, 101, 111, 122, 132, 143, 154, 164, 175, 186, 196, 207, 218, 228, 239, 250, 261, 272],","    '29': [13, 22, 32, 42, 52, 62, 73, 83, 94, 105, 116, 127, 138, 149, 160, 171, 182, 193, 204, 215, 226, 238, 249, 260, 271, 282, 294],","    '30': [13, 23, 33, 43, 54, 65, 76, 87, 98, 109, 120, 131, 143, 154, 166, 177, 189, 200, 212, 223, 235, 247, 258, 270, 282, 293, 305, 317]","  };","","  /*--------------------------------------------------------------------------*/","","  /**","   * Create a new `Benchmark` function using the given `context` object.","   *","   * @static","   * @memberOf Benchmark","   * @param {Object} [context=root] The context object.","   * @returns {Function} Returns a new `Benchmark` function.","   */","  function runInContext(context) {","    // Exit early if unable to acquire lodash.","    var _ = context && context._ || require('lodash') || root._;","    if (!_) {","      Benchmark.runInContext = runInContext;","      return Benchmark;","    }","    // Avoid issues with some ES3 environments that attempt to use values, named","    // after built-in constructors like `Object`, for the creation of literals.","    // ES5 clears this up by stating that literals must use built-in constructors.","    // See http://es5.github.io/#x11.1.5.","    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;","","    /** Native constructor references. */","    var Array = context.Array,","        Date = context.Date,","        Function = context.Function,","        Math = context.Math,","        Object = context.Object,","        RegExp = context.RegExp,","        String = context.String;","","    /** Used for `Array` and `Object` method references. */","    var arrayRef = [],","        objectProto = Object.prototype;","","    /** Native method shortcuts. */","    var abs = Math.abs,","        clearTimeout = context.clearTimeout,","        floor = Math.floor,","        log = Math.log,","        max = Math.max,","        min = Math.min,","        pow = Math.pow,","        push = arrayRef.push,","        setTimeout = context.setTimeout,","        shift = arrayRef.shift,","        slice = arrayRef.slice,","        sqrt = Math.sqrt,","        toString = objectProto.toString,","        unshift = arrayRef.unshift;","","    /** Used to avoid inclusion in Browserified bundles. */","    var req = require;","","    /** Detect DOM document object. */","    var doc = isHostType(context, 'document') && context.document;","","    /** Used to access Wade Simmons' Node.js `microtime` module. */","    var microtimeObject = req('microtime');","","    /** Used to access Node.js's high resolution timer. */","    var processObject = isHostType(context, 'process') && context.process;","","    /** Used to prevent a `removeChild` memory leak in IE < 9. */","    var trash = doc && doc.createElement('div');","","    /** Used to integrity check compiled tests. */","    var uid = 'uid' + _.now();","","    /** Used to avoid infinite recursion when methods call each other. */","    var calledBy = {};","","    /**","     * An object used to flag environments/features.","     *","     * @static","     * @memberOf Benchmark","     * @type Object","     */","    var support = {};","","    (function() {","","      /**","       * Detect if running in a browser environment.","       *","       * @memberOf Benchmark.support","       * @type boolean","       */","      support.browser = doc && isHostType(context, 'navigator') && !isHostType(context, 'phantom');","","      /**","       * Detect if the Timers API exists.","       *","       * @memberOf Benchmark.support","       * @type boolean","       */","      support.timeout = isHostType(context, 'setTimeout') && isHostType(context, 'clearTimeout');","","      /**","       * Detect if function decompilation is support.","       *","       * @name decompilation","       * @memberOf Benchmark.support","       * @type boolean","       */","      try {","        // Safari 2.x removes commas in object literals from `Function#toString` results.","        // See http://webk.it/11609 for more details.","        // Firefox 3.6 and Opera 9.25 strip grouping parentheses from `Function#toString` results.","        // See http://bugzil.la/559438 for more details.","        support.decompilation = Function(","          ('return (' + (function(x) { return { 'x': '' + (1 + x) + '', 'y': 0 }; }) + ')')","          // Avoid issues with code added by Istanbul.","          .replace(/__cov__[^;]+;/g, '')","        )()(0).x === '1';","      } catch(e) {","        support.decompilation = false;","      }","    }());","","    /**","     * Timer object used by `clock()` and `Deferred#resolve`.","     *","     * @private","     * @type Object","     */","    var timer = {","","      /**","       * The timer namespace object or constructor.","       *","       * @private","       * @memberOf timer","       * @type {Function|Object}","       */","      'ns': Date,","","      /**","       * Starts the deferred timer.","       *","       * @private","       * @memberOf timer","       * @param {Object} deferred The deferred instance.","       */","      'start': null, // Lazy defined in `clock()`.","","      /**","       * Stops the deferred timer.","       *","       * @private","       * @memberOf timer","       * @param {Object} deferred The deferred instance.","       */","      'stop': null // Lazy defined in `clock()`.","    };","","    /*------------------------------------------------------------------------*/","","    /**","     * The Benchmark constructor.","     *","     * Note: The Benchmark constructor exposes a handful of lodash methods to","     * make working with arrays, collections, and objects easier. The lodash","     * methods are:","     * [`each/forEach`](https://lodash.com/docs#forEach), [`forOwn`](https://lodash.com/docs#forOwn),","     * [`has`](https://lodash.com/docs#has), [`indexOf`](https://lodash.com/docs#indexOf),","     * [`map`](https://lodash.com/docs#map), and [`reduce`](https://lodash.com/docs#reduce)","     *","     * @constructor","     * @param {string} name A name to identify the benchmark.","     * @param {Function|string} fn The test to benchmark.","     * @param {Object} [options={}] Options object.","     * @example","     *","     * // basic usage (the `new` operator is optional)","     * var bench = new Benchmark(fn);","     *","     * // or using a name first","     * var bench = new Benchmark('foo', fn);","     *","     * // or with options","     * var bench = new Benchmark('foo', fn, {","     *","     *   // displayed by `Benchmark#toString` if `name` is not available","     *   'id': 'xyz',","     *","     *   // called when the benchmark starts running","     *   'onStart': onStart,","     *","     *   // called after each run cycle","     *   'onCycle': onCycle,","     *","     *   // called when aborted","     *   'onAbort': onAbort,","     *","     *   // called when a test errors","     *   'onError': onError,","     *","     *   // called when reset","     *   'onReset': onReset,","     *","     *   // called when the benchmark completes running","     *   'onComplete': onComplete,","     *","     *   // compiled/called before the test loop","     *   'setup': setup,","     *","     *   // compiled/called after the test loop","     *   'teardown': teardown","     * });","     *","     * // or name and options","     * var bench = new Benchmark('foo', {","     *","     *   // a flag to indicate the benchmark is deferred","     *   'defer': true,","     *","     *   // benchmark test function","     *   'fn': function(deferred) {","     *     // call `Deferred#resolve` when the deferred test is finished","     *     deferred.resolve();","     *   }","     * });","     *","     * // or options only","     * var bench = new Benchmark({","     *","     *   // benchmark name","     *   'name': 'foo',","     *","     *   // benchmark test as a string","     *   'fn': '[1,2,3,4].sort()'","     * });","     *","     * // a test's `this` binding is set to the benchmark instance","     * var bench = new Benchmark('foo', function() {","     *   'My name is '.concat(this.name); // \"My name is foo\"","     * });","     */","    function Benchmark(name, fn, options) {","      var bench = this;","","      // Allow instance creation without the `new` operator.","      if (!(bench instanceof Benchmark)) {","        return new Benchmark(name, fn, options);","      }","      // Juggle arguments.","      if (_.isPlainObject(name)) {","        // 1 argument (options).","        options = name;","      }","      else if (_.isFunction(name)) {","        // 2 arguments (fn, options).","        options = fn;","        fn = name;","      }","      else if (_.isPlainObject(fn)) {","        // 2 arguments (name, options).","        options = fn;","        fn = null;","        bench.name = name;","      }","      else {","        // 3 arguments (name, fn [, options]).","        bench.name = name;","      }","      setOptions(bench, options);","","      bench.id || (bench.id = ++counter);","      bench.fn == null && (bench.fn = fn);","","      bench.stats = cloneDeep(bench.stats);","      bench.times = cloneDeep(bench.times);","    }","","    /**","     * The Deferred constructor.","     *","     * @constructor","     * @memberOf Benchmark","     * @param {Object} clone The cloned benchmark instance.","     */","    function Deferred(clone) {","      var deferred = this;","      if (!(deferred instanceof Deferred)) {","        return new Deferred(clone);","      }","      deferred.benchmark = clone;","      clock(deferred);","    }","","    /**","     * The Event constructor.","     *","     * @constructor","     * @memberOf Benchmark","     * @param {Object|string} type The event type.","     */","    function Event(type) {","      var event = this;","      if (type instanceof Event) {","        return type;","      }","      return (event instanceof Event)","        ? _.assign(event, { 'timeStamp': _.now() }, typeof type == 'string' ? { 'type': type } : type)","        : new Event(type);","    }","","    /**","     * The Suite constructor.","     *","     * Note: Each Suite instance has a handful of wrapped lodash methods to","     * make working with Suites easier. The wrapped lodash methods are:","     * [`each/forEach`](https://lodash.com/docs#forEach), [`indexOf`](https://lodash.com/docs#indexOf),","     * [`map`](https://lodash.com/docs#map), and [`reduce`](https://lodash.com/docs#reduce)","     *","     * @constructor","     * @memberOf Benchmark","     * @param {string} name A name to identify the suite.","     * @param {Object} [options={}] Options object.","     * @example","     *","     * // basic usage (the `new` operator is optional)","     * var suite = new Benchmark.Suite;","     *","     * // or using a name first","     * var suite = new Benchmark.Suite('foo');","     *","     * // or with options","     * var suite = new Benchmark.Suite('foo', {","     *","     *   // called when the suite starts running","     *   'onStart': onStart,","     *","     *   // called between running benchmarks","     *   'onCycle': onCycle,","     *","     *   // called when aborted","     *   'onAbort': onAbort,","     *","     *   // called when a test errors","     *   'onError': onError,","     *","     *   // called when reset","     *   'onReset': onReset,","     *","     *   // called when the suite completes running","     *   'onComplete': onComplete","     * });","     */","    function Suite(name, options) {","      var suite = this;","","      // Allow instance creation without the `new` operator.","      if (!(suite instanceof Suite)) {","        return new Suite(name, options);","      }","      // Juggle arguments.","      if (_.isPlainObject(name)) {","        // 1 argument (options).","        options = name;","      } else {","        // 2 arguments (name [, options]).","        suite.name = name;","      }","      setOptions(suite, options);","    }","","    /*------------------------------------------------------------------------*/","","    /**","     * A specialized version of `_.cloneDeep` which only clones arrays and plain","     * objects assigning all other values by reference.","     *","     * @private","     * @param {*} value The value to clone.","     * @returns {*} The cloned value.","     */","    var cloneDeep = _.partial(_.cloneDeepWith, _, function(value) {","      // Only clone primitives, arrays, and plain objects.","      if (!_.isArray(value) && !_.isPlainObject(value)) {","        return value;","      }","    });","","    /**","     * Creates a function from the given arguments string and body.","     *","     * @private","     * @param {string} args The comma separated function arguments.","     * @param {string} body The function body.","     * @returns {Function} The new function.","     */","    function createFunction() {","      // Lazy define.","      createFunction = function(args, body) {","        var result,","            anchor = freeDefine ? freeDefine.amd : Benchmark,","            prop = uid + 'createFunction';","","        runScript((freeDefine ? 'define.amd.' : 'Benchmark.') + prop + '=function(' + args + '){' + body + '}');","        result = anchor[prop];","        delete anchor[prop];","        return result;","      };","      // Fix JaegerMonkey bug.","      // For more information see http://bugzil.la/639720.","      createFunction = support.browser && (createFunction('', 'return\"' + uid + '\"') || _.noop)() == uid ? createFunction : Function;","      return createFunction.apply(null, arguments);","    }","","    /**","     * Delay the execution of a function based on the benchmark's `delay` property.","     *","     * @private","     * @param {Object} bench The benchmark instance.","     * @param {Object} fn The function to execute.","     */","    function delay(bench, fn) {","      bench._timerId = _.delay(fn, bench.delay * 1e3);","    }","","    /**","     * Destroys the given element.","     *","     * @private","     * @param {Element} element The element to destroy.","     */","    function destroyElement(element) {","      trash.appendChild(element);","      trash.innerHTML = '';","    }","","    /**","     * Gets the name of the first argument from a function's source.","     *","     * @private","     * @param {Function} fn The function.","     * @returns {string} The argument name.","     */","    function getFirstArgument(fn) {","      return (!_.has(fn, 'toString') &&","        (/^[\\s(]*function[^(]*\\(([^\\s,)]+)/.exec(fn) || 0)[1]) || '';","    }","","    /**","     * Computes the arithmetic mean of a sample.","     *","     * @private","     * @param {Array} sample The sample.","     * @returns {number} The mean.","     */","    function getMean(sample) {","      return (_.reduce(sample, function(sum, x) {","        return sum + x;","      }) / sample.length) || 0;","    }","","    /**","     * Gets the source code of a function.","     *","     * @private","     * @param {Function} fn The function.","     * @returns {string} The function's source code.","     */","    function getSource(fn) {","      var result = '';","      if (isStringable(fn)) {","        result = String(fn);","      } else if (support.decompilation) {","        // Escape the `{` for Firefox 1.","        result = _.result(/^[^{]+\\{([\\s\\S]*)\\}\\s*$/.exec(fn), 1);","      }","      // Trim string.","      result = (result || '').replace(/^\\s+|\\s+$/g, '');","","      // Detect strings containing only the \"use strict\" directive.","      return /^(?:\\/\\*+[\\w\\W]*?\\*\\/|\\/\\/.*?[\\n\\r\\u2028\\u2029]|\\s)*([\"'])use strict\\1;?$/.test(result)","        ? ''","        : result;","    }","","    /**","     * Checks if an object is of the specified class.","     *","     * @private","     * @param {*} value The value to check.","     * @param {string} name The name of the class.","     * @returns {boolean} Returns `true` if the value is of the specified class, else `false`.","     */","    function isClassOf(value, name) {","      return value != null && toString.call(value) == '[object ' + name + ']';","    }","","    /**","     * Host objects can return type values that are different from their actual","     * data type. The objects we are concerned with usually return non-primitive","     * types of \"object\", \"function\", or \"unknown\".","     *","     * @private","     * @param {*} object The owner of the property.","     * @param {string} property The property to check.","     * @returns {boolean} Returns `true` if the property value is a non-primitive, else `false`.","     */","    function isHostType(object, property) {","      if (object == null) {","        return false;","      }","      var type = typeof object[property];","      return !rePrimitive.test(type) && (type != 'object' || !!object[property]);","    }","","    /**","     * Checks if a value can be safely coerced to a string.","     *","     * @private","     * @param {*} value The value to check.","     * @returns {boolean} Returns `true` if the value can be coerced, else `false`.","     */","    function isStringable(value) {","      return _.isString(value) || (_.has(value, 'toString') && _.isFunction(value.toString));","    }","","    /**","     * A wrapper around `require` to suppress `module missing` errors.","     *","     * @private","     * @param {string} id The module id.","     * @returns {*} The exported module or `null`.","     */","    function require(id) {","      try {","        var result = freeExports && freeRequire(id);","      } catch(e) {}","      return result || null;","    }","","    /**","     * Runs a snippet of JavaScript via script injection.","     *","     * @private","     * @param {string} code The code to run.","     */","    function runScript(code) {","      var anchor = freeDefine ? define.amd : Benchmark,","          script = doc.createElement('script'),","          sibling = doc.getElementsByTagName('script')[0],","          parent = sibling.parentNode,","          prop = uid + 'runScript',","          prefix = '(' + (freeDefine ? 'define.amd.' : 'Benchmark.') + prop + '||function(){})();';","","      // Firefox 2.0.0.2 cannot use script injection as intended because it executes","      // asynchronously, but that's OK because script injection is only used to avoid","      // the previously commented JaegerMonkey bug.","      try {","        // Remove the inserted script *before* running the code to avoid differences","        // in the expected script element count/order of the document.","        script.appendChild(doc.createTextNode(prefix + code));","        anchor[prop] = function() { destroyElement(script); };","      } catch(e) {","        parent = parent.cloneNode(false);","        sibling = null;","        script.text = code;","      }","      parent.insertBefore(script, sibling);","      delete anchor[prop];","    }","","    /**","     * A helper function for setting options/event handlers.","     *","     * @private","     * @param {Object} object The benchmark or suite instance.","     * @param {Object} [options={}] Options object.","     */","    function setOptions(object, options) {","      options = object.options = _.assign({}, cloneDeep(object.constructor.options), cloneDeep(options));","","      _.forOwn(options, function(value, key) {","        if (value != null) {","          // Add event listeners.","          if (/^on[A-Z]/.test(key)) {","            _.each(key.split(' '), function(key) {","              object.on(key.slice(2).toLowerCase(), value);","            });","          } else if (!_.has(object, key)) {","            object[key] = cloneDeep(value);","          }","        }","      });","    }","","    /*------------------------------------------------------------------------*/","","    /**","     * Handles cycling/completing the deferred benchmark.","     *","     * @memberOf Benchmark.Deferred","     */","    function resolve() {","      var deferred = this,","          clone = deferred.benchmark,","          bench = clone._original;","","      if (bench.aborted) {","        // cycle() -> clone cycle/complete event -> compute()'s invoked bench.run() cycle/complete.","        deferred.teardown();","        clone.running = false;","        cycle(deferred);","      }","      else if (++deferred.cycles < clone.count) {","        clone.compiled.call(deferred, context, timer);","      }","      else {","        timer.stop(deferred);","        deferred.teardown();","        delay(clone, function() { cycle(deferred); });","      }","    }","","    /*------------------------------------------------------------------------*/","","    /**","     * A generic `Array#filter` like method.","     *","     * @static","     * @memberOf Benchmark","     * @param {Array} array The array to iterate over.","     * @param {Function|string} callback The function/alias called per iteration.","     * @returns {Array} A new array of values that passed callback filter.","     * @example","     *","     * // get odd numbers","     * Benchmark.filter([1, 2, 3, 4, 5], function(n) {","     *   return n % 2;","     * }); // -> [1, 3, 5];","     *","     * // get fastest benchmarks","     * Benchmark.filter(benches, 'fastest');","     *","     * // get slowest benchmarks","     * Benchmark.filter(benches, 'slowest');","     *","     * // get benchmarks that completed without erroring","     * Benchmark.filter(benches, 'successful');","     */","    function filter(array, callback) {","      if (callback === 'successful') {","        // Callback to exclude those that are errored, unrun, or have hz of Infinity.","        callback = function(bench) {","          return bench.cycles && _.isFinite(bench.hz) && !bench.error;","        };","      }","      else if (callback === 'fastest' || callback === 'slowest') {","        // Get successful, sort by period + margin of error, and filter fastest/slowest.","        var result = filter(array, 'successful').sort(function(a, b) {","          a = a.stats; b = b.stats;","          return (a.mean + a.moe > b.mean + b.moe ? 1 : -1) * (callback === 'fastest' ? 1 : -1);","        });","","        return _.filter(result, function(bench) {","          return result[0].compare(bench) == 0;","        });","      }","      return _.filter(array, callback);","    }","","    /**","     * Converts a number to a more readable comma-separated string representation.","     *","     * @static","     * @memberOf Benchmark","     * @param {number} number The number to convert.","     * @returns {string} The more readable string representation.","     */","    function formatNumber(number) {","      number = String(number).split('.');","      return number[0].replace(/(?=(?:\\d{3})+$)(?!\\b)/g, ',') +","        (number[1] ? '.' + number[1] : '');","    }","","    /**","     * Invokes a method on all items in an array.","     *","     * @static","     * @memberOf Benchmark","     * @param {Array} benches Array of benchmarks to iterate over.","     * @param {Object|string} name The name of the method to invoke OR options object.","     * @param {...*} [args] Arguments to invoke the method with.","     * @returns {Array} A new array of values returned from each method invoked.","     * @example","     *","     * // invoke `reset` on all benchmarks","     * Benchmark.invoke(benches, 'reset');","     *","     * // invoke `emit` with arguments","     * Benchmark.invoke(benches, 'emit', 'complete', listener);","     *","     * // invoke `run(true)`, treat benchmarks as a queue, and register invoke callbacks","     * Benchmark.invoke(benches, {","     *","     *   // invoke the `run` method","     *   'name': 'run',","     *","     *   // pass a single argument","     *   'args': true,","     *","     *   // treat as queue, removing benchmarks from front of `benches` until empty","     *   'queued': true,","     *","     *   // called before any benchmarks have been invoked.","     *   'onStart': onStart,","     *","     *   // called between invoking benchmarks","     *   'onCycle': onCycle,","     *","     *   // called after all benchmarks have been invoked.","     *   'onComplete': onComplete","     * });","     */","    function invoke(benches, name) {","      var args,","          bench,","          queued,","          index = -1,","          eventProps = { 'currentTarget': benches },","          options = { 'onStart': _.noop, 'onCycle': _.noop, 'onComplete': _.noop },","          result = _.toArray(benches);","","      /**","       * Invokes the method of the current object and if synchronous, fetches the next.","       */","      function execute() {","        var listeners,","            async = isAsync(bench);","","        if (async) {","          // Use `getNext` as the first listener.","          bench.on('complete', getNext);","          listeners = bench.events.complete;","          listeners.splice(0, 0, listeners.pop());","        }","        // Execute method.","        result[index] = _.isFunction(bench && bench[name]) ? bench[name].apply(bench, args) : undefined;","        // If synchronous return `true` until finished.","        return !async && getNext();","      }","","      /**","       * Fetches the next bench or executes `onComplete` callback.","       */","      function getNext(event) {","        var cycleEvent,","            last = bench,","            async = isAsync(last);","","        if (async) {","          last.off('complete', getNext);","          last.emit('complete');","        }","        // Emit \"cycle\" event.","        eventProps.type = 'cycle';","        eventProps.target = last;","        cycleEvent = Event(eventProps);","        options.onCycle.call(benches, cycleEvent);","","        // Choose next benchmark if not exiting early.","        if (!cycleEvent.aborted && raiseIndex() !== false) {","          bench = queued ? benches[0] : result[index];","          if (isAsync(bench)) {","            delay(bench, execute);","          }","          else if (async) {","            // Resume execution if previously asynchronous but now synchronous.","            while (execute()) {}","          }","          else {","            // Continue synchronous execution.","            return true;","          }","        } else {","          // Emit \"complete\" event.","          eventProps.type = 'complete';","          options.onComplete.call(benches, Event(eventProps));","        }","        // When used as a listener `event.aborted = true` will cancel the rest of","        // the \"complete\" listeners because they were already called above and when","        // used as part of `getNext` the `return false` will exit the execution while-loop.","        if (event) {","          event.aborted = true;","        } else {","          return false;","        }","      }","","      /**","       * Checks if invoking `Benchmark#run` with asynchronous cycles.","       */","      function isAsync(object) {","        // Avoid using `instanceof` here because of IE memory leak issues with host objects.","        var async = args[0] && args[0].async;","        return name == 'run' && (object instanceof Benchmark) &&","          ((async == null ? object.options.async : async) && support.timeout || object.defer);","      }","","      /**","       * Raises `index` to the next defined index or returns `false`.","       */","      function raiseIndex() {","        index++;","","        // If queued remove the previous bench.","        if (queued && index > 0) {","          shift.call(benches);","        }","        // If we reached the last index then return `false`.","        return (queued ? benches.length : index < result.length)","          ? index","          : (index = false);","      }","      // Juggle arguments.","      if (_.isString(name)) {","        // 2 arguments (array, name).","        args = slice.call(arguments, 2);","      } else {","        // 2 arguments (array, options).","        options = _.assign(options, name);","        name = options.name;","        args = _.isArray(args = 'args' in options ? options.args : []) ? args : [args];","        queued = options.queued;","      }","      // Start iterating over the array.","      if (raiseIndex() !== false) {","        // Emit \"start\" event.","        bench = result[index];","        eventProps.type = 'start';","        eventProps.target = bench;","        options.onStart.call(benches, Event(eventProps));","","        // End early if the suite was aborted in an \"onStart\" listener.","        if (name == 'run' && (benches instanceof Suite) && benches.aborted) {","          // Emit \"cycle\" event.","          eventProps.type = 'cycle';","          options.onCycle.call(benches, Event(eventProps));","          // Emit \"complete\" event.","          eventProps.type = 'complete';","          options.onComplete.call(benches, Event(eventProps));","        }","        // Start method execution.","        else {","          if (isAsync(bench)) {","            delay(bench, execute);","          } else {","            while (execute()) {}","          }","        }","      }","      return result;","    }","","    /**","     * Creates a string of joined array values or object key-value pairs.","     *","     * @static","     * @memberOf Benchmark","     * @param {Array|Object} object The object to operate on.","     * @param {string} [separator1=','] The separator used between key-value pairs.","     * @param {string} [separator2=': '] The separator used between keys and values.","     * @returns {string} The joined result.","     */","    function join(object, separator1, separator2) {","      var result = [],","          length = (object = Object(object)).length,","          arrayLike = length === length >>> 0;","","      separator2 || (separator2 = ': ');","      _.each(object, function(value, key) {","        result.push(arrayLike ? value : key + separator2 + value);","      });","      return result.join(separator1 || ',');","    }","","    /*------------------------------------------------------------------------*/","","    /**","     * Aborts all benchmarks in the suite.","     *","     * @name abort","     * @memberOf Benchmark.Suite","     * @returns {Object} The suite instance.","     */","    function abortSuite() {","      var event,","          suite = this,","          resetting = calledBy.resetSuite;","","      if (suite.running) {","        event = Event('abort');","        suite.emit(event);","        if (!event.cancelled || resetting) {","          // Avoid infinite recursion.","          calledBy.abortSuite = true;","          suite.reset();","          delete calledBy.abortSuite;","","          if (!resetting) {","            suite.aborted = true;","            invoke(suite, 'abort');","          }","        }","      }","      return suite;","    }","","    /**","     * Adds a test to the benchmark suite.","     *","     * @memberOf Benchmark.Suite","     * @param {string} name A name to identify the benchmark.","     * @param {Function|string} fn The test to benchmark.","     * @param {Object} [options={}] Options object.","     * @returns {Object} The suite instance.","     * @example","     *","     * // basic usage","     * suite.add(fn);","     *","     * // or using a name first","     * suite.add('foo', fn);","     *","     * // or with options","     * suite.add('foo', fn, {","     *   'onCycle': onCycle,","     *   'onComplete': onComplete","     * });","     *","     * // or name and options","     * suite.add('foo', {","     *   'fn': fn,","     *   'onCycle': onCycle,","     *   'onComplete': onComplete","     * });","     *","     * // or options only","     * suite.add({","     *   'name': 'foo',","     *   'fn': fn,","     *   'onCycle': onCycle,","     *   'onComplete': onComplete","     * });","     */","    function add(name, fn, options) {","      var suite = this,","          bench = new Benchmark(name, fn, options),","          event = Event({ 'type': 'add', 'target': bench });","","      if (suite.emit(event), !event.cancelled) {","        suite.push(bench);","      }","      return suite;","    }","","    /**","     * Creates a new suite with cloned benchmarks.","     *","     * @name clone","     * @memberOf Benchmark.Suite","     * @param {Object} options Options object to overwrite cloned options.","     * @returns {Object} The new suite instance.","     */","    function cloneSuite(options) {","      var suite = this,","          result = new suite.constructor(_.assign({}, suite.options, options));","","      // Copy own properties.","      _.forOwn(suite, function(value, key) {","        if (!_.has(result, key)) {","          result[key] = _.isFunction(_.get(value, 'clone'))","            ? value.clone()","            : cloneDeep(value);","        }","      });","      return result;","    }","","    /**","     * An `Array#filter` like method.","     *","     * @name filter","     * @memberOf Benchmark.Suite","     * @param {Function|string} callback The function/alias called per iteration.","     * @returns {Object} A new suite of benchmarks that passed callback filter.","     */","    function filterSuite(callback) {","      var suite = this,","          result = new suite.constructor(suite.options);","","      result.push.apply(result, filter(suite, callback));","      return result;","    }","","    /**","     * Resets all benchmarks in the suite.","     *","     * @name reset","     * @memberOf Benchmark.Suite","     * @returns {Object} The suite instance.","     */","    function resetSuite() {","      var event,","          suite = this,","          aborting = calledBy.abortSuite;","","      if (suite.running && !aborting) {","        // No worries, `resetSuite()` is called within `abortSuite()`.","        calledBy.resetSuite = true;","        suite.abort();","        delete calledBy.resetSuite;","      }","      // Reset if the state has changed.","      else if ((suite.aborted || suite.running) &&","          (suite.emit(event = Event('reset')), !event.cancelled)) {","        suite.aborted = suite.running = false;","        if (!aborting) {","          invoke(suite, 'reset');","        }","      }","      return suite;","    }","","    /**","     * Runs the suite.","     *","     * @name run","     * @memberOf Benchmark.Suite","     * @param {Object} [options={}] Options object.","     * @returns {Object} The suite instance.","     * @example","     *","     * // basic usage","     * suite.run();","     *","     * // or with options","     * suite.run({ 'async': true, 'queued': true });","     */","    function runSuite(options) {","      var suite = this;","","      suite.reset();","      suite.running = true;","      options || (options = {});","","      invoke(suite, {","        'name': 'run',","        'args': options,","        'queued': options.queued,","        'onStart': function(event) {","          suite.emit(event);","        },","        'onCycle': function(event) {","          var bench = event.target;","          if (bench.error) {","            suite.emit({ 'type': 'error', 'target': bench });","          }","          suite.emit(event);","          event.aborted = suite.aborted;","        },","        'onComplete': function(event) {","          suite.running = false;","          suite.emit(event);","        }","      });","      return suite;","    }","","    /*------------------------------------------------------------------------*/","","    /**","     * Executes all registered listeners of the specified event type.","     *","     * @memberOf Benchmark, Benchmark.Suite","     * @param {Object|string} type The event type or object.","     * @param {...*} [args] Arguments to invoke the listener with.","     * @returns {*} Returns the return value of the last listener executed.","     */","    function emit(type) {","      var listeners,","          object = this,","          event = Event(type),","          events = object.events,","          args = (arguments[0] = event, arguments);","","      event.currentTarget || (event.currentTarget = object);","      event.target || (event.target = object);","      delete event.result;","","      if (events && (listeners = _.has(events, event.type) && events[event.type])) {","        _.each(listeners.slice(), function(listener) {","          if ((event.result = listener.apply(object, args)) === false) {","            event.cancelled = true;","          }","          return !event.aborted;","        });","      }","      return event.result;","    }","","    /**","     * Returns an array of event listeners for a given type that can be manipulated","     * to add or remove listeners.","     *","     * @memberOf Benchmark, Benchmark.Suite","     * @param {string} type The event type.","     * @returns {Array} The listeners array.","     */","    function listeners(type) {","      var object = this,","          events = object.events || (object.events = {});","","      return _.has(events, type) ? events[type] : (events[type] = []);","    }","","    /**","     * Unregisters a listener for the specified event type(s),","     * or unregisters all listeners for the specified event type(s),","     * or unregisters all listeners for all event types.","     *","     * @memberOf Benchmark, Benchmark.Suite","     * @param {string} [type] The event type.","     * @param {Function} [listener] The function to unregister.","     * @returns {Object} The current instance.","     * @example","     *","     * // unregister a listener for an event type","     * bench.off('cycle', listener);","     *","     * // unregister a listener for multiple event types","     * bench.off('start cycle', listener);","     *","     * // unregister all listeners for an event type","     * bench.off('cycle');","     *","     * // unregister all listeners for multiple event types","     * bench.off('start cycle complete');","     *","     * // unregister all listeners for all event types","     * bench.off();","     */","    function off(type, listener) {","      var object = this,","          events = object.events;","","      if (!events) {","        return object;","      }","      _.each(type ? type.split(' ') : events, function(listeners, type) {","        var index;","        if (typeof listeners == 'string') {","          type = listeners;","          listeners = _.has(events, type) && events[type];","        }","        if (listeners) {","          if (listener) {","            index = _.indexOf(listeners, listener);","            if (index > -1) {","              listeners.splice(index, 1);","            }","          } else {","            listeners.length = 0;","          }","        }","      });","      return object;","    }","","    /**","     * Registers a listener for the specified event type(s).","     *","     * @memberOf Benchmark, Benchmark.Suite","     * @param {string} type The event type.","     * @param {Function} listener The function to register.","     * @returns {Object} The current instance.","     * @example","     *","     * // register a listener for an event type","     * bench.on('cycle', listener);","     *","     * // register a listener for multiple event types","     * bench.on('start cycle', listener);","     */","    function on(type, listener) {","      var object = this,","          events = object.events || (object.events = {});","","      _.each(type.split(' '), function(type) {","        (_.has(events, type)","          ? events[type]","          : (events[type] = [])","        ).push(listener);","      });","      return object;","    }","","    /*------------------------------------------------------------------------*/","","    /**","     * Aborts the benchmark without recording times.","     *","     * @memberOf Benchmark","     * @returns {Object} The benchmark instance.","     */","    function abort() {","      var event,","          bench = this,","          resetting = calledBy.reset;","","      if (bench.running) {","        event = Event('abort');","        bench.emit(event);","        if (!event.cancelled || resetting) {","          // Avoid infinite recursion.","          calledBy.abort = true;","          bench.reset();","          delete calledBy.abort;","","          if (support.timeout) {","            clearTimeout(bench._timerId);","            delete bench._timerId;","          }","          if (!resetting) {","            bench.aborted = true;","            bench.running = false;","          }","        }","      }","      return bench;","    }","","    /**","     * Creates a new benchmark using the same test and options.","     *","     * @memberOf Benchmark","     * @param {Object} options Options object to overwrite cloned options.","     * @returns {Object} The new benchmark instance.","     * @example","     *","     * var bizarro = bench.clone({","     *   'name': 'doppelganger'","     * });","     */","    function clone(options) {","      var bench = this,","          result = new bench.constructor(_.assign({}, bench, options));","","      // Correct the `options` object.","      result.options = _.assign({}, cloneDeep(bench.options), cloneDeep(options));","","      // Copy own custom properties.","      _.forOwn(bench, function(value, key) {","        if (!_.has(result, key)) {","          result[key] = cloneDeep(value);","        }","      });","","      return result;","    }","","    /**","     * Determines if a benchmark is faster than another.","     *","     * @memberOf Benchmark","     * @param {Object} other The benchmark to compare.","     * @returns {number} Returns `-1` if slower, `1` if faster, and `0` if indeterminate.","     */","    function compare(other) {","      var bench = this;","","      // Exit early if comparing the same benchmark.","      if (bench == other) {","        return 0;","      }","      var critical,","          zStat,","          sample1 = bench.stats.sample,","          sample2 = other.stats.sample,","          size1 = sample1.length,","          size2 = sample2.length,","          maxSize = max(size1, size2),","          minSize = min(size1, size2),","          u1 = getU(sample1, sample2),","          u2 = getU(sample2, sample1),","          u = min(u1, u2);","","      function getScore(xA, sampleB) {","        return _.reduce(sampleB, function(total, xB) {","          return total + (xB > xA ? 0 : xB < xA ? 1 : 0.5);","        }, 0);","      }","","      function getU(sampleA, sampleB) {","        return _.reduce(sampleA, function(total, xA) {","          return total + getScore(xA, sampleB);","        }, 0);","      }","","      function getZ(u) {","        return (u - ((size1 * size2) / 2)) / sqrt((size1 * size2 * (size1 + size2 + 1)) / 12);","      }","      // Reject the null hypothesis the two samples come from the","      // same population (i.e. have the same median) if...","      if (size1 + size2 > 30) {","        // ...the z-stat is greater than 1.96 or less than -1.96","        // http://www.statisticslectures.com/topics/mannwhitneyu/","        zStat = getZ(u);","        return abs(zStat) > 1.96 ? (u == u1 ? 1 : -1) : 0;","      }","      // ...the U value is less than or equal the critical U value.","      critical = maxSize < 5 || minSize < 3 ? 0 : uTable[maxSize][minSize - 3];","      return u <= critical ? (u == u1 ? 1 : -1) : 0;","    }","","    /**","     * Reset properties and abort if running.","     *","     * @memberOf Benchmark","     * @returns {Object} The benchmark instance.","     */","    function reset() {","      var bench = this;","      if (bench.running && !calledBy.abort) {","        // No worries, `reset()` is called within `abort()`.","        calledBy.reset = true;","        bench.abort();","        delete calledBy.reset;","        return bench;","      }","      var event,","          index = 0,","          changes = [],","          queue = [];","","      // A non-recursive solution to check if properties have changed.","      // For more information see http://www.jslab.dk/articles/non.recursive.preorder.traversal.part4.","      var data = {","        'destination': bench,","        'source': _.assign({}, cloneDeep(bench.constructor.prototype), cloneDeep(bench.options))","      };","","      do {","        _.forOwn(data.source, function(value, key) {","          var changed,","              destination = data.destination,","              currValue = destination[key];","","          // Skip pseudo private properties and event listeners.","          if (/^_|^events$|^on[A-Z]/.test(key)) {","            return;","          }","          if (_.isObjectLike(value)) {","            if (_.isArray(value)) {","              // Check if an array value has changed to a non-array value.","              if (!_.isArray(currValue)) {","                changed = true;","                currValue = [];","              }","              // Check if an array has changed its length.","              if (currValue.length != value.length) {","                changed = true;","                currValue = currValue.slice(0, value.length);","                currValue.length = value.length;","              }","            }","            // Check if an object has changed to a non-object value.","            else if (!_.isObjectLike(currValue)) {","              changed = true;","              currValue = {};","            }","            // Register a changed object.","            if (changed) {","              changes.push({ 'destination': destination, 'key': key, 'value': currValue });","            }","            queue.push({ 'destination': currValue, 'source': value });","          }","          // Register a changed primitive.","          else if (!_.eq(currValue, value) && value !== undefined) {","            changes.push({ 'destination': destination, 'key': key, 'value': value });","          }","        });","      }","      while ((data = queue[index++]));","","      // If changed emit the `reset` event and if it isn't cancelled reset the benchmark.","      if (changes.length &&","          (bench.emit(event = Event('reset')), !event.cancelled)) {","        _.each(changes, function(data) {","          data.destination[data.key] = data.value;","        });","      }","      return bench;","    }","","    /**","     * Displays relevant benchmark information when coerced to a string.","     *","     * @name toString","     * @memberOf Benchmark","     * @returns {string} A string representation of the benchmark instance.","     */","    function toStringBench() {","      var bench = this,","          error = bench.error,","          hz = bench.hz,","          id = bench.id,","          stats = bench.stats,","          size = stats.sample.length,","          pm = '\\xb1',","          result = bench.name || (_.isNaN(id) ? id : '<Test #' + id + '>');","","      if (error) {","        var errorStr;","        if (!_.isObject(error)) {","          errorStr = String(error);","        } else if (!_.isError(Error)) {","          errorStr = join(error);","        } else {","          // Error#name and Error#message properties are non-enumerable.","          errorStr = join(_.assign({ 'name': error.name, 'message': error.message }, error));","        }","        result += ': ' + errorStr;","      }","      else {","        result += ' x ' + formatNumber(hz.toFixed(hz < 100 ? 2 : 0)) + ' ops/sec ' + pm +","          stats.rme.toFixed(2) + '% (' + size + ' run' + (size == 1 ? '' : 's') + ' sampled)';","      }","      return result;","    }","","    /*------------------------------------------------------------------------*/","","    /**","     * Clocks the time taken to execute a test per cycle (secs).","     *","     * @private","     * @param {Object} bench The benchmark instance.","     * @returns {number} The time taken.","     */","    function clock() {","      var options = Benchmark.options,","          templateData = {},","          timers = [{ 'ns': timer.ns, 'res': max(0.0015, getRes('ms')), 'unit': 'ms' }];","","      // Lazy define for hi-res timers.","      clock = function(clone) {","        var deferred;","","        if (clone instanceof Deferred) {","          deferred = clone;","          clone = deferred.benchmark;","        }","        var bench = clone._original,","            stringable = isStringable(bench.fn),","            count = bench.count = clone.count,","            decompilable = stringable || (support.decompilation && (clone.setup !== _.noop || clone.teardown !== _.noop)),","            id = bench.id,","            name = bench.name || (typeof id == 'number' ? '<Test #' + id + '>' : id),","            result = 0;","","        // Init `minTime` if needed.","        clone.minTime = bench.minTime || (bench.minTime = bench.options.minTime = options.minTime);","","        // Compile in setup/teardown functions and the test loop.","        // Create a new compiled test, instead of using the cached `bench.compiled`,","        // to avoid potential engine optimizations enabled over the life of the test.","        var funcBody = deferred","          ? 'var d#=this,${fnArg}=d#,m#=d#.benchmark._original,f#=m#.fn,su#=m#.setup,td#=m#.teardown;' +","            // When `deferred.cycles` is `0` then...","            'if(!d#.cycles){' +","            // set `deferred.fn`,","            'd#.fn=function(){var ${fnArg}=d#;if(typeof f#==\"function\"){try{${fn}\\n}catch(e#){f#(d#)}}else{${fn}\\n}};' +","            // set `deferred.teardown`,","            'd#.teardown=function(){d#.cycles=0;if(typeof td#==\"function\"){try{${teardown}\\n}catch(e#){td#()}}else{${teardown}\\n}};' +","            // execute the benchmark's `setup`,","            'if(typeof su#==\"function\"){try{${setup}\\n}catch(e#){su#()}}else{${setup}\\n};' +","            // start timer,","            't#.start(d#);' +","            // and then execute `deferred.fn` and return a dummy object.","            '}d#.fn();return{uid:\"${uid}\"}'","","          : 'var r#,s#,m#=this,f#=m#.fn,i#=m#.count,n#=t#.ns;${setup}\\n${begin};' +","            'while(i#--){${fn}\\n}${end};${teardown}\\nreturn{elapsed:r#,uid:\"${uid}\"}';","","        var compiled = bench.compiled = clone.compiled = createCompiled(bench, decompilable, deferred, funcBody),","            isEmpty = !(templateData.fn || stringable);","","        try {","          if (isEmpty) {","            // Firefox may remove dead code from `Function#toString` results.","            // For more information see http://bugzil.la/536085.","            throw new Error('The test \"' + name + '\" is empty. This may be the result of dead code removal.');","          }","          else if (!deferred) {","            // Pretest to determine if compiled code exits early, usually by a","            // rogue `return` statement, by checking for a return object with the uid.","            bench.count = 1;","            compiled = decompilable && (compiled.call(bench, context, timer) || {}).uid == templateData.uid && compiled;","            bench.count = count;","          }","        } catch(e) {","          compiled = null;","          clone.error = e || new Error(String(e));","          bench.count = count;","        }","        // Fallback when a test exits early or errors during pretest.","        if (!compiled && !deferred && !isEmpty) {","          funcBody = (","            stringable || (decompilable && !clone.error)","              ? 'function f#(){${fn}\\n}var r#,s#,m#=this,i#=m#.count'","              : 'var r#,s#,m#=this,f#=m#.fn,i#=m#.count'","            ) +","            ',n#=t#.ns;${setup}\\n${begin};m#.f#=f#;while(i#--){m#.f#()}${end};' +","            'delete m#.f#;${teardown}\\nreturn{elapsed:r#}';","","          compiled = createCompiled(bench, decompilable, deferred, funcBody);","","          try {","            // Pretest one more time to check for errors.","            bench.count = 1;","            compiled.call(bench, context, timer);","            bench.count = count;","            delete clone.error;","          }","          catch(e) {","            bench.count = count;","            if (!clone.error) {","              clone.error = e || new Error(String(e));","            }","          }","        }","        // If no errors run the full test loop.","        if (!clone.error) {","          compiled = bench.compiled = clone.compiled = createCompiled(bench, decompilable, deferred, funcBody);","          result = compiled.call(deferred || bench, context, timer).elapsed;","        }","        return result;","      };","","      /*----------------------------------------------------------------------*/","","      /**","       * Creates a compiled function from the given function `body`.","       */","      function createCompiled(bench, decompilable, deferred, body) {","        var fn = bench.fn,","            fnArg = deferred ? getFirstArgument(fn) || 'deferred' : '';","","        templateData.uid = uid + uidCounter++;","","        _.assign(templateData, {","          'setup': decompilable ? getSource(bench.setup) : interpolate('m#.setup()'),","          'fn': decompilable ? getSource(fn) : interpolate('m#.fn(' + fnArg + ')'),","          'fnArg': fnArg,","          'teardown': decompilable ? getSource(bench.teardown) : interpolate('m#.teardown()')","        });","","        // Use API of chosen timer.","        if (timer.unit == 'ns') {","          _.assign(templateData, {","            'begin': interpolate('s#=n#()'),","            'end': interpolate('r#=n#(s#);r#=r#[0]+(r#[1]/1e9)')","          });","        }","        else if (timer.unit == 'us') {","          if (timer.ns.stop) {","            _.assign(templateData, {","              'begin': interpolate('s#=n#.start()'),","              'end': interpolate('r#=n#.microseconds()/1e6')","            });","          } else {","            _.assign(templateData, {","              'begin': interpolate('s#=n#()'),","              'end': interpolate('r#=(n#()-s#)/1e6')","            });","          }","        }","        else if (timer.ns.now) {","          _.assign(templateData, {","            'begin': interpolate('s#=n#.now()'),","            'end': interpolate('r#=(n#.now()-s#)/1e3')","          });","        }","        else {","          _.assign(templateData, {","            'begin': interpolate('s#=new n#().getTime()'),","            'end': interpolate('r#=(new n#().getTime()-s#)/1e3')","          });","        }","        // Define `timer` methods.","        timer.start = createFunction(","          interpolate('o#'),","          interpolate('var n#=this.ns,${begin};o#.elapsed=0;o#.timeStamp=s#')","        );","","        timer.stop = createFunction(","          interpolate('o#'),","          interpolate('var n#=this.ns,s#=o#.timeStamp,${end};o#.elapsed=r#')","        );","","        // Create compiled test.","        return createFunction(","          interpolate('window,t#'),","          'var global = window, clearTimeout = global.clearTimeout, setTimeout = global.setTimeout;\\n' +","          interpolate(body)","        );","      }","","      /**","       * Gets the current timer's minimum resolution (secs).","       */","      function getRes(unit) {","        var measured,","            begin,","            count = 30,","            divisor = 1e3,","            ns = timer.ns,","            sample = [];","","        // Get average smallest measurable time.","        while (count--) {","          if (unit == 'us') {","            divisor = 1e6;","            if (ns.stop) {","              ns.start();","              while (!(measured = ns.microseconds())) {}","            } else {","              begin = ns();","              while (!(measured = ns() - begin)) {}","            }","          }","          else if (unit == 'ns') {","            divisor = 1e9;","            begin = (begin = ns())[0] + (begin[1] / divisor);","            while (!(measured = ((measured = ns())[0] + (measured[1] / divisor)) - begin)) {}","            divisor = 1;","          }","          else if (ns.now) {","            begin = ns.now();","            while (!(measured = ns.now() - begin)) {}","          }","          else {","            begin = new ns().getTime();","            while (!(measured = new ns().getTime() - begin)) {}","          }","          // Check for broken timers.","          if (measured > 0) {","            sample.push(measured);","          } else {","            sample.push(Infinity);","            break;","          }","        }","        // Convert to seconds.","        return getMean(sample) / divisor;","      }","","      /**","       * Interpolates a given template string.","       */","      function interpolate(string) {","        // Replaces all occurrences of `#` with a unique number and template tokens with content.","        return _.template(string.replace(/\\#/g, /\\d+/.exec(templateData.uid)))(templateData);","      }","","      /*----------------------------------------------------------------------*/","","      // Detect Chrome's microsecond timer:","      // enable benchmarking via the --enable-benchmarking command","      // line switch in at least Chrome 7 to use chrome.Interval","      try {","        if ((timer.ns = new (context.chrome || context.chromium).Interval)) {","          timers.push({ 'ns': timer.ns, 'res': getRes('us'), 'unit': 'us' });","        }","      } catch(e) {}","","      // Detect Node.js's nanosecond resolution timer available in Node.js >= 0.8.","      if (processObject && typeof (timer.ns = processObject.hrtime) == 'function') {","        timers.push({ 'ns': timer.ns, 'res': getRes('ns'), 'unit': 'ns' });","      }","      // Detect Wade Simmons' Node.js `microtime` module.","      if (microtimeObject && typeof (timer.ns = microtimeObject.now) == 'function') {","        timers.push({ 'ns': timer.ns,  'res': getRes('us'), 'unit': 'us' });","      }","      // Pick timer with highest resolution.","      timer = _.minBy(timers, 'res');","","      // Error if there are no working timers.","      if (timer.res == Infinity) {","        throw new Error('Benchmark.js was unable to find a working timer.');","      }","      // Resolve time span required to achieve a percent uncertainty of at most 1%.","      // For more information see http://spiff.rit.edu/classes/phys273/uncert/uncert.html.","      options.minTime || (options.minTime = max(timer.res / 2 / 0.01, 0.05));","      return clock.apply(null, arguments);","    }","","    /*------------------------------------------------------------------------*/","","    /**","     * Computes stats on benchmark results.","     *","     * @private","     * @param {Object} bench The benchmark instance.","     * @param {Object} options The options object.","     */","    function compute(bench, options) {","      options || (options = {});","","      var async = options.async,","          elapsed = 0,","          initCount = bench.initCount,","          minSamples = bench.minSamples,","          queue = [],","          sample = bench.stats.sample;","","      /**","       * Adds a clone to the queue.","       */","      function enqueue() {","        queue.push(_.assign(bench.clone(), {","          '_original': bench,","          'events': {","            'abort': [update],","            'cycle': [update],","            'error': [update],","            'start': [update]","          }","        }));","      }","","      /**","       * Updates the clone/original benchmarks to keep their data in sync.","       */","      function update(event) {","        var clone = this,","            type = event.type;","","        if (bench.running) {","          if (type == 'start') {","            // Note: `clone.minTime` prop is inited in `clock()`.","            clone.count = bench.initCount;","          }","          else {","            if (type == 'error') {","              bench.error = clone.error;","            }","            if (type == 'abort') {","              bench.abort();","              bench.emit('cycle');","            } else {","              event.currentTarget = event.target = bench;","              bench.emit(event);","            }","          }","        } else if (bench.aborted) {","          // Clear abort listeners to avoid triggering bench's abort/cycle again.","          clone.events.abort.length = 0;","          clone.abort();","        }","      }","","      /**","       * Determines if more clones should be queued or if cycling should stop.","       */","      function evaluate(event) {","        var critical,","            df,","            mean,","            moe,","            rme,","            sd,","            sem,","            variance,","            clone = event.target,","            done = bench.aborted,","            now = _.now(),","            size = sample.push(clone.times.period),","            maxedOut = size >= minSamples && (elapsed += now - clone.times.timeStamp) / 1e3 > bench.maxTime,","            times = bench.times,","            varOf = function(sum, x) { return sum + pow(x - mean, 2); };","","        // Exit early for aborted or unclockable tests.","        if (done || clone.hz == Infinity) {","          maxedOut = !(size = sample.length = queue.length = 0);","        }","","        if (!done) {","          // Compute the sample mean (estimate of the population mean).","          mean = getMean(sample);","          // Compute the sample variance (estimate of the population variance).","          variance = _.reduce(sample, varOf, 0) / (size - 1) || 0;","          // Compute the sample standard deviation (estimate of the population standard deviation).","          sd = sqrt(variance);","          // Compute the standard error of the mean (a.k.a. the standard deviation of the sampling distribution of the sample mean).","          sem = sd / sqrt(size);","          // Compute the degrees of freedom.","          df = size - 1;","          // Compute the critical value.","          critical = tTable[Math.round(df) || 1] || tTable.infinity;","          // Compute the margin of error.","          moe = sem * critical;","          // Compute the relative margin of error.","          rme = (moe / mean) * 100 || 0;","","          _.assign(bench.stats, {","            'deviation': sd,","            'mean': mean,","            'moe': moe,","            'rme': rme,","            'sem': sem,","            'variance': variance","          });","","          // Abort the cycle loop when the minimum sample size has been collected","          // and the elapsed time exceeds the maximum time allowed per benchmark.","          // We don't count cycle delays toward the max time because delays may be","          // increased by browsers that clamp timeouts for inactive tabs. For more","          // information see https://developer.mozilla.org/en/window.setTimeout#Inactive_tabs.","          if (maxedOut) {","            // Reset the `initCount` in case the benchmark is rerun.","            bench.initCount = initCount;","            bench.running = false;","            done = true;","            times.elapsed = (now - times.timeStamp) / 1e3;","          }","          if (bench.hz != Infinity) {","            bench.hz = 1 / mean;","            times.cycle = mean * bench.count;","            times.period = mean;","          }","        }","        // If time permits, increase sample size to reduce the margin of error.","        if (queue.length < 2 && !maxedOut) {","          enqueue();","        }","        // Abort the `invoke` cycle when done.","        event.aborted = done;","      }","","      // Init queue and begin.","      enqueue();","      invoke(queue, {","        'name': 'run',","        'args': { 'async': async },","        'queued': true,","        'onCycle': evaluate,","        'onComplete': function() { bench.emit('complete'); }","      });","    }","","    /*------------------------------------------------------------------------*/","","    /**","     * Cycles a benchmark until a run `count` can be established.","     *","     * @private","     * @param {Object} clone The cloned benchmark instance.","     * @param {Object} options The options object.","     */","    function cycle(clone, options) {","      options || (options = {});","","      var deferred;","      if (clone instanceof Deferred) {","        deferred = clone;","        clone = clone.benchmark;","      }","      var clocked,","          cycles,","          divisor,","          event,","          minTime,","          period,","          async = options.async,","          bench = clone._original,","          count = clone.count,","          times = clone.times;","","      // Continue, if not aborted between cycles.","      if (clone.running) {","        // `minTime` is set to `Benchmark.options.minTime` in `clock()`.","        cycles = ++clone.cycles;","        clocked = deferred ? deferred.elapsed : clock(clone);","        minTime = clone.minTime;","","        if (cycles > bench.cycles) {","          bench.cycles = cycles;","        }","        if (clone.error) {","          event = Event('error');","          event.message = clone.error;","          clone.emit(event);","          if (!event.cancelled) {","            clone.abort();","          }","        }","      }","      // Continue, if not errored.","      if (clone.running) {","        // Compute the time taken to complete last test cycle.","        bench.times.cycle = times.cycle = clocked;","        // Compute the seconds per operation.","        period = bench.times.period = times.period = clocked / count;","        // Compute the ops per second.","        bench.hz = clone.hz = 1 / period;","        // Avoid working our way up to this next time.","        bench.initCount = clone.initCount = count;","        // Do we need to do another cycle?","        clone.running = clocked < minTime;","","        if (clone.running) {","          // Tests may clock at `0` when `initCount` is a small number,","          // to avoid that we set its count to something a bit higher.","          if (!clocked && (divisor = divisors[clone.cycles]) != null) {","            count = floor(4e6 / divisor);","          }","          // Calculate how many more iterations it will take to achieve the `minTime`.","          if (count <= clone.count) {","            count += Math.ceil((minTime - clocked) / period);","          }","          clone.running = count != Infinity;","        }","      }","      // Should we exit early?","      event = Event('cycle');","      clone.emit(event);","      if (event.aborted) {","        clone.abort();","      }","      // Figure out what to do next.","      if (clone.running) {","        // Start a new cycle.","        clone.count = count;","        if (deferred) {","          clone.compiled.call(deferred, context, timer);","        } else if (async) {","          delay(clone, function() { cycle(clone, options); });","        } else {","          cycle(clone);","        }","      }","      else {","        // Fix TraceMonkey bug associated with clock fallbacks.","        // For more information see http://bugzil.la/509069.","        if (support.browser) {","          runScript(uid + '=1;delete ' + uid);","        }","        // We're done.","        clone.emit('complete');","      }","    }","","    /*------------------------------------------------------------------------*/","","    /**","     * Runs the benchmark.","     *","     * @memberOf Benchmark","     * @param {Object} [options={}] Options object.","     * @returns {Object} The benchmark instance.","     * @example","     *","     * // basic usage","     * bench.run();","     *","     * // or with options","     * bench.run({ 'async': true });","     */","    function run(options) {","      var bench = this,","          event = Event('start');","","      // Set `running` to `false` so `reset()` won't call `abort()`.","      bench.running = false;","      bench.reset();","      bench.running = true;","","      bench.count = bench.initCount;","      bench.times.timeStamp = _.now();","      bench.emit(event);","","      if (!event.cancelled) {","        options = { 'async': ((options = options && options.async) == null ? bench.async : options) && support.timeout };","","        // For clones created within `compute()`.","        if (bench._original) {","          if (bench.defer) {","            Deferred(bench);","          } else {","            cycle(bench, options);","          }","        }","        // For original benchmarks.","        else {","          compute(bench, options);","        }","      }","      return bench;","    }","","    /*------------------------------------------------------------------------*/","","    // Firefox 1 erroneously defines variable and argument names of functions on","    // the function itself as non-configurable properties with `undefined` values.","    // The bugginess continues as the `Benchmark` constructor has an argument","    // named `options` and Firefox 1 will not assign a value to `Benchmark.options`,","    // making it non-writable in the process, unless it is the first property","    // assigned by for-in loop of `_.assign()`.","    _.assign(Benchmark, {","","      /**","       * The default options copied by benchmark instances.","       *","       * @static","       * @memberOf Benchmark","       * @type Object","       */","      'options': {","","        /**","         * A flag to indicate that benchmark cycles will execute asynchronously","         * by default.","         *","         * @memberOf Benchmark.options","         * @type boolean","         */","        'async': false,","","        /**","         * A flag to indicate that the benchmark clock is deferred.","         *","         * @memberOf Benchmark.options","         * @type boolean","         */","        'defer': false,","","        /**","         * The delay between test cycles (secs).","         * @memberOf Benchmark.options","         * @type number","         */","        'delay': 0.005,","","        /**","         * Displayed by `Benchmark#toString` when a `name` is not available","         * (auto-generated if absent).","         *","         * @memberOf Benchmark.options","         * @type string","         */","        'id': undefined,","","        /**","         * The default number of times to execute a test on a benchmark's first cycle.","         *","         * @memberOf Benchmark.options","         * @type number","         */","        'initCount': 1,","","        /**","         * The maximum time a benchmark is allowed to run before finishing (secs).","         *","         * Note: Cycle delays aren't counted toward the maximum time.","         *","         * @memberOf Benchmark.options","         * @type number","         */","        'maxTime': 5,","","        /**","         * The minimum sample size required to perform statistical analysis.","         *","         * @memberOf Benchmark.options","         * @type number","         */","        'minSamples': 5,","","        /**","         * The time needed to reduce the percent uncertainty of measurement to 1% (secs).","         *","         * @memberOf Benchmark.options","         * @type number","         */","        'minTime': 0,","","        /**","         * The name of the benchmark.","         *","         * @memberOf Benchmark.options","         * @type string","         */","        'name': undefined,","","        /**","         * An event listener called when the benchmark is aborted.","         *","         * @memberOf Benchmark.options","         * @type Function","         */","        'onAbort': undefined,","","        /**","         * An event listener called when the benchmark completes running.","         *","         * @memberOf Benchmark.options","         * @type Function","         */","        'onComplete': undefined,","","        /**","         * An event listener called after each run cycle.","         *","         * @memberOf Benchmark.options","         * @type Function","         */","        'onCycle': undefined,","","        /**","         * An event listener called when a test errors.","         *","         * @memberOf Benchmark.options","         * @type Function","         */","        'onError': undefined,","","        /**","         * An event listener called when the benchmark is reset.","         *","         * @memberOf Benchmark.options","         * @type Function","         */","        'onReset': undefined,","","        /**","         * An event listener called when the benchmark starts running.","         *","         * @memberOf Benchmark.options","         * @type Function","         */","        'onStart': undefined","      },","","      /**","       * Platform object with properties describing things like browser name,","       * version, and operating system. See [`platform.js`](https://mths.be/platform).","       *","       * @static","       * @memberOf Benchmark","       * @type Object","       */","      'platform': context.platform || require('platform') || ({","        'description': context.navigator && context.navigator.userAgent || null,","        'layout': null,","        'product': null,","        'name': null,","        'manufacturer': null,","        'os': null,","        'prerelease': null,","        'version': null,","        'toString': function() {","          return this.description || '';","        }","      }),","","      /**","       * The semantic version number.","       *","       * @static","       * @memberOf Benchmark","       * @type string","       */","      'version': '2.1.4'","    });","","    _.assign(Benchmark, {","      'filter': filter,","      'formatNumber': formatNumber,","      'invoke': invoke,","      'join': join,","      'runInContext': runInContext,","      'support': support","    });","","    // Add lodash methods to Benchmark.","    _.each(['each', 'forEach', 'forOwn', 'has', 'indexOf', 'map', 'reduce'], function(methodName) {","      Benchmark[methodName] = _[methodName];","    });","","    /*------------------------------------------------------------------------*/","","    _.assign(Benchmark.prototype, {","","      /**","       * The number of times a test was executed.","       *","       * @memberOf Benchmark","       * @type number","       */","      'count': 0,","","      /**","       * The number of cycles performed while benchmarking.","       *","       * @memberOf Benchmark","       * @type number","       */","      'cycles': 0,","","      /**","       * The number of executions per second.","       *","       * @memberOf Benchmark","       * @type number","       */","      'hz': 0,","","      /**","       * The compiled test function.","       *","       * @memberOf Benchmark","       * @type {Function|string}","       */","      'compiled': undefined,","","      /**","       * The error object if the test failed.","       *","       * @memberOf Benchmark","       * @type Object","       */","      'error': undefined,","","      /**","       * The test to benchmark.","       *","       * @memberOf Benchmark","       * @type {Function|string}","       */","      'fn': undefined,","","      /**","       * A flag to indicate if the benchmark is aborted.","       *","       * @memberOf Benchmark","       * @type boolean","       */","      'aborted': false,","","      /**","       * A flag to indicate if the benchmark is running.","       *","       * @memberOf Benchmark","       * @type boolean","       */","      'running': false,","","      /**","       * Compiled into the test and executed immediately **before** the test loop.","       *","       * @memberOf Benchmark","       * @type {Function|string}","       * @example","       *","       * // basic usage","       * var bench = Benchmark({","       *   'setup': function() {","       *     var c = this.count,","       *         element = document.getElementById('container');","       *     while (c--) {","       *       element.appendChild(document.createElement('div'));","       *     }","       *   },","       *   'fn': function() {","       *     element.removeChild(element.lastChild);","       *   }","       * });","       *","       * // compiles to something like:","       * var c = this.count,","       *     element = document.getElementById('container');","       * while (c--) {","       *   element.appendChild(document.createElement('div'));","       * }","       * var start = new Date;","       * while (count--) {","       *   element.removeChild(element.lastChild);","       * }","       * var end = new Date - start;","       *","       * // or using strings","       * var bench = Benchmark({","       *   'setup': '\\","       *     var a = 0;\\n\\","       *     (function() {\\n\\","       *       (function() {\\n\\","       *         (function() {',","       *   'fn': 'a += 1;',","       *   'teardown': '\\","       *          }())\\n\\","       *        }())\\n\\","       *      }())'","       * });","       *","       * // compiles to something like:","       * var a = 0;","       * (function() {","       *   (function() {","       *     (function() {","       *       var start = new Date;","       *       while (count--) {","       *         a += 1;","       *       }","       *       var end = new Date - start;","       *     }())","       *   }())","       * }())","       */","      'setup': _.noop,","","      /**","       * Compiled into the test and executed immediately **after** the test loop.","       *","       * @memberOf Benchmark","       * @type {Function|string}","       */","      'teardown': _.noop,","","      /**","       * An object of stats including mean, margin or error, and standard deviation.","       *","       * @memberOf Benchmark","       * @type Object","       */","      'stats': {","","        /**","         * The margin of error.","         *","         * @memberOf Benchmark#stats","         * @type number","         */","        'moe': 0,","","        /**","         * The relative margin of error (expressed as a percentage of the mean).","         *","         * @memberOf Benchmark#stats","         * @type number","         */","        'rme': 0,","","        /**","         * The standard error of the mean.","         *","         * @memberOf Benchmark#stats","         * @type number","         */","        'sem': 0,","","        /**","         * The sample standard deviation.","         *","         * @memberOf Benchmark#stats","         * @type number","         */","        'deviation': 0,","","        /**","         * The sample arithmetic mean (secs).","         *","         * @memberOf Benchmark#stats","         * @type number","         */","        'mean': 0,","","        /**","         * The array of sampled periods.","         *","         * @memberOf Benchmark#stats","         * @type Array","         */","        'sample': [],","","        /**","         * The sample variance.","         *","         * @memberOf Benchmark#stats","         * @type number","         */","        'variance': 0","      },","","      /**","       * An object of timing data including cycle, elapsed, period, start, and stop.","       *","       * @memberOf Benchmark","       * @type Object","       */","      'times': {","","        /**","         * The time taken to complete the last cycle (secs).","         *","         * @memberOf Benchmark#times","         * @type number","         */","        'cycle': 0,","","        /**","         * The time taken to complete the benchmark (secs).","         *","         * @memberOf Benchmark#times","         * @type number","         */","        'elapsed': 0,","","        /**","         * The time taken to execute the test once (secs).","         *","         * @memberOf Benchmark#times","         * @type number","         */","        'period': 0,","","        /**","         * A timestamp of when the benchmark started (ms).","         *","         * @memberOf Benchmark#times","         * @type number","         */","        'timeStamp': 0","      }","    });","","    _.assign(Benchmark.prototype, {","      'abort': abort,","      'clone': clone,","      'compare': compare,","      'emit': emit,","      'listeners': listeners,","      'off': off,","      'on': on,","      'reset': reset,","      'run': run,","      'toString': toStringBench","    });","","    /*------------------------------------------------------------------------*/","","    _.assign(Deferred.prototype, {","","      /**","       * The deferred benchmark instance.","       *","       * @memberOf Benchmark.Deferred","       * @type Object","       */","      'benchmark': null,","","      /**","       * The number of deferred cycles performed while benchmarking.","       *","       * @memberOf Benchmark.Deferred","       * @type number","       */","      'cycles': 0,","","      /**","       * The time taken to complete the deferred benchmark (secs).","       *","       * @memberOf Benchmark.Deferred","       * @type number","       */","      'elapsed': 0,","","      /**","       * A timestamp of when the deferred benchmark started (ms).","       *","       * @memberOf Benchmark.Deferred","       * @type number","       */","      'timeStamp': 0","    });","","    _.assign(Deferred.prototype, {","      'resolve': resolve","    });","","    /*------------------------------------------------------------------------*/","","    _.assign(Event.prototype, {","","      /**","       * A flag to indicate if the emitters listener iteration is aborted.","       *","       * @memberOf Benchmark.Event","       * @type boolean","       */","      'aborted': false,","","      /**","       * A flag to indicate if the default action is cancelled.","       *","       * @memberOf Benchmark.Event","       * @type boolean","       */","      'cancelled': false,","","      /**","       * The object whose listeners are currently being processed.","       *","       * @memberOf Benchmark.Event","       * @type Object","       */","      'currentTarget': undefined,","","      /**","       * The return value of the last executed listener.","       *","       * @memberOf Benchmark.Event","       * @type Mixed","       */","      'result': undefined,","","      /**","       * The object to which the event was originally emitted.","       *","       * @memberOf Benchmark.Event","       * @type Object","       */","      'target': undefined,","","      /**","       * A timestamp of when the event was created (ms).","       *","       * @memberOf Benchmark.Event","       * @type number","       */","      'timeStamp': 0,","","      /**","       * The event type.","       *","       * @memberOf Benchmark.Event","       * @type string","       */","      'type': ''","    });","","    /*------------------------------------------------------------------------*/","","    /**","     * The default options copied by suite instances.","     *","     * @static","     * @memberOf Benchmark.Suite","     * @type Object","     */","    Suite.options = {","","      /**","       * The name of the suite.","       *","       * @memberOf Benchmark.Suite.options","       * @type string","       */","      'name': undefined","    };","","    /*------------------------------------------------------------------------*/","","    _.assign(Suite.prototype, {","","      /**","       * The number of benchmarks in the suite.","       *","       * @memberOf Benchmark.Suite","       * @type number","       */","      'length': 0,","","      /**","       * A flag to indicate if the suite is aborted.","       *","       * @memberOf Benchmark.Suite","       * @type boolean","       */","      'aborted': false,","","      /**","       * A flag to indicate if the suite is running.","       *","       * @memberOf Benchmark.Suite","       * @type boolean","       */","      'running': false","    });","","    _.assign(Suite.prototype, {","      'abort': abortSuite,","      'add': add,","      'clone': cloneSuite,","      'emit': emit,","      'filter': filterSuite,","      'join': arrayRef.join,","      'listeners': listeners,","      'off': off,","      'on': on,","      'pop': arrayRef.pop,","      'push': push,","      'reset': resetSuite,","      'run': runSuite,","      'reverse': arrayRef.reverse,","      'shift': shift,","      'slice': slice,","      'sort': arrayRef.sort,","      'splice': arrayRef.splice,","      'unshift': unshift","    });","","    /*------------------------------------------------------------------------*/","","    // Expose Deferred, Event, and Suite.","    _.assign(Benchmark, {","      'Deferred': Deferred,","      'Event': Event,","      'Suite': Suite","    });","","    /*------------------------------------------------------------------------*/","","    // Add lodash methods as Suite methods.","    _.each(['each', 'forEach', 'indexOf', 'map', 'reduce'], function(methodName) {","      var func = _[methodName];","      Suite.prototype[methodName] = function() {","        var args = [this];","        push.apply(args, arguments);","        return func.apply(_, args);","      };","    });","","    // Avoid array-like object bugs with `Array#shift` and `Array#splice`","    // in Firefox < 10 and IE < 9.","    _.each(['pop', 'shift', 'splice'], function(methodName) {","      var func = arrayRef[methodName];","","      Suite.prototype[methodName] = function() {","        var value = this,","            result = func.apply(value, arguments);","","        if (value.length === 0) {","          delete value[0];","        }","        return result;","      };","    });","","    // Avoid buggy `Array#unshift` in IE < 8 which doesn't return the new","    // length of the array.","    Suite.prototype.unshift = function() {","      var value = this;","      unshift.apply(value, arguments);","      return value.length;","    };","","    return Benchmark;","  }","","  /*--------------------------------------------------------------------------*/","","  // Export Benchmark.","  // Some AMD build optimizers, like r.js, check for condition patterns like the following:","  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {","    // Define as an anonymous module so, through path mapping, it can be aliased.","    define(['lodash', 'platform'], function(_, platform) {","      return runInContext({","        '_': _,","        'platform': platform","      });","    });","  }","  else {","    var Benchmark = runInContext();","","    // Check for `exports` after `define` in case a build optimizer adds an `exports` object.","    if (freeExports && freeModule) {","      // Export for Node.js.","      if (moduleExports) {","        (freeModule.exports = Benchmark).Benchmark = Benchmark;","      }","      // Export for CommonJS support.","      freeExports.Benchmark = Benchmark;","    }","    else {","      // Export to the global object.","      root.Benchmark = Benchmark;","    }","  }","}.call(this));",""],"l":{"8":1,"12":1,"15":1,"21":1,"24":1,"27":1,"30":1,"33":1,"34":1,"35":1,"39":1,"42":1,"45":1,"48":1,"51":1,"54":1,"61":1,"73":1,"86":1,"125":1,"127":1,"128":1,"129":0,"130":0,"136":1,"139":1,"148":1,"152":1,"168":1,"171":1,"174":1,"177":1,"180":1,"183":1,"186":1,"195":1,"197":1,"205":1,"213":1,"222":1,"227":1,"228":0,"233":1,"243":1,"356":1,"357":0,"360":0,"361":0,"364":0,"366":0,"368":0,"370":0,"371":0,"373":0,"375":0,"376":0,"377":0,"381":0,"383":0,"385":0,"386":0,"388":0,"389":0,"399":1,"400":0,"401":0,"402":0,"404":0,"405":0,"415":1,"416":0,"417":0,"418":0,"420":0,"467":1,"468":0,"471":0,"472":0,"475":0,"477":0,"480":0,"482":0,"495":1,"497":0,"498":0,"510":1,"512":0,"513":0,"517":0,"518":0,"519":0,"520":0,"524":0,"525":0,"535":1,"536":0,"545":1,"546":0,"547":0,"557":1,"558":0,"569":1,"570":0,"571":0,"582":1,"583":0,"584":0,"585":0,"586":0,"588":0,"591":0,"594":0,"607":1,"608":0,"621":1,"622":4,"623":0,"625":4,"626":4,"636":1,"637":0,"647":1,"648":3,"649":3,"651":3,"660":1,"661":0,"671":0,"674":0,"675":0,"677":0,"678":0,"679":0,"681":0,"682":0,"692":1,"693":0,"695":0,"696":0,"698":0,"699":0,"700":0,"702":0,"703":0,"716":1,"717":0,"721":0,"723":0,"724":0,"725":0,"727":0,"728":0,"731":0,"732":0,"733":0,"763":1,"764":0,"766":0,"767":0,"770":0,"772":0,"773":0,"774":0,"777":0,"778":0,"781":0,"792":1,"793":0,"794":0,"837":1,"838":0,"849":1,"850":0,"853":0,"855":0,"856":0,"857":0,"860":0,"862":0,"868":1,"869":0,"873":0,"874":0,"875":0,"878":0,"879":0,"880":0,"881":0,"884":0,"885":0,"886":0,"887":0,"889":0,"891":0,"895":0,"899":0,"900":0,"905":0,"906":0,"908":0,"915":1,"917":0,"918":0,"925":1,"926":0,"929":0,"930":0,"933":0,"938":0,"940":0,"943":0,"944":0,"945":0,"946":0,"949":0,"951":0,"952":0,"953":0,"954":0,"957":0,"959":0,"960":0,"962":0,"963":0,"967":0,"968":0,"970":0,"974":0,"987":1,"988":0,"992":0,"993":0,"994":0,"996":0,"1008":1,"1009":0,"1013":0,"1014":0,"1015":0,"1016":0,"1018":0,"1019":0,"1020":0,"1022":0,"1023":0,"1024":0,"1028":0,"1068":1,"1069":0,"1073":0,"1074":0,"1076":0,"1087":1,"1088":0,"1092":0,"1093":0,"1094":0,"1099":0,"1110":1,"1111":0,"1114":0,"1115":0,"1125":1,"1126":0,"1130":0,"1132":0,"1133":0,"1134":0,"1137":0,"1139":0,"1140":0,"1141":0,"1144":0,"1162":1,"1163":0,"1165":0,"1166":0,"1167":0,"1169":0,"1174":0,"1177":0,"1178":0,"1179":0,"1181":0,"1182":0,"1185":0,"1186":0,"1189":0,"1202":1,"1203":0,"1209":0,"1210":0,"1211":0,"1213":0,"1214":0,"1215":0,"1216":0,"1218":0,"1221":0,"1232":1,"1233":0,"1236":0,"1265":1,"1266":0,"1269":0,"1270":0,"1272":0,"1273":0,"1274":0,"1275":0,"1276":0,"1278":0,"1279":0,"1280":0,"1281":0,"1282":0,"1285":0,"1289":0,"1307":1,"1308":0,"1311":0,"1312":0,"1317":0,"1328":1,"1329":0,"1333":0,"1334":0,"1335":0,"1336":0,"1338":0,"1339":0,"1340":0,"1342":0,"1343":0,"1344":0,"1346":0,"1347":0,"1348":0,"1352":0,"1367":1,"1368":0,"1372":0,"1375":0,"1376":0,"1377":0,"1381":0,"1391":1,"1392":0,"1395":0,"1396":0,"1398":0,"1410":1,"1411":0,"1412":0,"1416":1,"1417":0,"1418":0,"1422":1,"1423":0,"1427":0,"1430":0,"1431":0,"1434":0,"1435":0,"1444":1,"1445":0,"1446":0,"1448":0,"1449":0,"1450":0,"1451":0,"1453":0,"1460":0,"1465":0,"1466":0,"1467":0,"1472":0,"1473":0,"1475":0,"1476":0,"1478":0,"1479":0,"1480":0,"1483":0,"1484":0,"1485":0,"1486":0,"1490":0,"1491":0,"1492":0,"1495":0,"1496":0,"1498":0,"1501":0,"1502":0,"1509":0,"1511":0,"1512":0,"1515":0,"1525":1,"1526":0,"1535":0,"1536":0,"1537":0,"1538":0,"1539":0,"1540":0,"1543":0,"1545":0,"1548":0,"1551":0,"1563":1,"1564":0,"1569":0,"1570":0,"1572":0,"1573":0,"1574":0,"1576":0,"1585":0,"1590":0,"1608":0,"1611":0,"1612":0,"1615":0,"1617":0,"1620":0,"1621":0,"1622":0,"1625":0,"1626":0,"1627":0,"1630":0,"1631":0,"1639":0,"1641":0,"1643":0,"1644":0,"1645":0,"1646":0,"1649":0,"1650":0,"1651":0,"1656":0,"1657":0,"1658":0,"1660":0,"1668":1,"1669":0,"1672":0,"1674":0,"1682":0,"1683":0,"1688":0,"1689":0,"1690":0,"1695":0,"1701":0,"1702":0,"1708":0,"1714":0,"1719":0,"1725":0,"1735":1,"1736":0,"1744":0,"1745":0,"1746":0,"1747":0,"1748":0,"1749":0,"1751":0,"1752":0,"1755":0,"1756":0,"1757":0,"1758":0,"1759":0,"1761":0,"1762":0,"1763":0,"1766":0,"1767":0,"1770":0,"1771":0,"1773":0,"1774":0,"1778":0,"1784":1,"1786":0,"1794":0,"1795":0,"1796":0,"1801":0,"1802":0,"1805":0,"1806":0,"1809":0,"1812":0,"1813":0,"1817":0,"1818":0,"1830":1,"1831":0,"1833":0,"1843":1,"1844":0,"1858":1,"1859":0,"1862":0,"1863":0,"1865":0,"1868":0,"1869":0,"1871":0,"1872":0,"1873":0,"1875":0,"1876":0,"1879":0,"1881":0,"1882":0,"1889":1,"1890":0,"1904":0,"1907":0,"1908":0,"1911":0,"1913":0,"1915":0,"1917":0,"1919":0,"1921":0,"1923":0,"1925":0,"1927":0,"1929":0,"1943":0,"1945":0,"1946":0,"1947":0,"1948":0,"1950":0,"1951":0,"1952":0,"1953":0,"1957":0,"1958":0,"1961":0,"1965":0,"1966":0,"1971":0,"1984":1,"1985":0,"1987":0,"1988":0,"1989":0,"1990":0,"1992":0,"2004":0,"2006":0,"2007":0,"2008":0,"2010":0,"2011":0,"2013":0,"2014":0,"2015":0,"2016":0,"2017":0,"2018":0,"2023":0,"2025":0,"2027":0,"2029":0,"2031":0,"2033":0,"2035":0,"2038":0,"2039":0,"2042":0,"2043":0,"2045":0,"2049":0,"2050":0,"2051":0,"2052":0,"2055":0,"2057":0,"2058":0,"2059":0,"2060":0,"2061":0,"2063":0,"2069":0,"2070":0,"2073":0,"2093":1,"2094":0,"2098":0,"2099":0,"2100":0,"2102":0,"2103":0,"2104":0,"2106":0,"2107":0,"2110":0,"2111":0,"2112":0,"2114":0,"2119":0,"2122":0,"2133":1,"2286":0,"2300":1,"2310":1,"2311":7,"2316":1,"2560":1,"2575":1,"2610":1,"2616":1,"2684":1,"2697":1,"2724":1,"2749":1,"2758":1,"2759":5,"2760":5,"2761":0,"2762":0,"2763":0,"2769":1,"2770":3,"2772":3,"2773":0,"2776":0,"2777":0,"2779":0,"2785":1,"2786":0,"2787":0,"2788":0,"2791":1,"2798":1,"2800":0,"2801":0,"2808":1,"2811":1,"2813":1,"2814":1,"2817":1,"2821":0}}}